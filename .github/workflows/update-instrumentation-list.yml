name: Update Instrumentation Data

on:
  # Run daily at 9 AM UTC
  schedule:
    - cron: '0 9 * * *'

  # Allow manual triggering
  workflow_dispatch:
    inputs:
      readme_version:
        description: 'Specific version for README updates (e.g., "v2.21.0"). Leave empty to use latest release.'
        required: false
        type: string
        default: ''

jobs:
  update-instrumentation-data:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GH_PAT }}
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install Python dependencies for update script
      run: |
        pip install requests pyyaml
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    
    - name: Run update script (downloads YAMLs and generates V2 data)
      env:
        GITHUB_TOKEN: ${{ secrets.GH_PAT }}
      run: |
        python scripts/update-instrumentation-list.py
    
    - name: Update library READMEs (latest release)
      if: ${{ inputs.readme_version == '' }}
      env:
        GITHUB_TOKEN: ${{ secrets.GH_PAT }}
      run: |
        python scripts/update-library-readmes.py
    
    - name: Update library READMEs (specific version)
      if: ${{ inputs.readme_version != '' }}
      env:
        GITHUB_TOKEN: ${{ secrets.GH_PAT }}
      run: |
        python scripts/update-library-readmes.py --version "${{ inputs.readme_version }}"
    
    - name: Configure Git
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
    
    - name: Check for changes
      id: git-check
      run: |
        echo "Checking for changes..."
        git status
        
        # Add data directory to catch new README files
        git add data/ frontend/public/data/ instrumentation-list-*.yaml 2>/dev/null || true
        
        # Check if there are any changes (staged or unstaged)
        if ! git diff --exit-code --quiet || ! git diff --cached --exit-code --quiet; then
          echo "changes=true" >> $GITHUB_OUTPUT
          echo "Changes detected"
          
          # Count different types of changes
          YAML_FILES=$(git diff --name-only --cached 2>/dev/null | grep 'instrumentation-list-.*\.yaml$' | wc -l || echo "0")
          V2_DATA_FILES=$(git diff --name-only --cached 2>/dev/null | grep 'frontend/public/data/' | wc -l || echo "0")
          README_FILES=$(git diff --name-only --cached 2>/dev/null | grep 'data/.*\.md$' | wc -l || echo "0")
          
          echo "yaml_files=$YAML_FILES" >> $GITHUB_OUTPUT
          echo "v2_data_files=$V2_DATA_FILES" >> $GITHUB_OUTPUT
          echo "readme_files=$README_FILES" >> $GITHUB_OUTPUT
          
          echo "Modified files by category:"
          echo "- YAML files: $YAML_FILES"
          echo "- V2 data files: $V2_DATA_FILES"
          echo "- README files: $README_FILES"
        else
          echo "changes=false" >> $GITHUB_OUTPUT
          echo "No changes detected"
        fi
    
    - name: Create Pull Request
      if: steps.git-check.outputs.changes == 'true'
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GH_PAT }}
        commit-message: 'chore: update instrumentation data'
        title: 'Update instrumentation data'
        body: |
          ## Automated Instrumentation Data Update
          
          This PR updates instrumentation data from the OpenTelemetry Java Instrumentation repository.
          
          ### Changes:
          - **YAML files**: ${{ steps.git-check.outputs.yaml_files }} updated
          - **V2 data files**: ${{ steps.git-check.outputs.v2_data_files }} updated  
          - **Library READMEs**: ${{ steps.git-check.outputs.readme_files }} updated
          
          ### Data Pipeline:
          1. Downloaded latest `instrumentation-list.yaml`
          2. Generated V2 content-addressed data (all versions from 2.19+)
          3. Downloaded library README files for reference
        
          ### Source:
          - **Instrumentation List**: https://github.com/open-telemetry/opentelemetry-java-instrumentation/blob/main/docs/instrumentation-list.yaml
          - **Library READMEs**: https://github.com/open-telemetry/opentelemetry-java-instrumentation/tree/main/instrumentation
          
          **Auto-generated by GitHub Actions**
        branch: update-instrumentation-data
        base: main
        delete-branch: true