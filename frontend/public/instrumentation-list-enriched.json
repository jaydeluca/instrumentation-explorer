{
  "2.17": [
    {
      "description": "This instrumentation enables SERVER spans and metrics for the ActiveJ HTTP server.",
      "minimum_java_version": 17,
      "name": "activej-http-6.0",
      "scope": {
        "name": "io.opentelemetry.activej-http-6.0"
      },
      "semconv": [
        "Client",
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/activej-http-6.0",
      "target_versions": {
        "javaagent": [
          "io.activej:activej-http:[6.0,)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.scheme",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "Duration of HTTP server requests.",
              "name": "http.server.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "client.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.path",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.query",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.scheme",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "user_agent.original",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "SERVER"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "name": "akka-actor-2.3",
      "scope": {
        "name": "io.opentelemetry.akka-actor-2.3"
      },
      "semconv": [],
      "source_path": "instrumentation/akka/akka-actor-2.3",
      "target_versions": {
        "javaagent": [
          "com.typesafe.akka:akka-actor_2.11:[2.3,)",
          "com.typesafe.akka:akka-actor_2.12:[2.3,)",
          "com.typesafe.akka:akka-actor_2.13:[2.3,)"
        ]
      }
    },
    {
      "name": "akka-actor-fork-join-2.5",
      "scope": {
        "name": "io.opentelemetry.akka-actor-fork-join-2.5"
      },
      "semconv": [],
      "source_path": "instrumentation/akka/akka-actor-fork-join-2.5",
      "target_versions": {
        "javaagent": [
          "com.typesafe.akka:akka-actor_2.11:[2.5,)",
          "com.typesafe.akka:akka-actor_2.12:[2.5,2.6)",
          "com.typesafe.akka:akka-actor_2.13:[2.5.23,2.6)"
        ]
      }
    },
    {
      "description": "This instrumentation enables CLIENT and SERVER spans and metrics for the Akka HTTP client and server.",
      "name": "akka-http-10.0",
      "scope": {
        "name": "io.opentelemetry.akka-http-10.0"
      },
      "semconv": [
        "Client",
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/akka/akka-http-10.0",
      "target_versions": {
        "javaagent": [
          "com.typesafe.akka:akka-http_2.11:[10,)",
          "com.typesafe.akka:akka-http_2.12:[10,)",
          "com.typesafe.akka:akka-http_2.13:[10,)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            },
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "http.route",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.scheme",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "Duration of HTTP server requests.",
              "name": "http.server.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            },
            {
              "attributes": [
                {
                  "name": "client.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "http.route",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.path",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.query",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.scheme",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "user_agent.original",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "SERVER"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "description": "The Alibaba Druid instrumentation generates database connection pool metrics for druid data sources.\n",
      "name": "alibaba-druid-1.0",
      "scope": {
        "name": "io.opentelemetry.alibaba-druid-1.0"
      },
      "semconv": [
        "Database Client"
      ],
      "source_path": "instrumentation/alibaba-druid-1.0",
      "target_versions": {
        "javaagent": [
          "com.alibaba:druid:(,)"
        ],
        "library": [
          "com.alibaba:druid:1.0.0"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                }
              ],
              "description": "The maximum number of idle open connections allowed.",
              "name": "db.client.connections.idle.max",
              "type": "LONG_SUM",
              "unit": "connections"
            },
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                }
              ],
              "description": "The minimum number of idle open connections allowed.",
              "name": "db.client.connections.idle.min",
              "type": "LONG_SUM",
              "unit": "connections"
            },
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                }
              ],
              "description": "The maximum number of open connections allowed.",
              "name": "db.client.connections.max",
              "type": "LONG_SUM",
              "unit": "connections"
            },
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                }
              ],
              "description": "The number of pending requests for an open connection, cumulative for the entire pool.",
              "name": "db.client.connections.pending_requests",
              "type": "LONG_SUM",
              "unit": "requests"
            },
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                },
                {
                  "name": "state",
                  "type": "STRING"
                }
              ],
              "description": "The number of connections that are currently in state described by the state attribute.",
              "name": "db.client.connections.usage",
              "type": "LONG_SUM",
              "unit": "connections"
            }
          ],
          "when": "default"
        },
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.client.connection.state",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The number of connections that are currently in state described by the state attribute.",
              "name": "db.client.connection.count",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "connection"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The maximum number of idle open connections allowed.",
              "name": "db.client.connection.idle.max",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "connection"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The minimum number of idle open connections allowed.",
              "name": "db.client.connection.idle.min",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "connection"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The maximum number of open connections allowed.",
              "name": "db.client.connection.max",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "connection"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The number of current pending requests for an open connection.",
              "name": "db.client.connection.pending_requests",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "request"
            }
          ],
          "when": "otel.semconv-stability.opt-in=database"
        }
      ]
    },
    {
      "description": "This instrumentation enables database connection pools metrics for Apache DBCP.\nThe instrumentation uses `MBeanRegistration` methods for lifecycle detection, therefore it only activates if the `BasicDataSource` is registered to an `MBeanServer`. If using Spring Boot, this happens automatically as all Spring beans that support JMX registration are automatically registered by default.\n",
      "name": "apache-dbcp-2.0",
      "scope": {
        "name": "io.opentelemetry.apache-dbcp-2.0"
      },
      "semconv": [
        "Database Client"
      ],
      "source_path": "instrumentation/apache-dbcp-2.0",
      "target_versions": {
        "javaagent": [
          "org.apache.commons:commons-dbcp2:[2,)"
        ],
        "library": [
          "org.apache.commons:commons-dbcp2:2.0"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                }
              ],
              "description": "The maximum number of idle open connections allowed.",
              "name": "db.client.connections.idle.max",
              "type": "LONG_SUM",
              "unit": "connections"
            },
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                }
              ],
              "description": "The minimum number of idle open connections allowed.",
              "name": "db.client.connections.idle.min",
              "type": "LONG_SUM",
              "unit": "connections"
            },
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                }
              ],
              "description": "The maximum number of open connections allowed.",
              "name": "db.client.connections.max",
              "type": "LONG_SUM",
              "unit": "connections"
            },
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                },
                {
                  "name": "state",
                  "type": "STRING"
                }
              ],
              "description": "The number of connections that are currently in state described by the state attribute.",
              "name": "db.client.connections.usage",
              "type": "LONG_SUM",
              "unit": "connections"
            }
          ],
          "when": "default"
        },
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.client.connection.state",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The number of connections that are currently in state described by the state attribute.",
              "name": "db.client.connection.count",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "connection"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The maximum number of idle open connections allowed.",
              "name": "db.client.connection.idle.max",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "connection"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The minimum number of idle open connections allowed.",
              "name": "db.client.connection.idle.min",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "connection"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The maximum number of open connections allowed.",
              "name": "db.client.connection.max",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "connection"
            }
          ],
          "when": "otel.semconv-stability.opt-in=database"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": "",
          "description": "Used to specify a mapping from host names or IP addresses to peer services.",
          "name": "otel.instrumentation.common.peer-service-mapping",
          "type": "map"
        }
      ],
      "description": "The Apache Dubbo instrumentation provides client and server spans for Apache Dubbo RPC calls. Each call produces a span named after the Dubbo method, enriched with standard RPC attributes (system, service, method), network attributes, and error details if an exception occurs.",
      "name": "apache-dubbo-2.7",
      "scope": {
        "name": "io.opentelemetry.apache-dubbo-2.7"
      },
      "semconv": [
        "Aws",
        "Database Client"
      ],
      "source_path": "instrumentation/apache-dubbo-2.7",
      "target_versions": {
        "javaagent": [
          "org.apache.dubbo:dubbo:[2.7,)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "rpc.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.service",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.system",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "CLIENT"
            },
            {
              "attributes": [
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "rpc.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.service",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.system",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "SERVER"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "description": "This instrumentation enables CLIENT spans and metrics for the Apache HttpAsyncClient.",
      "name": "apache-httpasyncclient-4.1",
      "scope": {
        "name": "io.opentelemetry.apache-httpasyncclient-4.1"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/apache-httpasyncclient-4.1",
      "target_versions": {
        "javaagent": [
          "org.apache.httpcomponents:httpasyncclient:[4.1,)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "description": "This instrumentation enables CLIENT spans and metrics for versions 2 and 3 of the Apache HttpClient.",
      "name": "apache-httpclient-2.0",
      "scope": {
        "name": "io.opentelemetry.apache-httpclient-2.0"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/apache-httpclient/apache-httpclient-2.0",
      "target_versions": {
        "javaagent": [
          "commons-httpclient:commons-httpclient:[2.0,4.0)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "description": "This instrumentation enables CLIENT spans and metrics for version 4 of the Apache HttpClient.",
      "name": "apache-httpclient-4.0",
      "scope": {
        "name": "io.opentelemetry.apache-httpclient-4.0"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/apache-httpclient/apache-httpclient-4.0",
      "target_versions": {
        "javaagent": [
          "io.dropwizard:dropwizard-client:(,3.0.0)",
          "org.apache.httpcomponents:httpclient:[4.0,)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "description": "This instrumentation provides a library integration that enables CLIENT spans and metrics for the Apache HttpClient.",
      "name": "apache-httpclient-4.3",
      "scope": {
        "name": "io.opentelemetry.apache-httpclient-4.3"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/apache-httpclient/apache-httpclient-4.3",
      "target_versions": {
        "library": [
          "org.apache.httpcomponents:httpclient:[4.3,4.+)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.resend_count",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "description": "This instrumentation enables CLIENT spans and metrics for version 5 of the Apache HttpClient.",
      "name": "apache-httpclient-5.0",
      "scope": {
        "name": "io.opentelemetry.apache-httpclient-5.0"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/apache-httpclient/apache-httpclient-5.0",
      "target_versions": {
        "javaagent": [
          "org.apache.httpcomponents.client5:httpclient5:[5.0,)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "description": "This instrumentation provides a library integration that enables CLIENT spans and metrics for the Apache HttpClient.",
      "name": "apache-httpclient-5.2",
      "scope": {
        "name": "io.opentelemetry.apache-httpclient-5.2"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/apache-httpclient/apache-httpclient-5.2",
      "target_versions": {
        "library": [
          "org.apache.httpcomponents.client5:httpclient5:5.2.1"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.resend_count",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enables experimental `apache-shenyu.meta.` prefixed span attributes `app-name`, `service-name`, `context-path`, `param-types`, `id`, `method-name`, `rpc-type`, `path` and `rpc-ext`.\n",
          "name": "otel.instrumentation.apache-shenyu.experimental-span-attributes",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation does not emit telemetry on its own. Instead, it augments existing SERVER spans and HTTP server metrics with the HTTP route and Shenyu specific attributes.\n",
      "name": "apache-shenyu-2.4",
      "scope": {
        "name": "io.opentelemetry.apache-shenyu-2.4"
      },
      "semconv": [],
      "source_path": "instrumentation/apache-shenyu-2.4",
      "target_versions": {
        "javaagent": [
          "org.apache.shenyu:shenyu-web:[2.4.0,)"
        ]
      }
    },
    {
      "description": "This instrumentation enables CLIENT and SERVER spans and metrics for the Armeria HTTP client and server.",
      "name": "armeria-1.3",
      "scope": {
        "name": "io.opentelemetry.armeria-1.3"
      },
      "semconv": [
        "Client",
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/armeria/armeria-1.3",
      "target_versions": {
        "javaagent": [
          "com.linecorp.armeria:armeria:[1.3.0,)"
        ],
        "library": [
          "com.linecorp.armeria:armeria:1.3.0"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            },
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "http.route",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.scheme",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "Duration of HTTP server requests.",
              "name": "http.server.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            },
            {
              "attributes": [
                {
                  "name": "client.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "http.route",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.path",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.query",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.scheme",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "user_agent.original",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "SERVER"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "description": "This instrumentation enables CLIENT and SERVER spans and metrics for the Armeria gRPC client and server.",
      "name": "armeria-grpc-1.14",
      "scope": {
        "name": "io.opentelemetry.armeria-grpc-1.14"
      },
      "semconv": [],
      "source_path": "instrumentation/armeria/armeria-grpc-1.14",
      "target_versions": {
        "javaagent": [
          "com.linecorp.armeria:armeria-grpc:[1.14.0,)"
        ]
      }
    },
    {
      "description": "This instrumentation enables CLIENT spans and metrics for version 1 of the AsyncHttpClient (AHC) HTTP client.",
      "name": "async-http-client-1.9",
      "scope": {
        "name": "io.opentelemetry.async-http-client-1.9"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/async-http-client/async-http-client-1.9",
      "target_versions": {
        "javaagent": [
          "com.ning:async-http-client:[1.9.0,)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "description": "This instrumentation enables CLIENT spans and metrics for version 2 of the AsyncHttpClient (AHC) HTTP client.",
      "name": "async-http-client-2.0",
      "scope": {
        "name": "io.opentelemetry.async-http-client-2.0"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/async-http-client/async-http-client-2.0",
      "target_versions": {
        "javaagent": [
          "org.asynchttpclient:async-http-client:[2.0.0,)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "description": "This instrumentation does not emit telemetry on its own. Instead, it hooks into the Avaje Jex Context to extract the HTTP route and attach it to existing SERVER spans and HTTP server metrics.\n",
      "minimum_java_version": 21,
      "name": "avaje-jex-3.0",
      "scope": {
        "name": "io.opentelemetry.avaje-jex-3.0"
      },
      "semconv": [],
      "source_path": "instrumentation/avaje-jex-3.0",
      "target_versions": {
        "javaagent": [
          "io.avaje:avaje-jex:[3.0,)"
        ]
      }
    },
    {
      "configurations": [
        {
          "default": 10000,
          "description": "Flush timeout in milliseconds.",
          "name": "otel.instrumentation.aws-lambda.flush-timeout",
          "type": "int"
        }
      ],
      "description": "Provides lightweight instrumentation of the Lambda core library, supporting all versions. Use this package if you only use `RequestStreamHandler` or know you don't use any event classes from `aws-lambda-java-events`. This also includes when you are using `aws-serverless-java-container` to run e.g., a Spring Boot application on Lambda.\n",
      "name": "aws-lambda-core-1.0",
      "scope": {
        "name": "io.opentelemetry.aws-lambda-core-1.0"
      },
      "semconv": [],
      "source_path": "instrumentation/aws-lambda/aws-lambda-core-1.0",
      "target_versions": {
        "javaagent": [
          "com.amazonaws:aws-lambda-java-core:[1.0.0,)"
        ],
        "library": [
          "com.amazonaws:aws-lambda-java-core:1.0.0"
        ]
      }
    },
    {
      "configurations": [
        {
          "default": 10000,
          "description": "Flush timeout in milliseconds.",
          "name": "otel.instrumentation.aws-lambda.flush-timeout",
          "type": "int"
        }
      ],
      "description": "Provides full instrumentation of the Lambda library, including standard and custom event types, from `aws-lambda-java-events` 2.2+.\n",
      "name": "aws-lambda-events-2.2",
      "scope": {
        "name": "io.opentelemetry.aws-lambda-events-2.2"
      },
      "semconv": [],
      "source_path": "instrumentation/aws-lambda/aws-lambda-events-2.2",
      "target_versions": {
        "javaagent": [
          "com.amazonaws:aws-lambda-java-core:[1.0.0,)"
        ],
        "library": [
          "com.amazonaws:aws-lambda-java-core:1.0.0",
          "com.amazonaws:aws-lambda-java-events:2.2.1"
        ]
      }
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enables experimental span attributes for AWS SDK instrumentation.",
          "name": "otel.instrumentation.aws-sdk.experimental-span-attributes",
          "type": "boolean"
        },
        {
          "default": "",
          "description": "Allows configuring headers to capture as span attributes.",
          "name": "otel.instrumentation.messaging.experimental.capture-headers",
          "type": "list"
        },
        {
          "default": false,
          "description": "Enables experimental receive telemetry, which will cause consumers to start a new trace, with only a span link connecting it to the producer trace.\n",
          "name": "otel.instrumentation.messaging.experimental.receive-telemetry.enabled",
          "type": "boolean"
        }
      ],
      "name": "aws-sdk-1.11",
      "scope": {
        "name": "io.opentelemetry.aws-sdk-1.11"
      },
      "semconv": [
        "Database Client"
      ],
      "source_path": "instrumentation/aws-sdk/aws-sdk-1.11",
      "target_versions": {
        "javaagent": [
          "com.amazonaws:aws-java-sdk-core:[1.10.33,)",
          "com.amazonaws:aws-java-sdk-sqs:[1.10.33,)"
        ],
        "library": [
          "com.amazonaws:aws-java-sdk-core:1.11.0",
          "com.amazonaws:aws-java-sdk-sqs:[1.11.106,1.12.583)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of database client operations.",
              "name": "db.client.operation.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "when": "otel.semconv-stability.opt-in=database"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Determines whether errors returned by each individual HTTP request should be recorded as events for the SDK span.",
          "name": "otel.instrumentation.aws-sdk.experimental-record-individual-http-error",
          "type": "boolean"
        },
        {
          "default": false,
          "description": "Enables experimental span attributes for AWS SDK instrumentation.",
          "name": "otel.instrumentation.aws-sdk.experimental-span-attributes",
          "type": "boolean"
        },
        {
          "default": false,
          "description": "Determines whether the configured TextMapPropagator should be used to inject into supported messaging attributes (for SQS).",
          "name": "otel.instrumentation.aws-sdk.experimental-use-propagator-for-messaging",
          "type": "boolean"
        },
        {
          "default": false,
          "description": "Determines whether Generative AI events include full content of user and assistant messages. Note that full content can have data privacy and size concerns and care should be taken when enabling this",
          "name": "otel.instrumentation.genai.capture-message-content",
          "type": "boolean"
        },
        {
          "default": "",
          "description": "Allows configuring headers to capture as span attributes.",
          "name": "otel.instrumentation.messaging.experimental.capture-headers",
          "type": "list"
        },
        {
          "default": false,
          "description": "Enables experimental receive telemetry, which will cause consumers to start a new trace, with only a span link connecting it to the producer trace.\n",
          "name": "otel.instrumentation.messaging.experimental.receive-telemetry.enabled",
          "type": "boolean"
        }
      ],
      "name": "aws-sdk-2.2",
      "scope": {
        "name": "io.opentelemetry.aws-sdk-2.2"
      },
      "semconv": [
        "Database Client",
        "Gen Ai"
      ],
      "source_path": "instrumentation/aws-sdk/aws-sdk-2.2",
      "target_versions": {
        "javaagent": [
          "software.amazon.awssdk:aws-core:[2.2.0,)",
          "software.amazon.awssdk:bedrock-runtime:[2.25.63,)",
          "software.amazon.awssdk:lambda:[2.17.0,)",
          "software.amazon.awssdk:sns:[2.2.0,)",
          "software.amazon.awssdk:sqs:[2.2.0,)"
        ],
        "library": [
          "software.amazon.awssdk:aws-core:2.2.0",
          "software.amazon.awssdk:aws-json-protocol:2.2.0",
          "software.amazon.awssdk:lambda:2.2.0",
          "software.amazon.awssdk:sns:2.2.0",
          "software.amazon.awssdk:sqs:2.2.0"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "gen_ai.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "gen_ai.request.model",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "gen_ai.system",
                  "type": "STRING"
                }
              ],
              "description": "GenAI operation duration.",
              "name": "gen_ai.client.operation.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            },
            {
              "attributes": [
                {
                  "name": "gen_ai.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "gen_ai.request.model",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "gen_ai.system",
                  "type": "STRING"
                },
                {
                  "name": "gen_ai.token.type",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "Measures number of input and output tokens used.",
              "name": "gen_ai.client.token.usage",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "token"
            }
          ],
          "when": "default"
        },
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "Duration of database client operations.",
              "name": "db.client.operation.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "when": "otel.semconv-stability.opt-in=database"
        }
      ]
    },
    {
      "name": "azure-core-1.14",
      "scope": {
        "name": "io.opentelemetry.azure-core-1.14"
      },
      "semconv": [],
      "source_path": "instrumentation/azure-core/azure-core-1.14",
      "target_versions": {
        "javaagent": [
          "com.azure:azure-core:[1.14.0,1.19.0)"
        ]
      }
    },
    {
      "name": "azure-core-1.19",
      "scope": {
        "name": "io.opentelemetry.azure-core-1.19"
      },
      "semconv": [],
      "source_path": "instrumentation/azure-core/azure-core-1.19",
      "target_versions": {
        "javaagent": [
          "com.azure:azure-core:[1.19.0,1.36.0)"
        ]
      }
    },
    {
      "name": "azure-core-1.36",
      "scope": {
        "name": "io.opentelemetry.azure-core-1.36"
      },
      "semconv": [],
      "source_path": "instrumentation/azure-core/azure-core-1.36",
      "target_versions": {
        "javaagent": [
          "com.azure:azure-core:[1.36.0,)"
        ]
      }
    },
    {
      "description": "The c3p0 instrumentation provides connection pool metrics for c3p0 data sources.",
      "name": "c3p0-0.9",
      "scope": {
        "name": "io.opentelemetry.c3p0-0.9"
      },
      "semconv": [
        "Database Client"
      ],
      "source_path": "instrumentation/c3p0-0.9",
      "target_versions": {
        "javaagent": [
          "com.mchange:c3p0:(,)"
        ],
        "library": [
          "com.mchange:c3p0:0.9.2"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                }
              ],
              "description": "The number of pending requests for an open connection, cumulative for the entire pool.",
              "name": "db.client.connections.pending_requests",
              "type": "LONG_SUM",
              "unit": "requests"
            },
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                },
                {
                  "name": "state",
                  "type": "STRING"
                }
              ],
              "description": "The number of connections that are currently in state described by the state attribute.",
              "name": "db.client.connections.usage",
              "type": "LONG_SUM",
              "unit": "connections"
            }
          ],
          "when": "default"
        },
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.client.connection.state",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The number of connections that are currently in state described by the state attribute.",
              "name": "db.client.connection.count",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "connection"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The number of current pending requests for an open connection.",
              "name": "db.client.connection.pending_requests",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "request"
            }
          ],
          "when": "otel.semconv-stability.opt-in=database"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enable the capture of experimental span attributes.",
          "name": "otel.instrumentation.camel.experimental-span-attributes",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables tracing for Apache Camel 2.x applications by generating spans for each route execution. For Camel versions 3.5 and newer, users should instead use the native 'camel-opentelemetry' component provided directly by the Camel project.\n",
      "name": "camel-2.20",
      "scope": {
        "name": "io.opentelemetry.camel-2.20"
      },
      "semconv": [],
      "source_path": "instrumentation/camel-2.20",
      "target_versions": {
        "javaagent": [
          "org.apache.camel:camel-core:[2.19,3)"
        ]
      }
    },
    {
      "configurations": [
        {
          "default": true,
          "description": "Enables statement sanitization for database queries.",
          "name": "otel.instrumentation.common.db-statement-sanitizer.enabled",
          "type": "boolean"
        }
      ],
      "description": "Instruments the Cassandra database client, providing database client spans and metrics for Cassandra queries.\n",
      "name": "cassandra-3.0",
      "scope": {
        "name": "io.opentelemetry.cassandra-3.0"
      },
      "semconv": [],
      "source_path": "instrumentation/cassandra/cassandra-3.0",
      "target_versions": {
        "javaagent": [
          "com.datastax.cassandra:cassandra-driver-core:[3.0,4.0)"
        ]
      }
    },
    {
      "configurations": [
        {
          "default": true,
          "description": "Enables statement sanitization for database queries.",
          "name": "otel.instrumentation.common.db-statement-sanitizer.enabled",
          "type": "boolean"
        }
      ],
      "description": "Instruments the Cassandra database client, providing database client spans and metrics for Cassandra queries.\n",
      "name": "cassandra-4.0",
      "scope": {
        "name": "io.opentelemetry.cassandra-4.0"
      },
      "semconv": [],
      "source_path": "instrumentation/cassandra/cassandra-4.0",
      "target_versions": {
        "javaagent": [
          "com.datastax.oss:java-driver-core:[4.0,4.4)"
        ]
      }
    },
    {
      "configurations": [
        {
          "default": true,
          "description": "Enables statement sanitization for database queries.",
          "name": "otel.instrumentation.common.db-statement-sanitizer.enabled",
          "type": "boolean"
        }
      ],
      "description": "Instruments the Cassandra database client, providing database client spans and metrics for Cassandra queries.\n",
      "name": "cassandra-4.4",
      "scope": {
        "name": "io.opentelemetry.cassandra-4.4"
      },
      "semconv": [],
      "source_path": "instrumentation/cassandra/cassandra-4.4",
      "target_versions": {
        "javaagent": [
          "com.datastax.oss:java-driver-core:[4.4,]"
        ],
        "library": [
          "com.datastax.oss:java-driver-core:4.4.0"
        ]
      }
    },
    {
      "configurations": [
        {
          "default": true,
          "description": "Enables statement sanitization for database queries.",
          "name": "otel.instrumentation.common.db-statement-sanitizer.enabled",
          "type": "boolean"
        }
      ],
      "description": "Instruments the V1 ClickHouseClient, providing database client spans and metrics.",
      "name": "clickhouse-client-0.5",
      "scope": {
        "name": "io.opentelemetry.clickhouse-client-0.5"
      },
      "semconv": [
        "Database Client"
      ],
      "source_path": "instrumentation/clickhouse-client-0.5",
      "target_versions": {
        "javaagent": [
          "com.clickhouse.client:clickhouse-client:[0.5.0,)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.name",
                  "type": "STRING"
                },
                {
                  "name": "db.operation",
                  "type": "STRING"
                },
                {
                  "name": "db.statement",
                  "type": "STRING"
                },
                {
                  "name": "db.system",
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        },
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "db.namespace",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of database client operations.",
              "name": "db.client.operation.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.namespace",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.query.text",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.response.status_code",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "otel.semconv-stability.opt-in=database"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enables experimental span attributes couchbase.operation_id and couchbase.local.address",
          "name": "otel.instrumentation.couchbase.experimental-span-attributes",
          "type": "boolean"
        }
      ],
      "name": "couchbase-2.0",
      "scope": {
        "name": "io.opentelemetry.couchbase-2.0"
      },
      "semconv": [],
      "source_path": "instrumentation/couchbase/couchbase-2.0",
      "target_versions": {
        "javaagent": [
          "com.couchbase.client:java-client:[2,3)"
        ]
      }
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enables experimental span attributes couchbase.operation_id and couchbase.local.address",
          "name": "otel.instrumentation.couchbase.experimental-span-attributes",
          "type": "boolean"
        }
      ],
      "name": "couchbase-2.6",
      "scope": {
        "name": "io.opentelemetry.couchbase-2.6"
      },
      "semconv": [],
      "source_path": "instrumentation/couchbase/couchbase-2.6",
      "target_versions": {
        "javaagent": [
          "com.couchbase.client:java-client:[2.6.0,3)"
        ]
      }
    },
    {
      "description": "Couchbase instrumentation is owned by the Couchbase project. This instrumentation automatically configures the instrumentation provided by the Couchbase library.\n",
      "name": "couchbase-3.1",
      "scope": {
        "name": "io.opentelemetry.couchbase-3.1"
      },
      "semconv": [],
      "source_path": "instrumentation/couchbase/couchbase-3.1",
      "target_versions": {
        "javaagent": [
          "com.couchbase.client:java-client:[3.1,3.1.6)"
        ]
      }
    },
    {
      "description": "Couchbase instrumentation is owned by the Couchbase project. This instrumentation automatically configures the instrumentation provided by the Couchbase library.\n",
      "name": "couchbase-3.1.6",
      "scope": {
        "name": "io.opentelemetry.couchbase-3.1.6"
      },
      "semconv": [],
      "source_path": "instrumentation/couchbase/couchbase-3.1.6",
      "target_versions": {
        "javaagent": [
          "com.couchbase.client:java-client:[3.1.6,3.2.0)"
        ]
      }
    },
    {
      "description": "Couchbase instrumentation is owned by the Couchbase project. This instrumentation automatically configures the instrumentation provided by the Couchbase library.\n",
      "name": "couchbase-3.2",
      "scope": {
        "name": "io.opentelemetry.couchbase-3.2"
      },
      "semconv": [],
      "source_path": "instrumentation/couchbase/couchbase-3.2",
      "target_versions": {
        "javaagent": [
          "com.couchbase.client:java-client:[3.2.0,)"
        ]
      }
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enables the dropwizard metrics instrumentation.",
          "name": "otel.instrumentation.dropwizard-metrics.enabled",
          "type": "boolean"
        }
      ],
      "description": "The dropwizard-metrics instrumentation for the dropwizard/codahale metrics library produces OpenTelemetry compliant versions of the metrics generated by the Dropwizard MetricRegistry.\nThe Dropwizard metrics API does not have a concept of metric labels/tags/attributes, thus the data produced by this integration might be of very low quality, depending on how the API is used in the instrumented application.\n",
      "disabled_by_default": true,
      "name": "dropwizard-metrics-4.0",
      "scope": {
        "name": "io.opentelemetry.dropwizard-metrics-4.0"
      },
      "semconv": [],
      "source_path": "instrumentation/dropwizard/dropwizard-metrics-4.0",
      "target_versions": {
        "javaagent": [
          "io.dropwizard.metrics:metrics-core:[4.0.0,)"
        ]
      }
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enables the creation of experimental controller (INTERNAL) spans.",
          "name": "otel.instrumentation.common.experimental.controller-telemetry.enabled",
          "type": "boolean"
        },
        {
          "default": false,
          "description": "Enables the creation of experimental view (INTERNAL) spans.",
          "name": "otel.instrumentation.common.experimental.view-telemetry.enabled",
          "type": "boolean"
        }
      ],
      "name": "dropwizard-views-0.7",
      "scope": {
        "name": "io.opentelemetry.dropwizard-views-0.7"
      },
      "semconv": [],
      "source_path": "instrumentation/dropwizard/dropwizard-views-0.7",
      "target_versions": {
        "javaagent": [
          "io.dropwizard:dropwizard-views:(,3.0.0)"
        ]
      }
    },
    {
      "description": "This instrumentation enables client spans for Elasticsearch API client requests for version 7 of the client. Versions 8.10 and later have native support for OpenTelemetry.",
      "name": "elasticsearch-api-client-7.16",
      "scope": {
        "name": "io.opentelemetry.elasticsearch-api-client-7.16"
      },
      "semconv": [],
      "source_path": "instrumentation/elasticsearch/elasticsearch-api-client-7.16",
      "target_versions": {
        "javaagent": [
          "co.elastic.clients:elasticsearch-java:[7.16,7.17.20)",
          "co.elastic.clients:elasticsearch-java:[8.0.0,8.10)"
        ]
      }
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enable the capture of search query bodies. It is important to note that Elasticsearch queries\nmay contain personal or sensitive information.\n",
          "name": "otel.instrumentation.elasticsearch.capture-search-query",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables tracing for Elasticsearch REST clients.",
      "name": "elasticsearch-rest-5.0",
      "scope": {
        "name": "io.opentelemetry.elasticsearch-rest-5.0"
      },
      "semconv": [
        "Database Client"
      ],
      "source_path": "instrumentation/elasticsearch/elasticsearch-rest-5.0",
      "target_versions": {
        "javaagent": [
          "org.elasticsearch.client:elasticsearch-rest-client:[5.0,6.4)",
          "org.elasticsearch.client:rest:[5.0,6.4)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.system",
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enable the capture of search query bodies. It is important to note that Elasticsearch queries may contain personal or sensitive information.\n",
          "name": "otel.instrumentation.elasticsearch.capture-search-query",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables tracing for Elasticsearch REST clients.",
      "name": "elasticsearch-rest-6.4",
      "scope": {
        "name": "io.opentelemetry.elasticsearch-rest-6.4"
      },
      "semconv": [
        "Database Client"
      ],
      "source_path": "instrumentation/elasticsearch/elasticsearch-rest-6.4",
      "target_versions": {
        "javaagent": [
          "org.elasticsearch.client:elasticsearch-rest-client:[6.4,7.0)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.system",
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enable the capture of search query bodies. It is important to note that Elasticsearch queries may contain personal or sensitive information.\n",
          "name": "otel.instrumentation.elasticsearch.capture-search-query",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables tracing for Elasticsearch REST clients.",
      "name": "elasticsearch-rest-7.0",
      "scope": {
        "name": "io.opentelemetry.elasticsearch-rest-7.0"
      },
      "semconv": [
        "Database Client"
      ],
      "source_path": "instrumentation/elasticsearch/elasticsearch-rest-7.0",
      "target_versions": {
        "javaagent": [
          "org.elasticsearch.client:elasticsearch-rest-client:[7.0,)"
        ],
        "library": [
          "org.elasticsearch.client:elasticsearch-rest-client:7.0.0"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.system",
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enable the capture of experimental span attributes.",
          "name": "otel.instrumentation.elasticsearch.experimental-span-attributes",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables client spans for Elasticsearch transport client requests. Each call produces a span named after the Elasticsearch action, enriched with transport-specific attributes.\n",
      "name": "elasticsearch-transport-5.0",
      "scope": {
        "name": "io.opentelemetry.elasticsearch-transport-5.0"
      },
      "semconv": [
        "Database Client"
      ],
      "source_path": "instrumentation/elasticsearch/elasticsearch-transport-5.0",
      "target_versions": {
        "javaagent": [
          "org.elasticsearch.client:transport:[5.0.0,5.3.0)",
          "org.elasticsearch:elasticsearch:[5.0.0,5.3.0)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.operation",
                  "type": "STRING"
                },
                {
                  "name": "db.system",
                  "type": "STRING"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        },
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.operation",
                  "type": "STRING"
                },
                {
                  "name": "db.system",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.action",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.id",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.request",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.request.indices",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.request.write.type",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.response.status",
                  "type": "LONG"
                },
                {
                  "name": "elasticsearch.shard.replication.failed",
                  "type": "LONG"
                },
                {
                  "name": "elasticsearch.shard.replication.successful",
                  "type": "LONG"
                },
                {
                  "name": "elasticsearch.shard.replication.total",
                  "type": "LONG"
                },
                {
                  "name": "elasticsearch.type",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.version",
                  "type": "LONG"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "otel.instrumentation.elasticsearch.experimental-span-attributes=true"
        },
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "otel.semconv-stability.opt-in=database"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enable the capture of experimental span attributes.",
          "name": "otel.instrumentation.elasticsearch.experimental-span-attributes",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables client spans for Elasticsearch transport client requests. Each call produces a span named after the Elasticsearch action, enriched with transport-specific attributes.\n",
      "name": "elasticsearch-transport-5.3",
      "scope": {
        "name": "io.opentelemetry.elasticsearch-transport-5.3"
      },
      "semconv": [
        "Database Client"
      ],
      "source_path": "instrumentation/elasticsearch/elasticsearch-transport-5.3",
      "target_versions": {
        "javaagent": [
          "org.elasticsearch.client:transport:[5.3.0,6.0.0)",
          "org.elasticsearch:elasticsearch:[5.3.0,6.0.0)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.operation",
                  "type": "STRING"
                },
                {
                  "name": "db.system",
                  "type": "STRING"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        },
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.operation",
                  "type": "STRING"
                },
                {
                  "name": "db.system",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.action",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.id",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.request",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.request.indices",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.request.search.types",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.request.write.type",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.request.write.version",
                  "type": "LONG"
                },
                {
                  "name": "elasticsearch.response.status",
                  "type": "LONG"
                },
                {
                  "name": "elasticsearch.shard.broadcast.failed",
                  "type": "LONG"
                },
                {
                  "name": "elasticsearch.shard.broadcast.successful",
                  "type": "LONG"
                },
                {
                  "name": "elasticsearch.shard.broadcast.total",
                  "type": "LONG"
                },
                {
                  "name": "elasticsearch.shard.replication.failed",
                  "type": "LONG"
                },
                {
                  "name": "elasticsearch.shard.replication.successful",
                  "type": "LONG"
                },
                {
                  "name": "elasticsearch.shard.replication.total",
                  "type": "LONG"
                },
                {
                  "name": "elasticsearch.type",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.version",
                  "type": "LONG"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "otel.instrumentation.elasticsearch.experimental-span-attributes=true"
        },
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "otel.semconv-stability.opt-in=database"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enable the capture of experimental span attributes.",
          "name": "otel.instrumentation.elasticsearch.experimental-span-attributes",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables client spans for Elasticsearch transport client requests. Each call produces a span named after the Elasticsearch action, enriched with transport-specific attributes.\n",
      "name": "elasticsearch-transport-6.0",
      "scope": {
        "name": "io.opentelemetry.elasticsearch-transport-6.0"
      },
      "semconv": [
        "Database Client",
        "Network"
      ],
      "source_path": "instrumentation/elasticsearch/elasticsearch-transport-6.0",
      "target_versions": {
        "javaagent": [
          "org.elasticsearch.client:transport:[6.0.0,)",
          "org.elasticsearch:elasticsearch:[6.0.0,8.0.0)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.operation",
                  "type": "STRING"
                },
                {
                  "name": "db.system",
                  "type": "STRING"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.type",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        },
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.operation",
                  "type": "STRING"
                },
                {
                  "name": "db.system",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.action",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.id",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.request",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.request.indices",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.request.write.type",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.request.write.version",
                  "type": "LONG"
                },
                {
                  "name": "elasticsearch.response.status",
                  "type": "LONG"
                },
                {
                  "name": "elasticsearch.shard.replication.failed",
                  "type": "LONG"
                },
                {
                  "name": "elasticsearch.shard.replication.successful",
                  "type": "LONG"
                },
                {
                  "name": "elasticsearch.shard.replication.total",
                  "type": "LONG"
                },
                {
                  "name": "elasticsearch.type",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.version",
                  "type": "LONG"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.type",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "otel.instrumentation.elasticsearch.experimental-span-attributes=true"
        },
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.type",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "otel.semconv-stability.opt-in=database"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": "",
          "description": "List of Executor subclasses to be instrumented.",
          "name": "otel.instrumentation.executors.include",
          "type": "list"
        },
        {
          "default": false,
          "description": "Whether to instrument all classes that implement the Executor interface.",
          "name": "otel.instrumentation.executors.include-all",
          "type": "boolean"
        }
      ],
      "description": "The executor instrumentation ensures that context is automatically propagated when using common Java executors (e.g., ThreadPoolExecutor, ScheduledThreadPoolExecutor, ForkJoinPool). When a task is submitted, the current context is captured and bound to the task. Then, when the task eventually runs, even if it\u2019s on a different thread, the instrumentation reactivates that context, enabling consistent correlation across concurrent and asynchronous workflows.\n",
      "name": "executors",
      "scope": {
        "name": "io.opentelemetry.executors"
      },
      "semconv": [],
      "source_path": "instrumentation/executors",
      "target_versions": {
        "javaagent": [
          "Java 8+"
        ]
      }
    },
    {
      "description": "This instrumentation for Finagle HTTP clients and servers ensures that telemetry is correctly generated by the underlying Netty instrumentation. It augments existing telemetry by bridging the gap between Finagle's abstractions and Netty's pipeline, primarily for context propagation.\n",
      "name": "finagle-http-23.11",
      "scope": {
        "name": "io.opentelemetry.finagle-http-23.11"
      },
      "semconv": [],
      "source_path": "instrumentation/finagle-http-23.11",
      "target_versions": {
        "javaagent": [
          "com.twitter:finagle-http_2.12:[23.11.0,]",
          "com.twitter:finagle-http_2.13:[23.11.0,]"
        ]
      }
    },
    {
      "description": "This instrumentation for the Finatra web framework augments the telemetry generated by the underlying Netty instrumentation. It provides more specific, high-level context, such as route information, to the spans generated by Netty.",
      "name": "finatra-2.9",
      "scope": {
        "name": "io.opentelemetry.finatra-2.9"
      },
      "semconv": [
        "Code"
      ],
      "source_path": "instrumentation/finatra-2.9",
      "target_versions": {
        "javaagent": [
          "com.twitter:finatra-http_2.11:[2.9.0,]",
          "com.twitter:finatra-http_2.12:[2.9.0,]"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "code.function",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "code.namespace",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "INTERNAL"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "name": "geode-1.4",
      "scope": {
        "name": "io.opentelemetry.geode-1.4"
      },
      "semconv": [],
      "source_path": "instrumentation/geode-1.4",
      "target_versions": {
        "javaagent": [
          "org.apache.geode:geode-core:[1.4.0,)"
        ]
      }
    },
    {
      "name": "google-http-client-1.19",
      "scope": {
        "name": "io.opentelemetry.google-http-client-1.19"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/google-http-client-1.19",
      "target_versions": {
        "javaagent": [
          "com.google.http-client:google-http-client:[1.19.0,)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "name": "grails-3.0",
      "scope": {
        "name": "io.opentelemetry.grails-3.0"
      },
      "semconv": [],
      "source_path": "instrumentation/grails-3.0",
      "target_versions": {
        "javaagent": [
          "org.grails:grails-web-url-mappings:[3.0,)"
        ]
      }
    },
    {
      "name": "graphql-java-12.0",
      "scope": {
        "name": "io.opentelemetry.graphql-java-12.0"
      },
      "semconv": [],
      "source_path": "instrumentation/graphql-java/graphql-java-12.0",
      "target_versions": {
        "javaagent": [
          "com.graphql-java:graphql-java:[12,20)"
        ],
        "library": [
          "com.graphql-java:graphql-java:[12.0,19.+)"
        ]
      }
    },
    {
      "minimum_java_version": 11,
      "name": "graphql-java-20.0",
      "scope": {
        "name": "io.opentelemetry.graphql-java-20.0"
      },
      "semconv": [],
      "source_path": "instrumentation/graphql-java/graphql-java-20.0",
      "target_versions": {
        "javaagent": [
          "com.graphql-java:graphql-java:[20,)"
        ],
        "library": [
          "com.graphql-java:graphql-java:20.0"
        ]
      }
    },
    {
      "name": "grizzly-2.3",
      "scope": {
        "name": "io.opentelemetry.grizzly-2.3"
      },
      "semconv": [],
      "source_path": "instrumentation/grizzly-2.3",
      "target_versions": {
        "javaagent": [
          "org.glassfish.grizzly:grizzly-http:[2.3,)"
        ]
      }
    },
    {
      "name": "grpc-1.6",
      "scope": {
        "name": "io.opentelemetry.grpc-1.6"
      },
      "semconv": [],
      "source_path": "instrumentation/grpc-1.6",
      "target_versions": {
        "javaagent": [
          "io.grpc:grpc-core:[1.6.0,)"
        ],
        "library": [
          "io.grpc:grpc-core:1.6.0"
        ]
      }
    },
    {
      "name": "guava-10.0",
      "scope": {
        "name": "io.opentelemetry.guava-10.0"
      },
      "semconv": [],
      "source_path": "instrumentation/guava-10.0",
      "target_versions": {
        "javaagent": [
          "com.google.guava:guava:[10.0,]"
        ],
        "library": [
          "com.google.guava:guava:10.0"
        ]
      }
    },
    {
      "name": "gwt-2.0",
      "scope": {
        "name": "io.opentelemetry.gwt-2.0"
      },
      "semconv": [],
      "source_path": "instrumentation/gwt-2.0",
      "target_versions": {
        "javaagent": [
          "com.google.gwt:gwt-servlet:[2.0.0,)",
          "org.gwtproject:gwt-servlet:[2.10.0,)"
        ]
      }
    },
    {
      "name": "hibernate-3.3",
      "scope": {
        "name": "io.opentelemetry.hibernate-3.3"
      },
      "semconv": [],
      "source_path": "instrumentation/hibernate/hibernate-3.3",
      "target_versions": {
        "javaagent": [
          "org.hibernate:hibernate-core:[3.3.0.GA,4.0.0.Final)"
        ]
      }
    },
    {
      "name": "hibernate-4.0",
      "scope": {
        "name": "io.opentelemetry.hibernate-4.0"
      },
      "semconv": [],
      "source_path": "instrumentation/hibernate/hibernate-4.0",
      "target_versions": {
        "javaagent": [
          "org.hibernate:hibernate-core:[4.0.0.Final,6)"
        ]
      }
    },
    {
      "minimum_java_version": 11,
      "name": "hibernate-6.0",
      "scope": {
        "name": "io.opentelemetry.hibernate-6.0"
      },
      "semconv": [],
      "source_path": "instrumentation/hibernate/hibernate-6.0",
      "target_versions": {
        "javaagent": [
          "org.hibernate:hibernate-core:[6.0.0.Final,)"
        ]
      }
    },
    {
      "name": "hibernate-procedure-call-4.3",
      "scope": {
        "name": "io.opentelemetry.hibernate-procedure-call-4.3"
      },
      "semconv": [],
      "source_path": "instrumentation/hibernate/hibernate-procedure-call-4.3",
      "target_versions": {
        "javaagent": [
          "org.hibernate:hibernate-core:[4.3.0.Final,)"
        ]
      }
    },
    {
      "name": "hibernate-reactive-1.0",
      "scope": {
        "name": "io.opentelemetry.hibernate-reactive-1.0"
      },
      "semconv": [],
      "source_path": "instrumentation/hibernate/hibernate-reactive-1.0",
      "target_versions": {
        "javaagent": [
          "org.hibernate.reactive:hibernate-reactive-core:(,)"
        ]
      }
    },
    {
      "name": "hikaricp-3.0",
      "scope": {
        "name": "io.opentelemetry.hikaricp-3.0"
      },
      "semconv": [
        "Database Client"
      ],
      "source_path": "instrumentation/hikaricp-3.0",
      "target_versions": {
        "javaagent": [
          "com.zaxxer:HikariCP:[3.0.0,)"
        ],
        "library": [
          "com.zaxxer:HikariCP:3.0.0"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                }
              ],
              "description": "The time it took to create a new connection.",
              "name": "db.client.connections.create_time",
              "type": "HISTOGRAM",
              "unit": "ms"
            },
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                }
              ],
              "description": "The minimum number of idle open connections allowed.",
              "name": "db.client.connections.idle.min",
              "type": "LONG_SUM",
              "unit": "connections"
            },
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                }
              ],
              "description": "The maximum number of open connections allowed.",
              "name": "db.client.connections.max",
              "type": "LONG_SUM",
              "unit": "connections"
            },
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                }
              ],
              "description": "The number of pending requests for an open connection, cumulative for the entire pool.",
              "name": "db.client.connections.pending_requests",
              "type": "LONG_SUM",
              "unit": "requests"
            },
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                }
              ],
              "description": "The number of connection timeouts that have occurred trying to obtain a connection from the pool.",
              "name": "db.client.connections.timeouts",
              "type": "LONG_SUM",
              "unit": "timeouts"
            },
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                },
                {
                  "name": "state",
                  "type": "STRING"
                }
              ],
              "description": "The number of connections that are currently in state described by the state attribute.",
              "name": "db.client.connections.usage",
              "type": "LONG_SUM",
              "unit": "connections"
            },
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                }
              ],
              "description": "The time between borrowing a connection and returning it to the pool.",
              "name": "db.client.connections.use_time",
              "type": "HISTOGRAM",
              "unit": "ms"
            },
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                }
              ],
              "description": "The time it took to obtain an open connection from the pool.",
              "name": "db.client.connections.wait_time",
              "type": "HISTOGRAM",
              "unit": "ms"
            }
          ],
          "when": "default"
        },
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.client.connection.state",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The number of connections that are currently in state described by the state attribute.",
              "name": "db.client.connection.count",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "connection"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The time it took to create a new connection.",
              "name": "db.client.connection.create_time",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The minimum number of idle open connections allowed.",
              "name": "db.client.connection.idle.min",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "connection"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The maximum number of open connections allowed.",
              "name": "db.client.connection.max",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "connection"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The number of current pending requests for an open connection.",
              "name": "db.client.connection.pending_requests",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "request"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The number of connection timeouts that have occurred trying to obtain a connection from the pool.",
              "name": "db.client.connection.timeouts",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "timeout"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The time between borrowing a connection and returning it to the pool.",
              "name": "db.client.connection.use_time",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The time it took to obtain an open connection from the pool.",
              "name": "db.client.connection.wait_time",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "when": "otel.semconv-stability.opt-in=database"
        }
      ]
    },
    {
      "name": "http-url-connection",
      "scope": {
        "name": "io.opentelemetry.http-url-connection"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/http-url-connection",
      "target_versions": {
        "javaagent": [
          "Java 8+"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "name": "hystrix-1.4",
      "scope": {
        "name": "io.opentelemetry.hystrix-1.4"
      },
      "semconv": [],
      "source_path": "instrumentation/hystrix-1.4",
      "target_versions": {
        "javaagent": [
          "com.netflix.hystrix:hystrix-core:[1.4.0,)"
        ]
      }
    },
    {
      "name": "influxdb-2.4",
      "scope": {
        "name": "io.opentelemetry.influxdb-2.4"
      },
      "semconv": [],
      "source_path": "instrumentation/influxdb-2.4",
      "target_versions": {
        "javaagent": [
          "org.influxdb:influxdb-java:[2.4,)"
        ]
      }
    },
    {
      "minimum_java_version": 11,
      "name": "java-http-client",
      "scope": {
        "name": "io.opentelemetry.java-http-client"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/java-http-client",
      "target_versions": {
        "javaagent": [
          "Java 11+"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "name": "java-http-server",
      "scope": {
        "name": "io.opentelemetry.java-http-server"
      },
      "semconv": [],
      "source_path": "instrumentation/java-http-server",
      "target_versions": {
        "javaagent": [
          "Java 8+"
        ]
      }
    },
    {
      "minimum_java_version": 11,
      "name": "javalin-5.0",
      "scope": {
        "name": "io.opentelemetry.javalin-5.0"
      },
      "semconv": [],
      "source_path": "instrumentation/javalin-5.0",
      "target_versions": {
        "javaagent": [
          "io.javalin:javalin:[5.0.0,)"
        ]
      }
    },
    {
      "disabled_by_default": true,
      "name": "jaxrs-1.0",
      "scope": {
        "name": "io.opentelemetry.jaxrs-1.0"
      },
      "semconv": [],
      "source_path": "instrumentation/jaxrs/jaxrs-1.0",
      "target_versions": {
        "javaagent": [
          "javax.ws.rs:jsr311-api:[0.5,)"
        ]
      }
    },
    {
      "name": "jaxrs-2.0-annotations",
      "scope": {
        "name": "io.opentelemetry.jaxrs-2.0-annotations"
      },
      "semconv": [],
      "source_path": "instrumentation/jaxrs/jaxrs-2.0/jaxrs-2.0-annotations",
      "target_versions": {
        "javaagent": [
          "javax.ws.rs:javax.ws.rs-api:[,]"
        ]
      }
    },
    {
      "name": "jaxrs-2.0-cxf-3.2",
      "scope": {
        "name": "io.opentelemetry.jaxrs-2.0-cxf-3.2"
      },
      "semconv": [],
      "source_path": "instrumentation/jaxrs/jaxrs-2.0/jaxrs-2.0-cxf-3.2",
      "target_versions": {
        "javaagent": [
          "org.apache.cxf:cxf-rt-frontend-jaxrs:[3.2,4)",
          "org.apache.tomee:openejb-cxf-rs:(8,)"
        ]
      }
    },
    {
      "name": "jaxrs-2.0-jersey-2.0",
      "scope": {
        "name": "io.opentelemetry.jaxrs-2.0-jersey-2.0"
      },
      "semconv": [],
      "source_path": "instrumentation/jaxrs/jaxrs-2.0/jaxrs-2.0-jersey-2.0",
      "target_versions": {
        "javaagent": [
          "org.glassfish.jersey.containers:jersey-container-servlet:[2.0,3.0.0)",
          "org.glassfish.jersey.core:jersey-server:[2.0,3.0.0)"
        ]
      }
    },
    {
      "name": "jaxrs-2.0-resteasy-3.0",
      "scope": {
        "name": "io.opentelemetry.jaxrs-2.0-resteasy-3.0"
      },
      "semconv": [],
      "source_path": "instrumentation/jaxrs/jaxrs-2.0/jaxrs-2.0-resteasy-3.0",
      "target_versions": {
        "javaagent": [
          "org.jboss.resteasy:resteasy-jaxrs:[3.0.0.Final,3.1.0.Final)",
          "org.jboss.resteasy:resteasy-jaxrs:[3.5.0.Final,4)"
        ]
      }
    },
    {
      "name": "jaxrs-2.0-resteasy-3.1",
      "scope": {
        "name": "io.opentelemetry.jaxrs-2.0-resteasy-3.1"
      },
      "semconv": [],
      "source_path": "instrumentation/jaxrs/jaxrs-2.0/jaxrs-2.0-resteasy-3.1",
      "target_versions": {
        "javaagent": [
          "org.jboss.resteasy:resteasy-core:[4.0.0.Final,6)",
          "org.jboss.resteasy:resteasy-jaxrs:[3.1.0.Final,3.5.0.Final)"
        ]
      }
    },
    {
      "name": "jaxrs-3.0-annotations",
      "scope": {
        "name": "io.opentelemetry.jaxrs-3.0-annotations"
      },
      "semconv": [],
      "source_path": "instrumentation/jaxrs/jaxrs-3.0/jaxrs-3.0-annotations",
      "target_versions": {
        "javaagent": [
          "jakarta.ws.rs:jakarta.ws.rs-api:[3.0.0,)"
        ]
      }
    },
    {
      "minimum_java_version": 11,
      "name": "jaxrs-3.0-jersey-3.0",
      "scope": {
        "name": "io.opentelemetry.jaxrs-3.0-jersey-3.0"
      },
      "semconv": [],
      "source_path": "instrumentation/jaxrs/jaxrs-3.0/jaxrs-3.0-jersey-3.0",
      "target_versions": {
        "javaagent": [
          "org.glassfish.jersey.core:jersey-server:[3.0.0,)"
        ]
      }
    },
    {
      "minimum_java_version": 11,
      "name": "jaxrs-3.0-resteasy-6.0",
      "scope": {
        "name": "io.opentelemetry.jaxrs-3.0-resteasy-6.0"
      },
      "semconv": [],
      "source_path": "instrumentation/jaxrs/jaxrs-3.0/jaxrs-3.0-resteasy-6.0",
      "target_versions": {
        "javaagent": [
          "org.jboss.resteasy:resteasy-core:[6.0.0.Final,)"
        ]
      }
    },
    {
      "name": "jaxws-2.0",
      "scope": {
        "name": "io.opentelemetry.jaxws-2.0"
      },
      "semconv": [],
      "source_path": "instrumentation/jaxws/jaxws-2.0",
      "target_versions": {
        "javaagent": [
          "javax.xml.ws:jaxws-api:[2.0,]"
        ]
      }
    },
    {
      "name": "jaxws-2.0-axis2-1.6",
      "scope": {
        "name": "io.opentelemetry.jaxws-2.0-axis2-1.6"
      },
      "semconv": [],
      "source_path": "instrumentation/jaxws/jaxws-2.0-axis2-1.6",
      "target_versions": {
        "javaagent": [
          "org.apache.axis2:axis2-jaxws:[1.6.0,)"
        ]
      }
    },
    {
      "name": "jaxws-cxf-3.0",
      "scope": {
        "name": "io.opentelemetry.jaxws-cxf-3.0"
      },
      "semconv": [],
      "source_path": "instrumentation/jaxws/jaxws-cxf-3.0",
      "target_versions": {
        "javaagent": [
          "org.apache.cxf:cxf-rt-frontend-jaxws:[3.0.0,)"
        ]
      }
    },
    {
      "disabled_by_default": true,
      "name": "jaxws-jws-api-1.1",
      "scope": {
        "name": "io.opentelemetry.jaxws-jws-api-1.1"
      },
      "semconv": [],
      "source_path": "instrumentation/jaxws/jaxws-jws-api-1.1",
      "target_versions": {
        "javaagent": [
          "javax.jws:javax.jws-api:[1.1,]"
        ]
      }
    },
    {
      "name": "jaxws-metro-2.2",
      "scope": {
        "name": "io.opentelemetry.jaxws-metro-2.2"
      },
      "semconv": [],
      "source_path": "instrumentation/jaxws/jaxws-metro-2.2",
      "target_versions": {
        "javaagent": [
          "com.sun.xml.ws:jaxws-rt:[2.2.0.1,)"
        ]
      }
    },
    {
      "name": "jboss-logmanager-appender-1.1",
      "scope": {
        "name": "io.opentelemetry.jboss-logmanager-appender-1.1"
      },
      "semconv": [],
      "source_path": "instrumentation/jboss-logmanager/jboss-logmanager-appender-1.1",
      "target_versions": {
        "javaagent": [
          "org.jboss.logmanager:jboss-logmanager:[1.1.0.GA,)"
        ]
      }
    },
    {
      "name": "jboss-logmanager-mdc-1.1",
      "scope": {
        "name": "io.opentelemetry.jboss-logmanager-mdc-1.1"
      },
      "semconv": [],
      "source_path": "instrumentation/jboss-logmanager/jboss-logmanager-mdc-1.1",
      "target_versions": {
        "javaagent": [
          "org.jboss.logmanager:jboss-logmanager:[1.1.0.GA,)"
        ]
      }
    },
    {
      "configurations": [
        {
          "default": true,
          "description": "Enables statement sanitization for database queries.",
          "name": "otel.instrumentation.common.db-statement-sanitizer.enabled",
          "type": "boolean"
        },
        {
          "default": "",
          "description": "Used to specify a mapping from host names or IP addresses to peer services.",
          "name": "otel.instrumentation.common.peer-service-mapping",
          "type": "map"
        },
        {
          "default": false,
          "description": "Enables instrumentation of JDBC datasource connections.",
          "name": "otel.instrumentation.jdbc-datasource.enabled",
          "type": "boolean"
        },
        {
          "default": false,
          "description": "Sets whether the query parameters should be captured as span attributes named <code>db.query.parameter.&lt;key&gt;</code>. Enabling this option disables the statement sanitization.<p>WARNING: captured query parameters may contain sensitive information such as passwords, personally identifiable information or protected health info.\n",
          "name": "otel.instrumentation.jdbc.experimental.capture-query-parameters",
          "type": "boolean"
        },
        {
          "default": false,
          "description": "Enables experimental instrumentation to create spans for COMMIT and ROLLBACK operations.",
          "name": "otel.instrumentation.jdbc.experimental.transaction.enabled",
          "type": "boolean"
        },
        {
          "default": true,
          "description": "Enables statement sanitization for database queries. Takes precedent to otel.instrumentation.common.db-statement-sanitizer.enabled.",
          "name": "otel.instrumentation.jdbc.statement-sanitizer.enabled",
          "type": "boolean"
        }
      ],
      "description": "The JDBC instrumentation provides database client spans and metrics. Each call produces a span named after the SQL verb, enriched with standard DB client attributes (system, database, operation, sanitized statement, peer address) and error details if an exception occurs.\nThere is also a \"jdbc-datasource\" instrumentation that creates spans for datasource connections, but is disabled by default due to the volume of telemetry produced.\n",
      "name": "jdbc",
      "scope": {
        "name": "io.opentelemetry.jdbc"
      },
      "semconv": [],
      "source_path": "instrumentation/jdbc",
      "target_versions": {
        "javaagent": [
          "Java 8+"
        ]
      }
    },
    {
      "name": "jedis-1.4",
      "scope": {
        "name": "io.opentelemetry.jedis-1.4"
      },
      "semconv": [],
      "source_path": "instrumentation/jedis/jedis-1.4",
      "target_versions": {
        "javaagent": [
          "redis.clients:jedis:[1.4.0,3.0.0)"
        ]
      }
    },
    {
      "name": "jedis-3.0",
      "scope": {
        "name": "io.opentelemetry.jedis-3.0"
      },
      "semconv": [],
      "source_path": "instrumentation/jedis/jedis-3.0",
      "target_versions": {
        "javaagent": [
          "redis.clients:jedis:[3.0.0,4)"
        ]
      }
    },
    {
      "name": "jedis-4.0",
      "scope": {
        "name": "io.opentelemetry.jedis-4.0"
      },
      "semconv": [],
      "source_path": "instrumentation/jedis/jedis-4.0",
      "target_versions": {
        "javaagent": [
          "redis.clients:jedis:[4.0.0-beta1,)"
        ]
      }
    },
    {
      "minimum_java_version": 11,
      "name": "jetty-11.0",
      "scope": {
        "name": "io.opentelemetry.jetty-11.0"
      },
      "semconv": [],
      "source_path": "instrumentation/jetty/jetty-11.0",
      "target_versions": {
        "javaagent": [
          "org.eclipse.jetty:jetty-server:[11, 12)"
        ]
      }
    },
    {
      "minimum_java_version": 17,
      "name": "jetty-12.0",
      "scope": {
        "name": "io.opentelemetry.jetty-12.0"
      },
      "semconv": [],
      "source_path": "instrumentation/jetty/jetty-12.0",
      "target_versions": {
        "javaagent": [
          "org.eclipse.jetty:jetty-server:[12,)"
        ]
      }
    },
    {
      "name": "jetty-8.0",
      "scope": {
        "name": "io.opentelemetry.jetty-8.0"
      },
      "semconv": [],
      "source_path": "instrumentation/jetty/jetty-8.0",
      "target_versions": {
        "javaagent": [
          "org.eclipse.jetty:jetty-server:[8.0.0.v20110901,11)"
        ]
      }
    },
    {
      "minimum_java_version": 17,
      "name": "jetty-httpclient-12.0",
      "scope": {
        "name": "io.opentelemetry.jetty-httpclient-12.0"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/jetty-httpclient/jetty-httpclient-12.0",
      "target_versions": {
        "javaagent": [
          "org.eclipse.jetty:jetty-client:[12,)"
        ],
        "library": [
          "org.eclipse.jetty:jetty-client:12.0.0"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "name": "jetty-httpclient-9.2",
      "scope": {
        "name": "io.opentelemetry.jetty-httpclient-9.2"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/jetty-httpclient/jetty-httpclient-9.2",
      "target_versions": {
        "javaagent": [
          "org.eclipse.jetty:jetty-client:[9.2,10)"
        ],
        "library": [
          "org.eclipse.jetty:jetty-client:[9.2.0.v20140526,9.+)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "name": "jms-1.1",
      "scope": {
        "name": "io.opentelemetry.jms-1.1"
      },
      "semconv": [],
      "source_path": "instrumentation/jms/jms-1.1",
      "target_versions": {
        "javaagent": [
          "jakarta.jms:jakarta.jms-api:(,3)",
          "javax.jms:javax.jms-api:(,)",
          "javax.jms:jms-api:(,)"
        ]
      }
    },
    {
      "minimum_java_version": 11,
      "name": "jms-3.0",
      "scope": {
        "name": "io.opentelemetry.jms-3.0"
      },
      "semconv": [],
      "source_path": "instrumentation/jms/jms-3.0",
      "target_versions": {
        "javaagent": [
          "jakarta.jms:jakarta.jms-api:[3.0.0,)"
        ]
      }
    },
    {
      "name": "jodd-http-4.2",
      "scope": {
        "name": "io.opentelemetry.jodd-http-4.2"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/jodd-http-4.2",
      "target_versions": {
        "javaagent": [
          "org.jodd:jodd-http:[4.2.0,)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "name": "jsf-mojarra-1.2",
      "scope": {
        "name": "io.opentelemetry.jsf-mojarra-1.2"
      },
      "semconv": [],
      "source_path": "instrumentation/jsf/jsf-mojarra-1.2",
      "target_versions": {
        "javaagent": [
          "com.sun.faces:jsf-impl:[2.0,2.1)",
          "com.sun.faces:jsf-impl:[2.1,2.2)",
          "javax.faces:jsf-impl:[1.2,2)",
          "org.glassfish:jakarta.faces:[2.3.9,3)",
          "org.glassfish:javax.faces:[2.0.7,3)"
        ]
      }
    },
    {
      "minimum_java_version": 11,
      "name": "jsf-mojarra-3.0",
      "scope": {
        "name": "io.opentelemetry.jsf-mojarra-3.0"
      },
      "semconv": [],
      "source_path": "instrumentation/jsf/jsf-mojarra-3.0",
      "target_versions": {
        "javaagent": [
          "org.glassfish:jakarta.faces:[3,)"
        ]
      }
    },
    {
      "name": "jsf-myfaces-1.2",
      "scope": {
        "name": "io.opentelemetry.jsf-myfaces-1.2"
      },
      "semconv": [],
      "source_path": "instrumentation/jsf/jsf-myfaces-1.2",
      "target_versions": {
        "javaagent": [
          "org.apache.myfaces.core:myfaces-impl:[1.2,3)"
        ]
      }
    },
    {
      "minimum_java_version": 11,
      "name": "jsf-myfaces-3.0",
      "scope": {
        "name": "io.opentelemetry.jsf-myfaces-3.0"
      },
      "semconv": [],
      "source_path": "instrumentation/jsf/jsf-myfaces-3.0",
      "target_versions": {
        "javaagent": [
          "org.apache.myfaces.core:myfaces-impl:[3,)"
        ]
      }
    },
    {
      "name": "jsp-2.3",
      "scope": {
        "name": "io.opentelemetry.jsp-2.3"
      },
      "semconv": [],
      "source_path": "instrumentation/jsp-2.3",
      "target_versions": {
        "javaagent": [
          "org.apache.tomcat:tomcat-jasper:[7.0.19,10)"
        ]
      }
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enables the capture of the experimental consumer attribute \"kafka.record.queue_time_ms\"",
          "name": "otel.instrumentation.kafka.experimental-span-attributes",
          "type": "boolean"
        },
        {
          "default": true,
          "description": "Enable context propagation for kafka message producers.",
          "name": "otel.instrumentation.kafka.producer-propagation.enabled",
          "type": "boolean"
        },
        {
          "default": "",
          "description": "A comma-separated list of header names to capture as span attributes.",
          "name": "otel.instrumentation.messaging.experimental.capture-headers",
          "type": "list"
        },
        {
          "default": false,
          "description": "Enables experimental receive telemetry, which will cause consumers to start a new trace, with only a span link connecting it to the producer trace.\n",
          "name": "otel.instrumentation.messaging.experimental.receive-telemetry.enabled",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables messaging spans and metrics for Apache Kafka 0.11 clients. It automatically traces message production and consumption, propagates context, and emits metrics for production and consumption.\n",
      "name": "kafka-clients-0.11",
      "scope": {
        "name": "io.opentelemetry.kafka-clients-0.11"
      },
      "semconv": [],
      "source_path": "instrumentation/kafka/kafka-clients/kafka-clients-0.11",
      "target_versions": {
        "javaagent": [
          "org.apache.kafka:kafka-clients:[0.11.0.0,)"
        ]
      }
    },
    {
      "description": "This instrumentation provides a library integeration that enables messaging spans and metrics for Apache Kafka 2.6+ clients.\n",
      "name": "kafka-clients-2.6",
      "scope": {
        "name": "io.opentelemetry.kafka-clients-2.6"
      },
      "semconv": [],
      "source_path": "instrumentation/kafka/kafka-clients/kafka-clients-2.6",
      "target_versions": {
        "library": [
          "org.apache.kafka:kafka-clients:2.6.0"
        ]
      }
    },
    {
      "name": "kafka-streams-0.11",
      "scope": {
        "name": "io.opentelemetry.kafka-streams-0.11"
      },
      "semconv": [],
      "source_path": "instrumentation/kafka/kafka-streams-0.11",
      "target_versions": {
        "javaagent": [
          "org.apache.kafka:kafka-streams:[0.11.0.0,)"
        ]
      }
    },
    {
      "name": "kotlinx-coroutines",
      "scope": {
        "name": "io.opentelemetry.kotlinx-coroutines"
      },
      "semconv": [],
      "source_path": "instrumentation/kotlinx-coroutines",
      "target_versions": {
        "javaagent": [
          "org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm:[1.3.9,)",
          "org.jetbrains.kotlinx:kotlinx-coroutines-core:[1.0.0,1.3.8)",
          "org.jetbrains.kotlinx:kotlinx-coroutines-core:[1.3.0,1.3.8)"
        ]
      }
    },
    {
      "name": "kotlinx-coroutines-1.0",
      "scope": {
        "name": "io.opentelemetry.kotlinx-coroutines-1.0"
      },
      "semconv": [],
      "source_path": "instrumentation/kotlinx-coroutines/kotlinx-coroutines-1.0",
      "target_versions": {
        "javaagent": [
          "org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm:[1.3.9,)",
          "org.jetbrains.kotlinx:kotlinx-coroutines-core:[1.0.0,1.3.8)"
        ]
      }
    },
    {
      "name": "kotlinx-coroutines-flow-1.3",
      "scope": {
        "name": "io.opentelemetry.kotlinx-coroutines-flow-1.3"
      },
      "semconv": [],
      "source_path": "instrumentation/kotlinx-coroutines/kotlinx-coroutines-flow-1.3",
      "target_versions": {
        "javaagent": [
          "org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm:[1.3.9,)",
          "org.jetbrains.kotlinx:kotlinx-coroutines-core:[1.3.0,1.3.8)"
        ]
      }
    },
    {
      "name": "ktor-1.0",
      "scope": {
        "name": "io.opentelemetry.ktor-1.0"
      },
      "semconv": [],
      "source_path": "instrumentation/ktor/ktor-1.0",
      "target_versions": {
        "library": [
          "io.ktor:ktor-server-core:[1.0.0,1.+)"
        ]
      }
    },
    {
      "name": "ktor-2.0",
      "scope": {
        "name": "io.opentelemetry.ktor-2.0"
      },
      "semconv": [],
      "source_path": "instrumentation/ktor/ktor-2.0",
      "target_versions": {
        "javaagent": [
          "io.ktor:ktor-client-core:[2.0.0,3.0.0)",
          "io.ktor:ktor-server-core:[2.0.0,3.0.0)"
        ],
        "library": [
          "io.ktor:ktor-client-core:[2.0.0,2.+)",
          "io.ktor:ktor-server-core:[2.0.0,2.+)"
        ]
      }
    },
    {
      "name": "ktor-3.0",
      "scope": {
        "name": "io.opentelemetry.ktor-3.0"
      },
      "semconv": [],
      "source_path": "instrumentation/ktor/ktor-3.0",
      "target_versions": {
        "javaagent": [
          "io.ktor:ktor-client-core:[3.0.0,)",
          "io.ktor:ktor-server-core:[3.0.0,)"
        ],
        "library": [
          "io.ktor:ktor-client-core:3.0.0",
          "io.ktor:ktor-server-core:3.0.0"
        ]
      }
    },
    {
      "name": "kubernetes-client-7.0",
      "scope": {
        "name": "io.opentelemetry.kubernetes-client-7.0"
      },
      "semconv": [],
      "source_path": "instrumentation/kubernetes-client-7.0",
      "target_versions": {
        "javaagent": [
          "io.kubernetes:client-java-api:[7.0.0,)"
        ]
      }
    },
    {
      "name": "lettuce-4.0",
      "scope": {
        "name": "io.opentelemetry.lettuce-4.0"
      },
      "semconv": [],
      "source_path": "instrumentation/lettuce/lettuce-4.0",
      "target_versions": {
        "javaagent": [
          "biz.paluch.redis:lettuce:[4.0.Final,)"
        ]
      }
    },
    {
      "name": "lettuce-5.0",
      "scope": {
        "name": "io.opentelemetry.lettuce-5.0"
      },
      "semconv": [],
      "source_path": "instrumentation/lettuce/lettuce-5.0",
      "target_versions": {
        "javaagent": [
          "io.lettuce:lettuce-core:[5.0.0.RELEASE,5.1.0.RELEASE)"
        ]
      }
    },
    {
      "name": "lettuce-5.1",
      "scope": {
        "name": "io.opentelemetry.lettuce-5.1"
      },
      "semconv": [],
      "source_path": "instrumentation/lettuce/lettuce-5.1",
      "target_versions": {
        "javaagent": [
          "io.lettuce:lettuce-core:[5.1.0.RELEASE,)"
        ],
        "library": [
          "io.lettuce:lettuce-core:5.1.0.RELEASE"
        ]
      }
    },
    {
      "name": "liberty-20.0",
      "scope": {
        "name": "io.opentelemetry.liberty-20.0"
      },
      "semconv": [],
      "source_path": "instrumentation/liberty/liberty-20.0"
    },
    {
      "name": "liberty-dispatcher-20.0",
      "scope": {
        "name": "io.opentelemetry.liberty-dispatcher-20.0"
      },
      "semconv": [],
      "source_path": "instrumentation/liberty/liberty-dispatcher-20.0"
    },
    {
      "name": "log4j-appender-1.2",
      "scope": {
        "name": "io.opentelemetry.log4j-appender-1.2"
      },
      "semconv": [],
      "source_path": "instrumentation/log4j/log4j-appender-1.2",
      "target_versions": {
        "javaagent": [
          "log4j:log4j:[1.2,)"
        ]
      }
    },
    {
      "name": "log4j-appender-2.17",
      "scope": {
        "name": "io.opentelemetry.log4j-appender-2.17"
      },
      "semconv": [],
      "source_path": "instrumentation/log4j/log4j-appender-2.17",
      "target_versions": {
        "javaagent": [
          "org.apache.logging.log4j:log4j-core:[2.0,)"
        ],
        "library": [
          "org.apache.logging.log4j:log4j-core:2.17.0"
        ]
      }
    },
    {
      "name": "log4j-context-data-2.17",
      "scope": {
        "name": "io.opentelemetry.log4j-context-data-2.17"
      },
      "semconv": [],
      "source_path": "instrumentation/log4j/log4j-context-data/log4j-context-data-2.17",
      "target_versions": {
        "javaagent": [
          "org.apache.logging.log4j:log4j-core:[2.17.0,)"
        ]
      }
    },
    {
      "name": "log4j-context-data-2.7",
      "scope": {
        "name": "io.opentelemetry.log4j-context-data-2.7"
      },
      "semconv": [],
      "source_path": "instrumentation/log4j/log4j-context-data/log4j-context-data-2.7",
      "target_versions": {
        "javaagent": [
          "org.apache.logging.log4j:log4j-core:[2.7,2.17.0)"
        ]
      }
    },
    {
      "name": "log4j-mdc-1.2",
      "scope": {
        "name": "io.opentelemetry.log4j-mdc-1.2"
      },
      "semconv": [],
      "source_path": "instrumentation/log4j/log4j-mdc-1.2",
      "target_versions": {
        "javaagent": [
          "log4j:log4j:[1.2,)"
        ]
      }
    },
    {
      "name": "logback-appender-1.0",
      "scope": {
        "name": "io.opentelemetry.logback-appender-1.0"
      },
      "semconv": [],
      "source_path": "instrumentation/logback/logback-appender-1.0",
      "target_versions": {
        "javaagent": [
          "ch.qos.logback:logback-classic:[0.9.16,)"
        ],
        "library": [
          "ch.qos.logback:logback-classic:1.3.0",
          "net.logstash.logback:logstash-logback-encoder:3.0",
          "org.slf4j:slf4j-api:2.0.0"
        ]
      }
    },
    {
      "name": "logback-mdc-1.0",
      "scope": {
        "name": "io.opentelemetry.logback-mdc-1.0"
      },
      "semconv": [],
      "source_path": "instrumentation/logback/logback-mdc-1.0",
      "target_versions": {
        "javaagent": [
          "ch.qos.logback:logback-classic:[1.0.0,1.2.3]"
        ],
        "library": [
          "ch.qos.logback:logback-classic:1.0.0",
          "org.slf4j:slf4j-api:1.6.4"
        ]
      }
    },
    {
      "disabled_by_default": true,
      "name": "micrometer-1.5",
      "scope": {
        "name": "io.opentelemetry.micrometer-1.5"
      },
      "semconv": [],
      "source_path": "instrumentation/micrometer/micrometer-1.5",
      "target_versions": {
        "javaagent": [
          "io.micrometer:micrometer-core:[1.5.0,)"
        ],
        "library": [
          "io.micrometer:micrometer-core:1.5.0"
        ]
      }
    },
    {
      "name": "mongo-3.1",
      "scope": {
        "name": "io.opentelemetry.mongo-3.1"
      },
      "semconv": [],
      "source_path": "instrumentation/mongo/mongo-3.1",
      "target_versions": {
        "javaagent": [
          "org.mongodb:mongo-java-driver:[3.1,)"
        ],
        "library": [
          "org.mongodb:mongo-java-driver:3.1.0"
        ]
      }
    },
    {
      "name": "mongo-3.7",
      "scope": {
        "name": "io.opentelemetry.mongo-3.7"
      },
      "semconv": [],
      "source_path": "instrumentation/mongo/mongo-3.7",
      "target_versions": {
        "javaagent": [
          "org.mongodb:mongo-java-driver:[3.7, 4.0)",
          "org.mongodb:mongodb-driver-core:[3.7, 4.0)"
        ]
      }
    },
    {
      "name": "mongo-4.0",
      "scope": {
        "name": "io.opentelemetry.mongo-4.0"
      },
      "semconv": [],
      "source_path": "instrumentation/mongo/mongo-4.0",
      "target_versions": {
        "javaagent": [
          "org.mongodb:mongodb-driver-core:[4.0,)"
        ]
      }
    },
    {
      "name": "mongo-async-3.3",
      "scope": {
        "name": "io.opentelemetry.mongo-async-3.3"
      },
      "semconv": [],
      "source_path": "instrumentation/mongo/mongo-async-3.3",
      "target_versions": {
        "javaagent": [
          "org.mongodb:mongodb-driver-async:[3.3,)"
        ]
      }
    },
    {
      "disabled_by_default": true,
      "name": "mybatis-3.2",
      "scope": {
        "name": "io.opentelemetry.mybatis-3.2"
      },
      "semconv": [],
      "source_path": "instrumentation/mybatis-3.2",
      "target_versions": {
        "javaagent": [
          "org.mybatis:mybatis:[3.2.0,)"
        ]
      }
    },
    {
      "name": "netty-3.8",
      "scope": {
        "name": "io.opentelemetry.netty-3.8"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/netty/netty-3.8",
      "target_versions": {
        "javaagent": [
          "io.netty:netty:[3.8.0.Final,4)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            },
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.scheme",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "Duration of HTTP server requests.",
              "name": "http.server.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enable the creation of Connect and DNS spans",
          "name": "otel.instrumentation.netty.connection-telemetry.enabled",
          "type": "boolean"
        },
        {
          "default": false,
          "description": "Enable SSL telemetry",
          "name": "otel.instrumentation.netty.ssl-telemetry.enabled",
          "type": "boolean"
        }
      ],
      "name": "netty-4.0",
      "scope": {
        "name": "io.opentelemetry.netty-4.0"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/netty/netty-4.0",
      "target_versions": {
        "javaagent": [
          "io.netty:netty-all:[4.0.0.Final,4.1.0.Final)",
          "io.netty:netty-codec-http:[4.0.0.Final,4.1.0.Final)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            },
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.scheme",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "Duration of HTTP server requests.",
              "name": "http.server.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enable the creation of Connect and DNS spans",
          "name": "otel.instrumentation.netty.connection-telemetry.enabled",
          "type": "boolean"
        },
        {
          "default": false,
          "description": "Enable SSL telemetry",
          "name": "otel.instrumentation.netty.ssl-telemetry.enabled",
          "type": "boolean"
        }
      ],
      "name": "netty-4.1",
      "scope": {
        "name": "io.opentelemetry.netty-4.1"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/netty/netty-4.1",
      "target_versions": {
        "javaagent": [
          "io.netty:netty-all:[4.1.0.Final,5.0.0)",
          "io.netty:netty-codec-http:[4.1.0.Final,5.0.0)"
        ],
        "library": [
          "io.netty:netty-codec-http:4.1.0.Final"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            },
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.scheme",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "Duration of HTTP server requests.",
              "name": "http.server.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "name": "okhttp-2.2",
      "scope": {
        "name": "io.opentelemetry.okhttp-2.2"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/okhttp/okhttp-2.2",
      "target_versions": {
        "javaagent": [
          "com.squareup.okhttp:okhttp:[2.2,3)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "name": "okhttp-3.0",
      "scope": {
        "name": "io.opentelemetry.okhttp-3.0"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/okhttp/okhttp-3.0",
      "target_versions": {
        "javaagent": [
          "com.squareup.okhttp3:okhttp:[3.0,)"
        ],
        "library": [
          "com.squareup.okhttp3:okhttp:3.0.0"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enables including the full content of user and assistant messages in emitted log events. Note that full content can have data privacy and size concerns, and care should be taken when enabling this.\n",
          "name": "otel.instrumentation.genai.capture-message-content",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables Gen AI client spans and metrics for OpenAI Java SDK 1.1+.",
      "name": "openai-java-1.1",
      "scope": {
        "name": "io.opentelemetry.openai-java-1.1"
      },
      "semconv": [
        "Gen Ai"
      ],
      "source_path": "instrumentation/openai/openai-java-1.1",
      "target_versions": {
        "javaagent": [
          "com.openai:openai-java:[1.1.0,)"
        ],
        "library": [
          "com.openai:openai-java:1.1.0"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "gen_ai.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "gen_ai.request.model",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "gen_ai.response.model",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "gen_ai.system",
                  "type": "STRING"
                }
              ],
              "description": "GenAI operation duration.",
              "name": "gen_ai.client.operation.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            },
            {
              "attributes": [
                {
                  "name": "gen_ai.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "gen_ai.request.model",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "gen_ai.response.model",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "gen_ai.system",
                  "type": "STRING"
                },
                {
                  "name": "gen_ai.token.type",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "Measures number of input and output tokens used.",
              "name": "gen_ai.client.token.usage",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "token"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "gen_ai.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "gen_ai.request.frequency_penalty",
                  "semconv": true,
                  "type": "DOUBLE"
                },
                {
                  "name": "gen_ai.request.max_tokens",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "gen_ai.request.model",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "gen_ai.request.presence_penalty",
                  "semconv": true,
                  "type": "DOUBLE"
                },
                {
                  "name": "gen_ai.request.seed",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "gen_ai.request.stop_sequences",
                  "semconv": true,
                  "type": "STRING_ARRAY"
                },
                {
                  "name": "gen_ai.request.temperature",
                  "semconv": true,
                  "type": "DOUBLE"
                },
                {
                  "name": "gen_ai.request.top_p",
                  "semconv": true,
                  "type": "DOUBLE"
                },
                {
                  "name": "gen_ai.response.finish_reasons",
                  "semconv": true,
                  "type": "STRING_ARRAY"
                },
                {
                  "name": "gen_ai.response.id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "gen_ai.response.model",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "gen_ai.system",
                  "type": "STRING"
                },
                {
                  "name": "gen_ai.usage.input_tokens",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "gen_ai.usage.output_tokens",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "INTERNAL"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "minimum_java_version": 11,
      "name": "opensearch-rest-1.0",
      "scope": {
        "name": "io.opentelemetry.opensearch-rest-1.0"
      },
      "semconv": [],
      "source_path": "instrumentation/opensearch/opensearch-rest-1.0",
      "target_versions": {
        "javaagent": [
          "org.opensearch.client:opensearch-rest-client:[1.0,3.0)"
        ]
      }
    },
    {
      "minimum_java_version": 11,
      "name": "opensearch-rest-3.0",
      "scope": {
        "name": "io.opentelemetry.opensearch-rest-3.0"
      },
      "semconv": [],
      "source_path": "instrumentation/opensearch/opensearch-rest-3.0",
      "target_versions": {
        "javaagent": [
          "org.opensearch.client:opensearch-rest-client:[3.0,)"
        ]
      }
    },
    {
      "description": "The Oracle Universal Connection Pool (UCP) instrumentation generates connection pool metrics.",
      "name": "oracle-ucp-11.2",
      "scope": {
        "name": "io.opentelemetry.oracle-ucp-11.2"
      },
      "semconv": [
        "Database Client"
      ],
      "source_path": "instrumentation/oracle-ucp-11.2",
      "target_versions": {
        "javaagent": [
          "com.oracle.database.jdbc:ucp:[,)"
        ],
        "library": [
          "com.oracle.database.jdbc:ojdbc8:12.2.0.1",
          "com.oracle.database.jdbc:ucp:11.2.0.4"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                }
              ],
              "description": "The maximum number of open connections allowed.",
              "name": "db.client.connections.max",
              "type": "LONG_SUM",
              "unit": "connections"
            },
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                }
              ],
              "description": "The number of pending requests for an open connection, cumulative for the entire pool.",
              "name": "db.client.connections.pending_requests",
              "type": "LONG_SUM",
              "unit": "requests"
            },
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                },
                {
                  "name": "state",
                  "type": "STRING"
                }
              ],
              "description": "The number of connections that are currently in state described by the state attribute.",
              "name": "db.client.connections.usage",
              "type": "LONG_SUM",
              "unit": "connections"
            }
          ],
          "when": "default"
        },
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.client.connection.state",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The number of connections that are currently in state described by the state attribute.",
              "name": "db.client.connection.count",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "connection"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The maximum number of open connections allowed.",
              "name": "db.client.connection.max",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "connection"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The number of current pending requests for an open connection.",
              "name": "db.client.connection.pending_requests",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "request"
            }
          ],
          "when": "otel.semconv-stability.opt-in=database"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enable the OSHI process runtime metrics.",
          "name": "otel.instrumentation.oshi.experimental-metrics.enabled",
          "type": "boolean"
        }
      ],
      "description": "When the OSHI library is detected on the classpath, this instrumentation will use the system class loader to load classes from the oshi-core jar that are then used to generate system metrics.",
      "name": "oshi",
      "scope": {
        "name": "io.opentelemetry.oshi"
      },
      "semconv": [
        "System"
      ],
      "source_path": "instrumentation/oshi",
      "target_versions": {
        "javaagent": [
          "com.github.oshi:oshi-core:[5.3.1,)"
        ],
        "library": [
          "com.github.oshi:oshi-core:5.3.1"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "device",
                  "type": "STRING"
                },
                {
                  "name": "direction",
                  "type": "STRING"
                }
              ],
              "description": "System disk IO",
              "name": "system.disk.io",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "By"
            },
            {
              "attributes": [
                {
                  "name": "device",
                  "type": "STRING"
                },
                {
                  "name": "direction",
                  "type": "STRING"
                }
              ],
              "description": "System disk operations",
              "name": "system.disk.operations",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "operations"
            },
            {
              "attributes": [
                {
                  "name": "state",
                  "type": "STRING"
                }
              ],
              "description": "System memory usage",
              "name": "system.memory.usage",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "By"
            },
            {
              "attributes": [
                {
                  "name": "state",
                  "type": "STRING"
                }
              ],
              "description": "System memory utilization",
              "name": "system.memory.utilization",
              "semconv": true,
              "type": "DOUBLE_GAUGE",
              "unit": "1"
            },
            {
              "attributes": [
                {
                  "name": "device",
                  "type": "STRING"
                },
                {
                  "name": "direction",
                  "type": "STRING"
                }
              ],
              "description": "System network errors",
              "name": "system.network.errors",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "errors"
            },
            {
              "attributes": [
                {
                  "name": "device",
                  "type": "STRING"
                },
                {
                  "name": "direction",
                  "type": "STRING"
                }
              ],
              "description": "System network IO",
              "name": "system.network.io",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "By"
            },
            {
              "attributes": [
                {
                  "name": "device",
                  "type": "STRING"
                },
                {
                  "name": "direction",
                  "type": "STRING"
                }
              ],
              "description": "System network packets",
              "name": "system.network.packets",
              "type": "LONG_SUM",
              "unit": "packets"
            }
          ],
          "when": "default"
        },
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "type",
                  "type": "STRING"
                }
              ],
              "description": "Runtime Java CPU time",
              "name": "runtime.java.cpu_time",
              "type": "LONG_GAUGE",
              "unit": "ms"
            },
            {
              "attributes": [
                {
                  "name": "type",
                  "type": "STRING"
                }
              ],
              "description": "Runtime Java memory",
              "name": "runtime.java.memory",
              "type": "LONG_SUM",
              "unit": "By"
            },
            {
              "attributes": [
                {
                  "name": "device",
                  "type": "STRING"
                },
                {
                  "name": "direction",
                  "type": "STRING"
                }
              ],
              "description": "System disk IO",
              "name": "system.disk.io",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "By"
            },
            {
              "attributes": [
                {
                  "name": "device",
                  "type": "STRING"
                },
                {
                  "name": "direction",
                  "type": "STRING"
                }
              ],
              "description": "System disk operations",
              "name": "system.disk.operations",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "operations"
            },
            {
              "attributes": [
                {
                  "name": "state",
                  "type": "STRING"
                }
              ],
              "description": "System memory usage",
              "name": "system.memory.usage",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "By"
            },
            {
              "attributes": [
                {
                  "name": "state",
                  "type": "STRING"
                }
              ],
              "description": "System memory utilization",
              "name": "system.memory.utilization",
              "semconv": true,
              "type": "DOUBLE_GAUGE",
              "unit": "1"
            },
            {
              "attributes": [
                {
                  "name": "device",
                  "type": "STRING"
                },
                {
                  "name": "direction",
                  "type": "STRING"
                }
              ],
              "description": "System network errors",
              "name": "system.network.errors",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "errors"
            },
            {
              "attributes": [
                {
                  "name": "device",
                  "type": "STRING"
                },
                {
                  "name": "direction",
                  "type": "STRING"
                }
              ],
              "description": "System network IO",
              "name": "system.network.io",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "By"
            },
            {
              "attributes": [
                {
                  "name": "device",
                  "type": "STRING"
                },
                {
                  "name": "direction",
                  "type": "STRING"
                }
              ],
              "description": "System network packets",
              "name": "system.network.packets",
              "type": "LONG_SUM",
              "unit": "packets"
            }
          ],
          "when": "otel.instrumentation.oshi.experimental-metrics.enabled=true"
        }
      ]
    },
    {
      "name": "payara",
      "scope": {
        "name": "io.opentelemetry.payara"
      },
      "semconv": [],
      "source_path": "instrumentation/payara"
    },
    {
      "name": "pekko-actor-1.0",
      "scope": {
        "name": "io.opentelemetry.pekko-actor-1.0"
      },
      "semconv": [],
      "source_path": "instrumentation/pekko/pekko-actor-1.0",
      "target_versions": {
        "javaagent": [
          "org.apache.pekko:pekko-actor_2.12:[1.0,)",
          "org.apache.pekko:pekko-actor_2.13:[1.0,)",
          "org.apache.pekko:pekko-actor_3:[1.0,)"
        ]
      }
    },
    {
      "name": "pekko-http-1.0",
      "scope": {
        "name": "io.opentelemetry.pekko-http-1.0"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/pekko/pekko-http-1.0",
      "target_versions": {
        "javaagent": [
          "com.softwaremill.sttp.tapir:tapir-pekko-http-server_2.12:[1.7,)",
          "com.softwaremill.sttp.tapir:tapir-pekko-http-server_2.13:[1.7,)",
          "com.softwaremill.sttp.tapir:tapir-pekko-http-server_3:[1.7,)",
          "org.apache.pekko:pekko-http_2.12:[1.0,)",
          "org.apache.pekko:pekko-http_2.13:[1.0,)",
          "org.apache.pekko:pekko-http_3:[1.0,)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            },
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "http.route",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.scheme",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "Duration of HTTP server requests.",
              "name": "http.server.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "name": "play-mvc-2.4",
      "scope": {
        "name": "io.opentelemetry.play-mvc-2.4"
      },
      "semconv": [],
      "source_path": "instrumentation/play/play-mvc/play-mvc-2.4",
      "target_versions": {
        "javaagent": [
          "com.typesafe.play:play_2.11:[2.4.0,2.6)"
        ]
      }
    },
    {
      "name": "play-mvc-2.6",
      "scope": {
        "name": "io.opentelemetry.play-mvc-2.6"
      },
      "semconv": [],
      "source_path": "instrumentation/play/play-mvc/play-mvc-2.6",
      "target_versions": {
        "javaagent": [
          "com.typesafe.play:play_$scalaVersion:[2.6.0,)",
          "com.typesafe.play:play_2.12:[2.6.0,)",
          "com.typesafe.play:play_2.13:[2.6.0,)"
        ]
      }
    },
    {
      "name": "play-ws-1.0",
      "scope": {
        "name": "io.opentelemetry.play-ws-1.0"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/play/play-ws/play-ws-1.0",
      "target_versions": {
        "javaagent": [
          "com.typesafe.play:play-ahc-ws-standalone_2.11:[1.0.0,2.0.0)",
          "com.typesafe.play:play-ahc-ws-standalone_2.12:[1.0.0,2.0.0)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "name": "play-ws-2.0",
      "scope": {
        "name": "io.opentelemetry.play-ws-2.0"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/play/play-ws/play-ws-2.0",
      "target_versions": {
        "javaagent": [
          "com.typesafe.play:play-ahc-ws-standalone_2.11:[2.0.0,]",
          "com.typesafe.play:play-ahc-ws-standalone_2.12:[2.0.0,2.1.0)",
          "com.typesafe.play:play-ahc-ws-standalone_2.13:[2.0.6,2.1.0)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "name": "play-ws-2.1",
      "scope": {
        "name": "io.opentelemetry.play-ws-2.1"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/play/play-ws/play-ws-2.1",
      "target_versions": {
        "javaagent": [
          "com.typesafe.play:play-ahc-ws-standalone_2.12:[2.1.0,]",
          "com.typesafe.play:play-ahc-ws-standalone_2.13:[2.1.0,]"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "name": "powerjob-4.0",
      "scope": {
        "name": "io.opentelemetry.powerjob-4.0"
      },
      "semconv": [],
      "source_path": "instrumentation/powerjob-4.0",
      "target_versions": {
        "javaagent": [
          "tech.powerjob:powerjob-worker:[4.0.0,)"
        ]
      }
    },
    {
      "name": "pulsar-2.8",
      "scope": {
        "name": "io.opentelemetry.pulsar-2.8"
      },
      "semconv": [],
      "source_path": "instrumentation/pulsar/pulsar-2.8",
      "target_versions": {
        "javaagent": [
          "org.apache.pulsar:pulsar-client:[2.8.0,)"
        ]
      }
    },
    {
      "name": "quarkus-resteasy-reactive",
      "scope": {
        "name": "io.opentelemetry.quarkus-resteasy-reactive"
      },
      "semconv": [],
      "source_path": "instrumentation/quarkus-resteasy-reactive",
      "target_versions": {
        "javaagent": [
          "io.quarkus:quarkus-resteasy-reactive:(,3.9.0)"
        ]
      }
    },
    {
      "name": "quartz-2.0",
      "scope": {
        "name": "io.opentelemetry.quartz-2.0"
      },
      "semconv": [],
      "source_path": "instrumentation/quartz-2.0",
      "target_versions": {
        "javaagent": [
          "org.quartz-scheduler:quartz:[2.0.0,)"
        ],
        "library": [
          "org.quartz-scheduler:quartz:2.0.0"
        ]
      }
    },
    {
      "name": "r2dbc-1.0",
      "scope": {
        "name": "io.opentelemetry.r2dbc-1.0"
      },
      "semconv": [],
      "source_path": "instrumentation/r2dbc-1.0",
      "target_versions": {
        "javaagent": [
          "io.r2dbc:r2dbc-spi:[1.0.0.RELEASE,)"
        ],
        "library": [
          "io.r2dbc:r2dbc-spi:1.0.0.RELEASE"
        ]
      }
    },
    {
      "name": "rabbitmq-2.7",
      "scope": {
        "name": "io.opentelemetry.rabbitmq-2.7"
      },
      "semconv": [],
      "source_path": "instrumentation/rabbitmq-2.7",
      "target_versions": {
        "javaagent": [
          "com.rabbitmq:amqp-client:[2.7.0,)"
        ]
      }
    },
    {
      "name": "ratpack-1.4",
      "scope": {
        "name": "io.opentelemetry.ratpack-1.4"
      },
      "semconv": [],
      "source_path": "instrumentation/ratpack/ratpack-1.4",
      "target_versions": {
        "javaagent": [
          "io.ratpack:ratpack-core:[1.4.0,)"
        ]
      }
    },
    {
      "name": "ratpack-1.7",
      "scope": {
        "name": "io.opentelemetry.ratpack-1.7"
      },
      "semconv": [],
      "source_path": "instrumentation/ratpack/ratpack-1.7",
      "target_versions": {
        "javaagent": [
          "io.ratpack:ratpack-core:[1.7.0,)"
        ],
        "library": [
          "io.ratpack:ratpack-core:1.7.0"
        ]
      }
    },
    {
      "name": "reactor-3.1",
      "scope": {
        "name": "io.opentelemetry.reactor-3.1"
      },
      "semconv": [],
      "source_path": "instrumentation/reactor/reactor-3.1",
      "target_versions": {
        "javaagent": [
          "io.projectreactor:reactor-core:[3.1.0.RELEASE,)"
        ]
      }
    },
    {
      "name": "reactor-3.4",
      "scope": {
        "name": "io.opentelemetry.reactor-3.4"
      },
      "semconv": [],
      "source_path": "instrumentation/reactor/reactor-3.4",
      "target_versions": {
        "javaagent": [
          "io.projectreactor:reactor-core:[3.4.0,)"
        ]
      }
    },
    {
      "name": "reactor-kafka-1.0",
      "scope": {
        "name": "io.opentelemetry.reactor-kafka-1.0"
      },
      "semconv": [],
      "source_path": "instrumentation/reactor/reactor-kafka-1.0",
      "target_versions": {
        "javaagent": [
          "io.projectreactor.kafka:reactor-kafka:[1.0.0,)"
        ]
      }
    },
    {
      "name": "reactor-netty-0.9",
      "scope": {
        "name": "io.opentelemetry.reactor-netty-0.9"
      },
      "semconv": [],
      "source_path": "instrumentation/reactor/reactor-netty/reactor-netty-0.9",
      "target_versions": {
        "javaagent": [
          "io.projectreactor.netty:reactor-netty:[0.8.2.RELEASE,1.0.0)"
        ]
      }
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enable the creation of Connect and DNS spans.",
          "name": "otel.instrumentation.reactor-netty.connection-telemetry.enabled",
          "type": "boolean"
        }
      ],
      "name": "reactor-netty-1.0",
      "scope": {
        "name": "io.opentelemetry.reactor-netty-1.0"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/reactor/reactor-netty/reactor-netty-1.0",
      "target_versions": {
        "javaagent": [
          "io.projectreactor.netty:reactor-netty-http:[1.0.0,)",
          "io.projectreactor.netty:reactor-netty:[1.0.0,)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "name": "rediscala-1.8",
      "scope": {
        "name": "io.opentelemetry.rediscala-1.8"
      },
      "semconv": [],
      "source_path": "instrumentation/rediscala-1.8",
      "target_versions": {
        "javaagent": [
          "com.github.Ma27:rediscala_2.11:[1.8.1,)",
          "com.github.Ma27:rediscala_2.12:[1.8.1,)",
          "com.github.Ma27:rediscala_2.13:[1.9.0,)",
          "com.github.etaty:rediscala_2.11:[1.5.0,)",
          "com.github.etaty:rediscala_2.12:[1.8.0,)",
          "com.github.etaty:rediscala_2.13:[1.9.0,)",
          "io.github.rediscala:rediscala_2.13:[1.10.0,)"
        ]
      }
    },
    {
      "name": "redisson-3.0",
      "scope": {
        "name": "io.opentelemetry.redisson-3.0"
      },
      "semconv": [],
      "source_path": "instrumentation/redisson/redisson-3.0",
      "target_versions": {
        "javaagent": [
          "org.redisson:redisson:[3.0.0,3.17.0)"
        ]
      }
    },
    {
      "name": "redisson-3.17",
      "scope": {
        "name": "io.opentelemetry.redisson-3.17"
      },
      "semconv": [],
      "source_path": "instrumentation/redisson/redisson-3.17",
      "target_versions": {
        "javaagent": [
          "org.redisson:redisson:[3.17.0,)"
        ]
      }
    },
    {
      "name": "resources",
      "scope": {
        "name": "io.opentelemetry.resources"
      },
      "semconv": [],
      "source_path": "instrumentation/resources"
    },
    {
      "name": "restlet-1.1",
      "scope": {
        "name": "io.opentelemetry.restlet-1.1"
      },
      "semconv": [],
      "source_path": "instrumentation/restlet/restlet-1.1",
      "target_versions": {
        "javaagent": [
          "org.restlet:org.restlet:[1.1.0, 1.2-M1)"
        ],
        "library": [
          "com.noelios.restlet:com.noelios.restlet:1.1.5",
          "org.restlet:org.restlet:[1.1.5,1.+)"
        ]
      }
    },
    {
      "name": "restlet-2.0",
      "scope": {
        "name": "io.opentelemetry.restlet-2.0"
      },
      "semconv": [],
      "source_path": "instrumentation/restlet/restlet-2.0",
      "target_versions": {
        "javaagent": [
          "org.restlet.jse:org.restlet:[2.0.0,)"
        ],
        "library": [
          "org.restlet.jse:org.restlet:2.0.2"
        ]
      }
    },
    {
      "name": "rmi",
      "scope": {
        "name": "io.opentelemetry.rmi"
      },
      "semconv": [],
      "source_path": "instrumentation/rmi",
      "target_versions": {
        "javaagent": [
          "Java 8+"
        ]
      }
    },
    {
      "name": "rocketmq-client-4.8",
      "scope": {
        "name": "io.opentelemetry.rocketmq-client-4.8"
      },
      "semconv": [],
      "source_path": "instrumentation/rocketmq/rocketmq-client/rocketmq-client-4.8",
      "target_versions": {
        "javaagent": [
          "org.apache.rocketmq:rocketmq-client:[4.0.0,)"
        ],
        "library": [
          "org.apache.rocketmq:rocketmq-client:4.8.0"
        ]
      }
    },
    {
      "name": "rocketmq-client-5.0",
      "scope": {
        "name": "io.opentelemetry.rocketmq-client-5.0"
      },
      "semconv": [],
      "source_path": "instrumentation/rocketmq/rocketmq-client/rocketmq-client-5.0",
      "target_versions": {
        "javaagent": [
          "org.apache.rocketmq:rocketmq-client-java:[5.0.0,)"
        ]
      }
    },
    {
      "minimum_java_version": 17,
      "name": "runtime-telemetry-java17",
      "scope": {
        "name": "io.opentelemetry.runtime-telemetry-java17"
      },
      "semconv": [],
      "source_path": "instrumentation/runtime-telemetry/runtime-telemetry-java17"
    },
    {
      "name": "runtime-telemetry-java8",
      "scope": {
        "name": "io.opentelemetry.runtime-telemetry-java8"
      },
      "semconv": [],
      "source_path": "instrumentation/runtime-telemetry/runtime-telemetry-java8"
    },
    {
      "name": "rxjava-1.0",
      "scope": {
        "name": "io.opentelemetry.rxjava-1.0"
      },
      "semconv": [],
      "source_path": "instrumentation/rxjava/rxjava-1.0",
      "target_versions": {
        "library": [
          "io.reactivex:rxjava:1.0.7"
        ]
      }
    },
    {
      "name": "rxjava-2.0",
      "scope": {
        "name": "io.opentelemetry.rxjava-2.0"
      },
      "semconv": [],
      "source_path": "instrumentation/rxjava/rxjava-2.0",
      "target_versions": {
        "javaagent": [
          "io.reactivex.rxjava2:rxjava:[2.0.6,)"
        ],
        "library": [
          "io.reactivex.rxjava2:rxjava:2.1.3"
        ]
      }
    },
    {
      "name": "rxjava-3.0",
      "scope": {
        "name": "io.opentelemetry.rxjava-3.0"
      },
      "semconv": [],
      "source_path": "instrumentation/rxjava/rxjava-3.0",
      "target_versions": {
        "javaagent": [
          "io.reactivex.rxjava3:rxjava:[3.0.0,3.1.0]"
        ],
        "library": [
          "io.reactivex.rxjava3:rxjava:[3.0.12,3.1.0)"
        ]
      }
    },
    {
      "name": "rxjava-3.1.1",
      "scope": {
        "name": "io.opentelemetry.rxjava-3.1.1"
      },
      "semconv": [],
      "source_path": "instrumentation/rxjava/rxjava-3.1.1",
      "target_versions": {
        "javaagent": [
          "io.reactivex.rxjava3:rxjava:[3.1.1,)"
        ],
        "library": [
          "io.reactivex.rxjava3:rxjava:3.1.1"
        ]
      }
    },
    {
      "name": "scala-fork-join-2.8",
      "scope": {
        "name": "io.opentelemetry.scala-fork-join-2.8"
      },
      "semconv": [],
      "source_path": "instrumentation/scala-fork-join-2.8",
      "target_versions": {
        "javaagent": [
          "org.scala-lang:scala-library:[2.8.0,2.12.0)"
        ]
      }
    },
    {
      "name": "servlet-2.2",
      "scope": {
        "name": "io.opentelemetry.servlet-2.2"
      },
      "semconv": [],
      "source_path": "instrumentation/servlet/servlet-2.2",
      "target_versions": {
        "javaagent": [
          "javax.servlet:servlet-api:[2.2, 3.0)"
        ]
      }
    },
    {
      "name": "servlet-3.0",
      "scope": {
        "name": "io.opentelemetry.servlet-3.0"
      },
      "semconv": [],
      "source_path": "instrumentation/servlet/servlet-3.0",
      "target_versions": {
        "javaagent": [
          "javax.servlet:javax.servlet-api:[3.0,)"
        ]
      }
    },
    {
      "name": "servlet-5.0",
      "scope": {
        "name": "io.opentelemetry.servlet-5.0"
      },
      "semconv": [],
      "source_path": "instrumentation/servlet/servlet-5.0",
      "target_versions": {
        "javaagent": [
          "jakarta.servlet:jakarta.servlet-api:[5.0.0,)"
        ]
      }
    },
    {
      "description": "This instrumentation does not emit telemetry on its own. Instead, it extracts the HTTP route and attaches it to SERVER spans and HTTP server metrics.\n",
      "name": "spark-2.3",
      "scope": {
        "name": "io.opentelemetry.spark-2.3"
      },
      "semconv": [],
      "source_path": "instrumentation/spark-2.3",
      "target_versions": {
        "javaagent": [
          "com.sparkjava:spark-core:[2.3,)"
        ]
      }
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Adds the experimental attribute `job.system` to spans.",
          "name": "otel.instrumentation.spring-batch.experimental-span-attributes",
          "type": "boolean"
        },
        {
          "default": false,
          "description": "When enabled, a new root span will be created for each chunk processing. Please note that this may lead to a high number of spans being created.",
          "name": "otel.instrumentation.spring-batch.experimental.chunk.new-trace",
          "type": "boolean"
        },
        {
          "default": false,
          "description": "When enabled, spans will be created for each item processed. Please note that this may lead to a high number of spans being created.",
          "name": "otel.instrumentation.spring-batch.item.enabled",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables INTERNAL spans for jobs run by the Spring Batch framework.",
      "disabled_by_default": true,
      "name": "spring-batch-3.0",
      "scope": {
        "name": "io.opentelemetry.spring-batch-3.0"
      },
      "semconv": [],
      "source_path": "instrumentation/spring/spring-batch-3.0",
      "target_versions": {
        "javaagent": [
          "org.springframework.batch:spring-batch-core:[3.0.0.RELEASE,5)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "job.system",
                  "type": "STRING"
                }
              ],
              "span_kind": "INTERNAL"
            }
          ],
          "when": "otel.instrumentation.spring-batch.experimental-span-attributes=true"
        }
      ]
    },
    {
      "description": "This instrumentation configures the OpenTelemetry Micrometer bridge to receive metrics from Spring Boot Actuator. It does not produce telemetry on its own.\n",
      "disabled_by_default": true,
      "name": "spring-boot-actuator-autoconfigure-2.0",
      "scope": {
        "name": "io.opentelemetry.spring-boot-actuator-autoconfigure-2.0"
      },
      "semconv": [],
      "source_path": "instrumentation/spring/spring-boot-actuator-autoconfigure-2.0",
      "target_versions": {
        "javaagent": [
          "org.springframework.boot:spring-boot-actuator-autoconfigure:[2.0.0.RELEASE,)"
        ]
      }
    },
    {
      "description": "This instrumentation automatically detects the `service.name` and `service.version` for Spring Boot applications and sets them as resource attributes.\nIt uses the following strategies (first successful wins):\n  - Check for the SPRING_APPLICATION_NAME environment variable\n  - Check for spring.application.name system property\n  - Check for application.properties file on the classpath\n  - Check for application.properties in the current working dir\n  - Check for application.yml on the classpath\n  - Check for application.yml in the current working dir\n  - Check for --spring.application.name program argument (not jvm arg) via ProcessHandle\n  - Check for --spring.application.name program argument via sun.java.command system property\n",
      "name": "spring-boot-resources",
      "scope": {
        "name": "io.opentelemetry.spring-boot-resources"
      },
      "semconv": [],
      "source_path": "instrumentation/spring/spring-boot-resources"
    },
    {
      "description": "This instrumentation enhances tracing for Spring Cloud AWS. It augments the existing AWS SDK instrumentation by providing higher-level tracing for SQS operations, capturing details specific to Spring Cloud AWS SQS usage and linking them to the underlying AWS SDK traces.\n",
      "minimum_java_version": 17,
      "name": "spring-cloud-aws-3.0",
      "scope": {
        "name": "io.opentelemetry.spring-cloud-aws-3.0"
      },
      "semconv": [],
      "source_path": "instrumentation/spring/spring-cloud-aws-3.0",
      "target_versions": {
        "javaagent": [
          "io.awspring.cloud:spring-cloud-aws-sqs:[3.0.0,)"
        ]
      }
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enables experimental `spring-cloud-gateway.route` attributes (e.g., `spring-cloud-gateway.route.id`, `spring-cloud-gateway.route.uri`, etc.) on spans.\n",
          "name": "otel.instrumentation.spring-cloud-gateway.experimental-span-attributes",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enhances tracing for Spring Cloud Gateway. It does not generate new telemetry on its own, but rather enriches existing traces produced by other instrumentations like Netty and Spring WebFlux with Spring Cloud Gateway-specific attributes.\n",
      "name": "spring-cloud-gateway-2.0",
      "scope": {
        "name": "io.opentelemetry.spring-cloud-gateway-2.0"
      },
      "semconv": [],
      "source_path": "instrumentation/spring/spring-cloud-gateway/spring-cloud-gateway-2.0",
      "target_versions": {
        "javaagent": [
          "org.springframework.cloud:spring-cloud-starter-gateway:[2.0.0.RELEASE,]"
        ]
      }
    },
    {
      "description": "This instrumentation ensures proper context propagation for asynchronous operations within Spring Core. It modifies how tasks are submitted and executed to ensure that spans created by other instrumentations are correctly linked across thread boundaries, rather than generating any new telemetry itself.\n",
      "minimum_java_version": 17,
      "name": "spring-core-2.0",
      "scope": {
        "name": "io.opentelemetry.spring-core-2.0"
      },
      "semconv": [],
      "source_path": "instrumentation/spring/spring-core-2.0",
      "target_versions": {
        "javaagent": [
          "org.springframework:spring-core:[2.0,]"
        ]
      }
    },
    {
      "description": "This instrumentation enhances tracing for Spring Data operations. It works in conjunction with other instrumentations, such as JDBC, to provide additional context and details for database interactions initiated through Spring Data.\n",
      "name": "spring-data-1.8",
      "scope": {
        "name": "io.opentelemetry.spring-data-1.8"
      },
      "semconv": [
        "Code"
      ],
      "source_path": "instrumentation/spring/spring-data/spring-data-1.8",
      "target_versions": {
        "javaagent": [
          "org.springframework.data:spring-data-commons:[1.8.0.RELEASE,]",
          "org.springframework:spring-aop:[1.2,]"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "code.function",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "code.namespace",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "INTERNAL"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": "",
          "description": "Allows configuring headers to capture as span attributes.",
          "name": "otel.instrumentation.messaging.experimental.capture-headers",
          "type": "list"
        },
        {
          "default": "*",
          "description": "An array of Spring channel name patterns that will be intercepted.",
          "name": "otel.instrumentation.spring-integration.global-channel-interceptor-patterns",
          "type": "list"
        },
        {
          "default": false,
          "description": "Create producer spans when messages are sent to an output channel. Enable when you're using a messaging library that doesn't have its own instrumentation for generating producer spans. Note that the detection of output channels only works for Spring Cloud Stream `DirectWithAttributesChannel`.\n",
          "name": "otel.instrumentation.spring-integration.producer.enabled",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables PRODUCER and CONSUMER spans for Spring Integration.",
      "name": "spring-integration-4.1",
      "scope": {
        "name": "io.opentelemetry.spring-integration-4.1"
      },
      "semconv": [],
      "source_path": "instrumentation/spring/spring-integration-4.1",
      "target_versions": {
        "javaagent": [
          "org.springframework.integration:spring-integration-core:[4.1.0.RELEASE,)"
        ],
        "library": [
          "org.springframework.integration:spring-integration-core:[4.1.0.RELEASE,5.+)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "messaging.operation",
                  "type": "STRING"
                }
              ],
              "span_kind": "CONSUMER"
            }
          ],
          "when": "default"
        },
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "messaging.operation",
                  "type": "STRING"
                }
              ],
              "span_kind": "CONSUMER"
            },
            {
              "attributes": [
                {
                  "name": "messaging.operation",
                  "type": "STRING"
                }
              ],
              "span_kind": "PRODUCER"
            }
          ],
          "when": "otel.instrumentation.spring-integration.producer.enabled=true"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": "",
          "description": "A comma-separated list of header names to capture as span attributes.",
          "name": "otel.instrumentation.messaging.experimental.capture-headers",
          "type": "list"
        },
        {
          "default": false,
          "description": "Enables experimental receive telemetry, which will cause consumers to start a new trace, with only a span link connecting it to the producer trace.\n",
          "name": "otel.instrumentation.messaging.experimental.receive-telemetry.enabled",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables the generation of CONSUMER spans for Spring JMS.",
      "name": "spring-jms-2.0",
      "scope": {
        "name": "io.opentelemetry.spring-jms-2.0"
      },
      "semconv": [
        "Messaging"
      ],
      "source_path": "instrumentation/spring/spring-jms/spring-jms-2.0",
      "target_versions": {
        "javaagent": [
          "org.springframework:spring-jms:[2.0,6)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "messaging.destination.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.message.id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.operation",
                  "type": "STRING"
                },
                {
                  "name": "messaging.system",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CONSUMER"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": "",
          "description": "A comma-separated list of header names to capture as span attributes.",
          "name": "otel.instrumentation.messaging.experimental.capture-headers",
          "type": "list"
        },
        {
          "default": false,
          "description": "Enables experimental receive telemetry, which will cause consumers to start a new trace, with only a span link connecting it to the producer trace.\n",
          "name": "otel.instrumentation.messaging.experimental.receive-telemetry.enabled",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables the generation of CONSUMER spans for Spring JMS.",
      "minimum_java_version": 17,
      "name": "spring-jms-6.0",
      "scope": {
        "name": "io.opentelemetry.spring-jms-6.0"
      },
      "semconv": [
        "Messaging"
      ],
      "source_path": "instrumentation/spring/spring-jms/spring-jms-6.0",
      "target_versions": {
        "javaagent": [
          "org.springframework:spring-jms:[6.0.0,)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "messaging.destination.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.message.id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.operation",
                  "type": "STRING"
                },
                {
                  "name": "messaging.system",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CONSUMER"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enables capturing experimental span attribute `kafka.record.queue_time_ms`",
          "name": "otel.instrumentation.kafka.experimental-span-attributes",
          "type": "boolean"
        },
        {
          "default": "",
          "description": "A comma-separated list of header names to capture as span attributes.",
          "name": "otel.instrumentation.messaging.experimental.capture-headers",
          "type": "list"
        },
        {
          "default": false,
          "description": "Enables experimental receive telemetry, which will cause consumers to start a new trace, with only a span link connecting it to the producer trace.\n",
          "name": "otel.instrumentation.messaging.experimental.receive-telemetry.enabled",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables CONSUMER spans for Spring Kafka listeners.",
      "name": "spring-kafka-2.7",
      "scope": {
        "name": "io.opentelemetry.spring-kafka-2.7"
      },
      "semconv": [
        "Messaging"
      ],
      "source_path": "instrumentation/spring/spring-kafka-2.7",
      "target_versions": {
        "javaagent": [
          "org.springframework.kafka:spring-kafka:[2.7.0,)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "kafka.record.queue_time_ms",
                  "type": "LONG"
                },
                {
                  "name": "messaging.batch.message_count",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "messaging.client_id",
                  "type": "STRING"
                },
                {
                  "name": "messaging.destination.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.destination.partition.id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.kafka.consumer.group",
                  "type": "STRING"
                },
                {
                  "name": "messaging.kafka.message.key",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.kafka.message.offset",
                  "type": "LONG"
                },
                {
                  "name": "messaging.message.body.size",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "messaging.operation",
                  "type": "STRING"
                },
                {
                  "name": "messaging.system",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CONSUMER"
            }
          ],
          "when": "otel.instrumentation.kafka.experimental-span-attributes=true"
        },
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "messaging.batch.message_count",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "messaging.client_id",
                  "type": "STRING"
                },
                {
                  "name": "messaging.destination.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.destination.partition.id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.kafka.consumer.group",
                  "type": "STRING"
                },
                {
                  "name": "messaging.kafka.message.key",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.kafka.message.offset",
                  "type": "LONG"
                },
                {
                  "name": "messaging.message.body.size",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "messaging.operation",
                  "type": "STRING"
                },
                {
                  "name": "messaging.system",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CONSUMER"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": "",
          "description": "A comma-separated list of header names to capture as span attributes.",
          "name": "otel.instrumentation.messaging.experimental.capture-headers",
          "type": "list"
        },
        {
          "default": false,
          "description": "Enables experimental receive telemetry, which will cause consumers to start a new trace, with only a span link connecting it to the producer trace.\n",
          "name": "otel.instrumentation.messaging.experimental.receive-telemetry.enabled",
          "type": "boolean"
        },
        {
          "default": false,
          "description": "Enables capturing experimental span attribute `messaging.pulsar.message.type` on PRODUCER spans.\n",
          "name": "otel.instrumentation.pulsar.experimental-span-attributes",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables CONSUMER spans for Spring Pulsar listeners.",
      "minimum_java_version": 17,
      "name": "spring-pulsar-1.0",
      "scope": {
        "name": "io.opentelemetry.spring-pulsar-1.0"
      },
      "semconv": [
        "Messaging"
      ],
      "source_path": "instrumentation/spring/spring-pulsar-1.0",
      "target_versions": {
        "javaagent": [
          "org.springframework.pulsar:spring-pulsar:[1.0.0,)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "messaging.destination.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.message.body.size",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "messaging.message.id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.operation",
                  "type": "STRING"
                },
                {
                  "name": "messaging.system",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CONSUMER"
            }
          ],
          "when": "default"
        },
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "messaging.destination.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.message.body.size",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "messaging.message.id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.operation",
                  "type": "STRING"
                },
                {
                  "name": "messaging.system",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CONSUMER"
            }
          ],
          "when": "otel.instrumentation.pulsar.experimental-span-attributes=true"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": "",
          "description": "A comma-separated list of header names to capture as span attributes.",
          "name": "otel.instrumentation.messaging.experimental.capture-headers",
          "type": "list"
        }
      ],
      "description": "This instrumentation enables CONSUMER spans for Spring RabbitMQ listeners.",
      "name": "spring-rabbit-1.0",
      "scope": {
        "name": "io.opentelemetry.spring-rabbit-1.0"
      },
      "semconv": [
        "Messaging"
      ],
      "source_path": "instrumentation/spring/spring-rabbit-1.0",
      "target_versions": {
        "javaagent": [
          "org.springframework.amqp:spring-rabbit:(,)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "messaging.destination.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.message.body.size",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "messaging.operation",
                  "type": "STRING"
                },
                {
                  "name": "messaging.system",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CONSUMER"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "description": "This instrumentation enables CLIENT and SERVER spans for Spring RMI applications.",
      "name": "spring-rmi-4.0",
      "scope": {
        "name": "io.opentelemetry.spring-rmi-4.0"
      },
      "semconv": [
        "Aws"
      ],
      "source_path": "instrumentation/spring/spring-rmi-4.0",
      "target_versions": {
        "javaagent": [
          "org.springframework:spring-context:[4.0.0.RELEASE,6)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "rpc.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.service",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.system",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            },
            {
              "attributes": [
                {
                  "name": "rpc.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.service",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.system",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "SERVER"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Adds the experimental span attribute `job.system` with the value `spring_scheduling`.",
          "name": "otel.instrumentation.spring-scheduling.experimental-span-attributes",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables tracing for Spring Scheduling tasks.",
      "name": "spring-scheduling-3.1",
      "scope": {
        "name": "io.opentelemetry.spring-scheduling-3.1"
      },
      "semconv": [
        "Code"
      ],
      "source_path": "instrumentation/spring/spring-scheduling-3.1",
      "target_versions": {
        "javaagent": [
          "org.springframework:spring-context:[3.1.0.RELEASE,]"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "code.function",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "code.namespace",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "INTERNAL"
            }
          ],
          "when": "default"
        },
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "code.function",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "code.namespace",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "job.system",
                  "type": "STRING"
                }
              ],
              "span_kind": "INTERNAL"
            }
          ],
          "when": "otel.instrumentation.spring-scheduling.experimental-span-attributes=true"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enables capturing the enduser.id attribute.",
          "name": "otel.instrumentation.common.enduser.id.enabled",
          "type": "boolean"
        },
        {
          "default": false,
          "description": "Enables capturing the enduser.role attribute.",
          "name": "otel.instrumentation.common.enduser.role.enabled",
          "type": "boolean"
        },
        {
          "default": false,
          "description": "Enables capturing the enduser.scope attribute.",
          "name": "otel.instrumentation.common.enduser.scope.enabled",
          "type": "boolean"
        },
        {
          "default": "ROLE_",
          "description": "Prefix of granted authorities identifying roles to capture in the `enduser.role` semantic attribute.",
          "name": "otel.instrumentation.spring-security.enduser.role.granted-authority-prefix",
          "type": "string"
        },
        {
          "default": "SCOPE_",
          "description": "Prefix of granted authorities identifying scopes to capture in the `enduser.scopes` semantic attribute.",
          "name": "otel.instrumentation.spring-security.scope.role.granted-authority-prefix",
          "type": "string"
        }
      ],
      "description": "This instrumentation does not emit any telemetry on its own. Instead, it captures enduser attributes, and is only enabled when at least one of the `enduser` configurations is enabled.\nNOTE: The `enduser` attributes have been deprecated and will be removed in 3.0+ of the java agent.\n",
      "minimum_java_version": 17,
      "name": "spring-security-config-6.0",
      "scope": {
        "name": "io.opentelemetry.spring-security-config-6.0"
      },
      "semconv": [],
      "source_path": "instrumentation/spring/spring-security-config-6.0",
      "target_versions": {
        "javaagent": [
          "org.springframework.security:spring-security-config:[6.0.0,]"
        ],
        "library": [
          "io.projectreactor:reactor-core:3.5.0",
          "jakarta.servlet:jakarta.servlet-api:6.0.0",
          "org.springframework.security:spring-security-config:6.0.0",
          "org.springframework.security:spring-security-web:6.0.0",
          "org.springframework:spring-web:6.0.0"
        ]
      }
    },
    {
      "description": "This instrumentation provides a library integration that enables capturing HTTP client spans and metrics for Spring's RestTemplate. The agent integration enriches HTTP server spans and metrics with route information.\n",
      "name": "spring-web-3.1",
      "scope": {
        "name": "io.opentelemetry.spring-web-3.1"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/spring/spring-web/spring-web-3.1",
      "target_versions": {
        "javaagent": [
          "org.springframework:spring-web:[3.1.0.RELEASE,6)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "description": "This instrumentation enriches HTTP server spans and metrics with route information.",
      "name": "spring-web-6.0",
      "scope": {
        "name": "io.opentelemetry.spring-web-6.0"
      },
      "semconv": [],
      "source_path": "instrumentation/spring/spring-web/spring-web-6.0",
      "target_versions": {
        "javaagent": [
          "org.springframework:spring-web:[6.0.0,)"
        ]
      }
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enables the creation of experimental controller (INTERNAL) spans.",
          "name": "otel.instrumentation.common.experimental.controller-telemetry.enabled",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables HTTP client spans and metrics for Spring WebFlux 5.0. It also optionally enables experimental controller (INTERNAL) spans.\n",
      "name": "spring-webflux-5.0",
      "scope": {
        "name": "io.opentelemetry.spring-webflux-5.0"
      },
      "semconv": [
        "Code",
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/spring/spring-webflux/spring-webflux-5.0",
      "target_versions": {
        "javaagent": [
          "io.projectreactor.ipc:reactor-netty:[0.7.0.RELEASE,)",
          "io.projectreactor.netty:reactor-netty:[0.8.0.RELEASE,)",
          "org.springframework:spring-webflux:[5.0.0.RELEASE,)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            },
            {
              "attributes": [
                {
                  "name": "code.function",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "code.namespace",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "INTERNAL"
            }
          ],
          "when": "otel.instrumentation.common.experimental.controller-telemetry.enabled"
        }
      ]
    },
    {
      "description": "This instrumentation provides a library integration for the Spring WebFlux WebClient and Webflux server versions 5.3+ that enables HTTP client and server spans and metrics.\n",
      "name": "spring-webflux-5.3",
      "scope": {
        "name": "io.opentelemetry.spring-webflux-5.3"
      },
      "semconv": [
        "Client",
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/spring/spring-webflux/spring-webflux-5.3",
      "target_versions": {
        "library": [
          "org.springframework:spring-webflux:5.3.0"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            },
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "http.route",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.scheme",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "Duration of HTTP server requests.",
              "name": "http.server.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            },
            {
              "attributes": [
                {
                  "name": "client.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "http.route",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.path",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.query",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.scheme",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "user_agent.original",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "SERVER"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enables the creation of experimental controller (INTERNAL) spans.",
          "name": "otel.instrumentation.common.experimental.controller-telemetry.enabled",
          "type": "boolean"
        },
        {
          "default": false,
          "description": "Enables the creation of experimental view (INTERNAL) spans.",
          "name": "otel.instrumentation.common.experimental.view-telemetry.enabled",
          "type": "boolean"
        },
        {
          "default": false,
          "description": "Enables the capture of experimental span attributes `spring-webmvc-view-name` and `spring-webmvc.view.type`.\n",
          "name": "otel.instrumentation.spring-webmvc.experimental-span-attributes",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables optional Controller and View (INTERNAL) spans for Spring WebMVC 3.1+.\n",
      "name": "spring-webmvc-3.1",
      "scope": {
        "name": "io.opentelemetry.spring-webmvc-3.1"
      },
      "semconv": [
        "Code"
      ],
      "source_path": "instrumentation/spring/spring-webmvc/spring-webmvc-3.1",
      "target_versions": {
        "javaagent": [
          "org.springframework:spring-webmvc:[3.1.0.RELEASE,6)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "code.function",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "code.namespace",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "INTERNAL"
            }
          ],
          "when": "default"
        },
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "code.function",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "code.namespace",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "spring-webmvc.view.type",
                  "type": "STRING"
                }
              ],
              "span_kind": "INTERNAL"
            }
          ],
          "when": "otel.instrumentation.spring-webmvc.experimental-span-attributes=true"
        }
      ]
    },
    {
      "description": "This instrumentation provides a library integration for Spring WebMVC controllers, that enables the creation of HTTP server spans and metrics for requests processed by the Spring servlet container.\n",
      "name": "spring-webmvc-5.3",
      "scope": {
        "name": "io.opentelemetry.spring-webmvc-5.3"
      },
      "semconv": [
        "Client",
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/spring/spring-webmvc/spring-webmvc-5.3",
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "http.route",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.scheme",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "Duration of HTTP server requests.",
              "name": "http.server.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "client.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "http.route",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.path",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.query",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.scheme",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "user_agent.original",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "SERVER"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enables the creation of experimental controller (INTERNAL) spans.",
          "name": "otel.instrumentation.common.experimental.controller-telemetry.enabled",
          "type": "boolean"
        },
        {
          "default": false,
          "description": "Enables the creation of experimental view (INTERNAL) spans.",
          "name": "otel.instrumentation.common.experimental.view-telemetry.enabled",
          "type": "boolean"
        },
        {
          "default": false,
          "description": "Enables the capture of experimental span attributes `spring-webmvc-view-name` and `spring-webmvc.view.type`.\n",
          "name": "otel.instrumentation.spring-webmvc.experimental-span-attributes",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables optional Controller and View (INTERNAL) spans for Spring WebMVC 6.0+.\n",
      "minimum_java_version": 17,
      "name": "spring-webmvc-6.0",
      "scope": {
        "name": "io.opentelemetry.spring-webmvc-6.0"
      },
      "semconv": [
        "Code"
      ],
      "source_path": "instrumentation/spring/spring-webmvc/spring-webmvc-6.0",
      "target_versions": {
        "javaagent": [
          "org.springframework:spring-webmvc:[6.0.0,)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "code.function",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "code.namespace",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "INTERNAL"
            }
          ],
          "when": "default"
        },
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "code.function",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "code.namespace",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "spring-webmvc.view.type",
                  "type": "STRING"
                }
              ],
              "span_kind": "INTERNAL"
            }
          ],
          "when": "otel.instrumentation.spring-webmvc.experimental-span-attributes=true"
        }
      ]
    },
    {
      "disabled_by_default": true,
      "name": "spring-ws-2.0",
      "scope": {
        "name": "io.opentelemetry.spring-ws-2.0"
      },
      "semconv": [],
      "source_path": "instrumentation/spring/spring-ws-2.0",
      "target_versions": {
        "javaagent": [
          "org.springframework.ws:spring-ws-core:[2.0.0.RELEASE,]"
        ]
      }
    },
    {
      "name": "spymemcached-2.12",
      "scope": {
        "name": "io.opentelemetry.spymemcached-2.12"
      },
      "semconv": [],
      "source_path": "instrumentation/spymemcached-2.12",
      "target_versions": {
        "javaagent": [
          "net.spy:spymemcached:[2.12.0,)"
        ]
      }
    },
    {
      "name": "struts-2.3",
      "scope": {
        "name": "io.opentelemetry.struts-2.3"
      },
      "semconv": [],
      "source_path": "instrumentation/struts/struts-2.3",
      "target_versions": {
        "javaagent": [
          "org.apache.struts:struts2-core:[2.1.0,7)"
        ]
      }
    },
    {
      "minimum_java_version": 17,
      "name": "struts-7.0",
      "scope": {
        "name": "io.opentelemetry.struts-7.0"
      },
      "semconv": [],
      "source_path": "instrumentation/struts/struts-7.0",
      "target_versions": {
        "javaagent": [
          "org.apache.struts:struts2-core:[7.0.0,)"
        ]
      }
    },
    {
      "name": "tapestry-5.4",
      "scope": {
        "name": "io.opentelemetry.tapestry-5.4"
      },
      "semconv": [],
      "source_path": "instrumentation/tapestry-5.4",
      "target_versions": {
        "javaagent": [
          "org.apache.tapestry:tapestry-core:[5.4.0,)"
        ]
      }
    },
    {
      "minimum_java_version": 11,
      "name": "tomcat-10.0",
      "scope": {
        "name": "io.opentelemetry.tomcat-10.0"
      },
      "semconv": [],
      "source_path": "instrumentation/tomcat/tomcat-10.0",
      "target_versions": {
        "javaagent": [
          "org.apache.tomcat.embed:tomcat-embed-core:[10,)"
        ]
      }
    },
    {
      "name": "tomcat-7.0",
      "scope": {
        "name": "io.opentelemetry.tomcat-7.0"
      },
      "semconv": [],
      "source_path": "instrumentation/tomcat/tomcat-7.0",
      "target_versions": {
        "javaagent": [
          "org.apache.tomcat.embed:tomcat-embed-core:[7.0.4, 10)"
        ]
      }
    },
    {
      "name": "tomcat-jdbc",
      "scope": {
        "name": "io.opentelemetry.tomcat-jdbc"
      },
      "semconv": [
        "Database Client"
      ],
      "source_path": "instrumentation/tomcat/tomcat-jdbc",
      "target_versions": {
        "javaagent": [
          "org.apache.tomcat:tomcat-jdbc:[8.5.0,)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                }
              ],
              "description": "The maximum number of idle open connections allowed.",
              "name": "db.client.connections.idle.max",
              "type": "LONG_SUM",
              "unit": "connections"
            },
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                }
              ],
              "description": "The minimum number of idle open connections allowed.",
              "name": "db.client.connections.idle.min",
              "type": "LONG_SUM",
              "unit": "connections"
            },
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                }
              ],
              "description": "The maximum number of open connections allowed.",
              "name": "db.client.connections.max",
              "type": "LONG_SUM",
              "unit": "connections"
            },
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                }
              ],
              "description": "The number of pending requests for an open connection, cumulative for the entire pool.",
              "name": "db.client.connections.pending_requests",
              "type": "LONG_SUM",
              "unit": "requests"
            },
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                },
                {
                  "name": "state",
                  "type": "STRING"
                }
              ],
              "description": "The number of connections that are currently in state described by the state attribute.",
              "name": "db.client.connections.usage",
              "type": "LONG_SUM",
              "unit": "connections"
            }
          ],
          "when": "default"
        },
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.client.connection.state",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The number of connections that are currently in state described by the state attribute.",
              "name": "db.client.connection.count",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "connection"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The maximum number of idle open connections allowed.",
              "name": "db.client.connection.idle.max",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "connection"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The minimum number of idle open connections allowed.",
              "name": "db.client.connection.idle.min",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "connection"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The maximum number of open connections allowed.",
              "name": "db.client.connection.max",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "connection"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The number of current pending requests for an open connection.",
              "name": "db.client.connection.pending_requests",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "request"
            }
          ],
          "when": "otel.semconv-stability.opt-in=database"
        }
      ]
    },
    {
      "name": "twilio-6.6",
      "scope": {
        "name": "io.opentelemetry.twilio-6.6"
      },
      "semconv": [],
      "source_path": "instrumentation/twilio-6.6",
      "target_versions": {
        "javaagent": [
          "com.twilio.sdk:twilio:(,8.0.0)"
        ]
      }
    },
    {
      "name": "undertow-1.4",
      "scope": {
        "name": "io.opentelemetry.undertow-1.4"
      },
      "semconv": [],
      "source_path": "instrumentation/undertow-1.4",
      "target_versions": {
        "javaagent": [
          "io.undertow:undertow-core:[1.4.0.Final,)"
        ]
      }
    },
    {
      "name": "vaadin-14.2",
      "scope": {
        "name": "io.opentelemetry.vaadin-14.2"
      },
      "semconv": [],
      "source_path": "instrumentation/vaadin-14.2",
      "target_versions": {
        "javaagent": [
          "com.vaadin:flow-server:[2.2.0,3)",
          "com.vaadin:flow-server:[3.1.0,)"
        ]
      }
    },
    {
      "name": "vertx-http-client-3.0",
      "scope": {
        "name": "io.opentelemetry.vertx-http-client-3.0"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/vertx/vertx-http-client/vertx-http-client-3.0",
      "target_versions": {
        "javaagent": [
          "io.vertx:vertx-core:[3.0.0,4.0.0)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "name": "vertx-http-client-4.0",
      "scope": {
        "name": "io.opentelemetry.vertx-http-client-4.0"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/vertx/vertx-http-client/vertx-http-client-4.0",
      "target_versions": {
        "javaagent": [
          "io.vertx:vertx-core:[4.0.0,5)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "minimum_java_version": 11,
      "name": "vertx-http-client-5.0",
      "scope": {
        "name": "io.opentelemetry.vertx-http-client-5.0"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/vertx/vertx-http-client/vertx-http-client-5.0",
      "target_versions": {
        "javaagent": [
          "io.vertx:vertx-core:[5.0.0,)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "name": "vertx-kafka-client-3.6",
      "scope": {
        "name": "io.opentelemetry.vertx-kafka-client-3.6"
      },
      "semconv": [],
      "source_path": "instrumentation/vertx/vertx-kafka-client-3.6",
      "target_versions": {
        "javaagent": [
          "io.vertx:vertx-kafka-client:[3.5.1,)"
        ]
      }
    },
    {
      "name": "vertx-redis-client-4.0",
      "scope": {
        "name": "io.opentelemetry.vertx-redis-client-4.0"
      },
      "semconv": [
        "Database Client"
      ],
      "source_path": "instrumentation/vertx/vertx-redis-client-4.0",
      "target_versions": {
        "javaagent": [
          "io.vertx:vertx-redis-client:[4.0.0,)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "db.namespace",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of database client operations.",
              "name": "db.client.operation.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "when": "otel.semconv-stability.opt-in=database"
        }
      ]
    },
    {
      "name": "vertx-rx-java-3.5",
      "scope": {
        "name": "io.opentelemetry.vertx-rx-java-3.5"
      },
      "semconv": [],
      "source_path": "instrumentation/vertx/vertx-rx-java-3.5",
      "target_versions": {
        "javaagent": [
          "io.vertx:vertx-rx-java2:[3.5.0,)"
        ]
      }
    },
    {
      "name": "vertx-sql-client-4.0",
      "scope": {
        "name": "io.opentelemetry.vertx-sql-client-4.0"
      },
      "semconv": [
        "Database Client"
      ],
      "source_path": "instrumentation/vertx/vertx-sql-client/vertx-sql-client-4.0",
      "target_versions": {
        "javaagent": [
          "io.vertx:vertx-sql-client:[4.0.0,5)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "db.collection.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.namespace",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of database client operations.",
              "name": "db.client.operation.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "when": "otel.semconv-stability.opt-in=database"
        }
      ]
    },
    {
      "minimum_java_version": 11,
      "name": "vertx-sql-client-5.0",
      "scope": {
        "name": "io.opentelemetry.vertx-sql-client-5.0"
      },
      "semconv": [
        "Database Client"
      ],
      "source_path": "instrumentation/vertx/vertx-sql-client/vertx-sql-client-5.0",
      "target_versions": {
        "javaagent": [
          "io.vertx:vertx-sql-client:[5.0.0,)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "db.collection.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.namespace",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of database client operations.",
              "name": "db.client.operation.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "when": "otel.semconv-stability.opt-in=database"
        }
      ]
    },
    {
      "name": "vertx-web-3.0",
      "scope": {
        "name": "io.opentelemetry.vertx-web-3.0"
      },
      "semconv": [],
      "source_path": "instrumentation/vertx/vertx-web-3.0",
      "target_versions": {
        "javaagent": [
          "io.vertx:vertx-web:[3.0.0,)"
        ]
      }
    },
    {
      "description": "Instrumentation for the vibur-dbcp library, which provides connection pool metrics.",
      "name": "vibur-dbcp-11.0",
      "scope": {
        "name": "io.opentelemetry.vibur-dbcp-11.0"
      },
      "semconv": [
        "Database Client"
      ],
      "source_path": "instrumentation/vibur-dbcp-11.0",
      "target_versions": {
        "javaagent": [
          "org.vibur:vibur-dbcp:[11.0,)"
        ],
        "library": [
          "org.vibur:vibur-dbcp:11.0"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                }
              ],
              "description": "The maximum number of open connections allowed.",
              "name": "db.client.connections.max",
              "type": "LONG_SUM",
              "unit": "connections"
            },
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                },
                {
                  "name": "state",
                  "type": "STRING"
                }
              ],
              "description": "The number of connections that are currently in state described by the state attribute.",
              "name": "db.client.connections.usage",
              "type": "LONG_SUM",
              "unit": "connections"
            }
          ],
          "when": "default"
        },
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.client.connection.state",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The number of connections that are currently in state described by the state attribute.",
              "name": "db.client.connection.count",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "connection"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The maximum number of open connections allowed.",
              "name": "db.client.connection.max",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "connection"
            }
          ],
          "when": "otel.semconv-stability.opt-in=database"
        }
      ]
    },
    {
      "name": "wicket-8.0",
      "scope": {
        "name": "io.opentelemetry.wicket-8.0"
      },
      "semconv": [],
      "source_path": "instrumentation/wicket-8.0",
      "target_versions": {
        "javaagent": [
          "org.apache.wicket:wicket:[8.0.0,]"
        ]
      }
    },
    {
      "name": "xxl-job-1.9.2",
      "scope": {
        "name": "io.opentelemetry.xxl-job-1.9.2"
      },
      "semconv": [],
      "source_path": "instrumentation/xxl-job/xxl-job-1.9.2",
      "target_versions": {
        "javaagent": [
          "com.xuxueli:xxl-job-core:[1.9.2, 2.1.2)"
        ]
      }
    },
    {
      "name": "xxl-job-2.1.2",
      "scope": {
        "name": "io.opentelemetry.xxl-job-2.1.2"
      },
      "semconv": [],
      "source_path": "instrumentation/xxl-job/xxl-job-2.1.2",
      "target_versions": {
        "javaagent": [
          "com.xuxueli:xxl-job-core:[2.1.2,2.3.0)"
        ]
      }
    },
    {
      "name": "xxl-job-2.3.0",
      "scope": {
        "name": "io.opentelemetry.xxl-job-2.3.0"
      },
      "semconv": [],
      "source_path": "instrumentation/xxl-job/xxl-job-2.3.0",
      "target_versions": {
        "javaagent": [
          "com.xuxueli:xxl-job-core:[2.3.0,)"
        ]
      }
    },
    {
      "name": "zio-2.0",
      "scope": {
        "name": "io.opentelemetry.zio-2.0"
      },
      "semconv": [],
      "source_path": "instrumentation/zio/zio-2.0",
      "target_versions": {
        "javaagent": [
          "dev.zio:zio_2.12:[2.0.0,)",
          "dev.zio:zio_2.13:[2.0.0,)",
          "dev.zio:zio_3:[2.0.0,)"
        ]
      }
    }
  ],
  "2.18": [
    {
      "description": "This instrumentation enables SERVER spans and metrics for the ActiveJ HTTP server.",
      "minimum_java_version": 17,
      "name": "activej-http-6.0",
      "scope": {
        "name": "io.opentelemetry.activej-http-6.0"
      },
      "semconv": [
        "Client",
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/activej-http-6.0",
      "target_versions": {
        "javaagent": [
          "io.activej:activej-http:[6.0,)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.scheme",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "Duration of HTTP server requests.",
              "name": "http.server.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "client.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.path",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.query",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.scheme",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "user_agent.original",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "SERVER"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "description": "This instrumentation provides context propagation for Akka actors, it does not emit any telemetry on its own.",
      "name": "akka-actor-2.3",
      "scope": {
        "name": "io.opentelemetry.akka-actor-2.3"
      },
      "semconv": [],
      "source_path": "instrumentation/akka/akka-actor-2.3",
      "target_versions": {
        "javaagent": [
          "com.typesafe.akka:akka-actor_2.11:[2.3,)",
          "com.typesafe.akka:akka-actor_2.12:[2.3,)",
          "com.typesafe.akka:akka-actor_2.13:[2.3,)"
        ]
      }
    },
    {
      "description": "This instrumentation provides context propagation for the Akka Fork-Join Pool, it does not emit any telemetry on its own.",
      "name": "akka-actor-fork-join-2.5",
      "scope": {
        "name": "io.opentelemetry.akka-actor-fork-join-2.5"
      },
      "semconv": [],
      "source_path": "instrumentation/akka/akka-actor-fork-join-2.5",
      "target_versions": {
        "javaagent": [
          "com.typesafe.akka:akka-actor_2.11:[2.5,)",
          "com.typesafe.akka:akka-actor_2.12:[2.5,2.6)",
          "com.typesafe.akka:akka-actor_2.13:[2.5.23,2.6)"
        ]
      }
    },
    {
      "description": "This instrumentation enables CLIENT and SERVER spans and metrics for the Akka HTTP client and server.",
      "name": "akka-http-10.0",
      "scope": {
        "name": "io.opentelemetry.akka-http-10.0"
      },
      "semconv": [
        "Client",
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/akka/akka-http-10.0",
      "target_versions": {
        "javaagent": [
          "com.typesafe.akka:akka-http_2.11:[10,)",
          "com.typesafe.akka:akka-http_2.12:[10,)",
          "com.typesafe.akka:akka-http_2.13:[10,)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            },
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "http.route",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.scheme",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "Duration of HTTP server requests.",
              "name": "http.server.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            },
            {
              "attributes": [
                {
                  "name": "client.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "http.route",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.path",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.query",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.scheme",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "user_agent.original",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "SERVER"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "description": "The Alibaba Druid instrumentation generates database connection pool metrics for druid data sources.\n",
      "name": "alibaba-druid-1.0",
      "scope": {
        "name": "io.opentelemetry.alibaba-druid-1.0"
      },
      "semconv": [
        "Database Client"
      ],
      "source_path": "instrumentation/alibaba-druid-1.0",
      "target_versions": {
        "javaagent": [
          "com.alibaba:druid:(,)"
        ],
        "library": [
          "com.alibaba:druid:1.0.0"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                }
              ],
              "description": "The maximum number of idle open connections allowed.",
              "name": "db.client.connections.idle.max",
              "type": "LONG_SUM",
              "unit": "connections"
            },
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                }
              ],
              "description": "The minimum number of idle open connections allowed.",
              "name": "db.client.connections.idle.min",
              "type": "LONG_SUM",
              "unit": "connections"
            },
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                }
              ],
              "description": "The maximum number of open connections allowed.",
              "name": "db.client.connections.max",
              "type": "LONG_SUM",
              "unit": "connections"
            },
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                }
              ],
              "description": "The number of pending requests for an open connection, cumulative for the entire pool.",
              "name": "db.client.connections.pending_requests",
              "type": "LONG_SUM",
              "unit": "requests"
            },
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                },
                {
                  "name": "state",
                  "type": "STRING"
                }
              ],
              "description": "The number of connections that are currently in state described by the state attribute.",
              "name": "db.client.connections.usage",
              "type": "LONG_SUM",
              "unit": "connections"
            }
          ],
          "when": "default"
        },
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.client.connection.state",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The number of connections that are currently in state described by the state attribute.",
              "name": "db.client.connection.count",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "connection"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The maximum number of idle open connections allowed.",
              "name": "db.client.connection.idle.max",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "connection"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The minimum number of idle open connections allowed.",
              "name": "db.client.connection.idle.min",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "connection"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The maximum number of open connections allowed.",
              "name": "db.client.connection.max",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "connection"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The number of current pending requests for an open connection.",
              "name": "db.client.connection.pending_requests",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "request"
            }
          ],
          "when": "otel.semconv-stability.opt-in=database"
        }
      ]
    },
    {
      "description": "This instrumentation enables database connection pools metrics for Apache DBCP.\nThe instrumentation uses `MBeanRegistration` methods for lifecycle detection, therefore it only activates if the `BasicDataSource` is registered to an `MBeanServer`. If using Spring Boot, this happens automatically as all Spring beans that support JMX registration are automatically registered by default.\n",
      "name": "apache-dbcp-2.0",
      "scope": {
        "name": "io.opentelemetry.apache-dbcp-2.0"
      },
      "semconv": [
        "Database Client"
      ],
      "source_path": "instrumentation/apache-dbcp-2.0",
      "target_versions": {
        "javaagent": [
          "org.apache.commons:commons-dbcp2:[2,)"
        ],
        "library": [
          "org.apache.commons:commons-dbcp2:2.0"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                }
              ],
              "description": "The maximum number of idle open connections allowed.",
              "name": "db.client.connections.idle.max",
              "type": "LONG_SUM",
              "unit": "connections"
            },
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                }
              ],
              "description": "The minimum number of idle open connections allowed.",
              "name": "db.client.connections.idle.min",
              "type": "LONG_SUM",
              "unit": "connections"
            },
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                }
              ],
              "description": "The maximum number of open connections allowed.",
              "name": "db.client.connections.max",
              "type": "LONG_SUM",
              "unit": "connections"
            },
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                },
                {
                  "name": "state",
                  "type": "STRING"
                }
              ],
              "description": "The number of connections that are currently in state described by the state attribute.",
              "name": "db.client.connections.usage",
              "type": "LONG_SUM",
              "unit": "connections"
            }
          ],
          "when": "default"
        },
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.client.connection.state",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The number of connections that are currently in state described by the state attribute.",
              "name": "db.client.connection.count",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "connection"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The maximum number of idle open connections allowed.",
              "name": "db.client.connection.idle.max",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "connection"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The minimum number of idle open connections allowed.",
              "name": "db.client.connection.idle.min",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "connection"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The maximum number of open connections allowed.",
              "name": "db.client.connection.max",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "connection"
            }
          ],
          "when": "otel.semconv-stability.opt-in=database"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": "",
          "description": "Used to specify a mapping from host names or IP addresses to peer services.",
          "name": "otel.instrumentation.common.peer-service-mapping",
          "type": "map"
        }
      ],
      "description": "The Apache Dubbo instrumentation provides client and server spans for Apache Dubbo RPC calls. Each call produces a span named after the Dubbo method, enriched with standard RPC attributes (system, service, method), network attributes, and error details if an exception occurs.",
      "name": "apache-dubbo-2.7",
      "scope": {
        "name": "io.opentelemetry.apache-dubbo-2.7"
      },
      "semconv": [
        "Aws",
        "Database Client"
      ],
      "source_path": "instrumentation/apache-dubbo-2.7",
      "target_versions": {
        "javaagent": [
          "org.apache.dubbo:dubbo:[2.7,)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "rpc.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.service",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.system",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "CLIENT"
            },
            {
              "attributes": [
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "rpc.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.service",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.system",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "SERVER"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "description": "This instrumentation enables CLIENT spans and metrics for the Apache HttpAsyncClient.",
      "name": "apache-httpasyncclient-4.1",
      "scope": {
        "name": "io.opentelemetry.apache-httpasyncclient-4.1"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/apache-httpasyncclient-4.1",
      "target_versions": {
        "javaagent": [
          "org.apache.httpcomponents:httpasyncclient:[4.1,)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "description": "This instrumentation enables CLIENT spans and metrics for versions 2 and 3 of the Apache HttpClient.",
      "name": "apache-httpclient-2.0",
      "scope": {
        "name": "io.opentelemetry.apache-httpclient-2.0"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/apache-httpclient/apache-httpclient-2.0",
      "target_versions": {
        "javaagent": [
          "commons-httpclient:commons-httpclient:[2.0,4.0)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "description": "This instrumentation enables CLIENT spans and metrics for version 4 of the Apache HttpClient.",
      "name": "apache-httpclient-4.0",
      "scope": {
        "name": "io.opentelemetry.apache-httpclient-4.0"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/apache-httpclient/apache-httpclient-4.0",
      "target_versions": {
        "javaagent": [
          "io.dropwizard:dropwizard-client:(,3.0.0)",
          "org.apache.httpcomponents:httpclient:[4.0,)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "description": "This instrumentation provides a library integration that enables CLIENT spans and metrics for the Apache HttpClient.",
      "name": "apache-httpclient-4.3",
      "scope": {
        "name": "io.opentelemetry.apache-httpclient-4.3"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/apache-httpclient/apache-httpclient-4.3",
      "target_versions": {
        "library": [
          "org.apache.httpcomponents:httpclient:[4.3,4.+)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.resend_count",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "description": "This instrumentation enables CLIENT spans and metrics for version 5 of the Apache HttpClient.",
      "name": "apache-httpclient-5.0",
      "scope": {
        "name": "io.opentelemetry.apache-httpclient-5.0"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/apache-httpclient/apache-httpclient-5.0",
      "target_versions": {
        "javaagent": [
          "org.apache.httpcomponents.client5:httpclient5:[5.0,)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "description": "This instrumentation provides a library integration that enables CLIENT spans and metrics for the Apache HttpClient.",
      "name": "apache-httpclient-5.2",
      "scope": {
        "name": "io.opentelemetry.apache-httpclient-5.2"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/apache-httpclient/apache-httpclient-5.2",
      "target_versions": {
        "library": [
          "org.apache.httpcomponents.client5:httpclient5:5.2.1"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.resend_count",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enables experimental `apache-shenyu.meta.` prefixed span attributes `app-name`, `service-name`, `context-path`, `param-types`, `id`, `method-name`, `rpc-type`, `path` and `rpc-ext`.\n",
          "name": "otel.instrumentation.apache-shenyu.experimental-span-attributes",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation does not emit telemetry on its own. Instead, it augments existing SERVER spans and HTTP server metrics with the HTTP route and Shenyu specific attributes.\n",
      "name": "apache-shenyu-2.4",
      "scope": {
        "name": "io.opentelemetry.apache-shenyu-2.4"
      },
      "semconv": [],
      "source_path": "instrumentation/apache-shenyu-2.4",
      "target_versions": {
        "javaagent": [
          "org.apache.shenyu:shenyu-web:[2.4.0,)"
        ]
      }
    },
    {
      "description": "This instrumentation enables CLIENT and SERVER spans and metrics for the Armeria HTTP client and server.",
      "name": "armeria-1.3",
      "scope": {
        "name": "io.opentelemetry.armeria-1.3"
      },
      "semconv": [
        "Client",
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/armeria/armeria-1.3",
      "target_versions": {
        "javaagent": [
          "com.linecorp.armeria:armeria:[1.3.0,)"
        ],
        "library": [
          "com.linecorp.armeria:armeria:1.3.0"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            },
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "http.route",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.scheme",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "Duration of HTTP server requests.",
              "name": "http.server.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            },
            {
              "attributes": [
                {
                  "name": "client.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "http.route",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.path",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.query",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.scheme",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "user_agent.original",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "SERVER"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "description": "This instrumentation enables CLIENT and SERVER spans and metrics for the Armeria gRPC client and server.",
      "name": "armeria-grpc-1.14",
      "scope": {
        "name": "io.opentelemetry.armeria-grpc-1.14"
      },
      "semconv": [
        "Aws",
        "Database Client",
        "Rpc"
      ],
      "source_path": "instrumentation/armeria/armeria-grpc-1.14",
      "target_versions": {
        "javaagent": [
          "com.linecorp.armeria:armeria-grpc:[1.14.0,)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "rpc.grpc.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "rpc.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.service",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.system",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "CLIENT"
            },
            {
              "attributes": [
                {
                  "name": "rpc.grpc.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "rpc.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.service",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.system",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "SERVER"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "description": "This instrumentation enables CLIENT spans and metrics for version 1 of the AsyncHttpClient (AHC) HTTP client.",
      "name": "async-http-client-1.9",
      "scope": {
        "name": "io.opentelemetry.async-http-client-1.9"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/async-http-client/async-http-client-1.9",
      "target_versions": {
        "javaagent": [
          "com.ning:async-http-client:[1.9.0,)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "description": "This instrumentation enables CLIENT spans and metrics for version 2 of the AsyncHttpClient (AHC) HTTP client.",
      "name": "async-http-client-2.0",
      "scope": {
        "name": "io.opentelemetry.async-http-client-2.0"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/async-http-client/async-http-client-2.0",
      "target_versions": {
        "javaagent": [
          "org.asynchttpclient:async-http-client:[2.0.0,)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "description": "This instrumentation does not emit telemetry on its own. Instead, it hooks into the Avaje Jex Context to extract the HTTP route and attach it to existing SERVER spans and HTTP server metrics.\n",
      "minimum_java_version": 21,
      "name": "avaje-jex-3.0",
      "scope": {
        "name": "io.opentelemetry.avaje-jex-3.0"
      },
      "semconv": [],
      "source_path": "instrumentation/avaje-jex-3.0",
      "target_versions": {
        "javaagent": [
          "io.avaje:avaje-jex:[3.0,)"
        ]
      }
    },
    {
      "configurations": [
        {
          "default": 10000,
          "description": "Flush timeout in milliseconds.",
          "name": "otel.instrumentation.aws-lambda.flush-timeout",
          "type": "int"
        }
      ],
      "description": "Provides lightweight instrumentation of the Lambda core library, supporting all versions. It generates FaaS SERVER spans with the `faas.invocation_id` attribute. Use this package if you only use `RequestStreamHandler` or know you don't use any event classes from `aws-lambda-java-events`. This also includes when you are using `aws-serverless-java-container` to run e.g., a Spring Boot application on Lambda.\n",
      "name": "aws-lambda-core-1.0",
      "scope": {
        "name": "io.opentelemetry.aws-lambda-core-1.0"
      },
      "semconv": [],
      "source_path": "instrumentation/aws-lambda/aws-lambda-core-1.0",
      "target_versions": {
        "javaagent": [
          "com.amazonaws:aws-lambda-java-core:[1.0.0,)"
        ],
        "library": [
          "com.amazonaws:aws-lambda-java-core:1.0.0"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "faas.invocation_id",
                  "type": "STRING"
                }
              ],
              "span_kind": "SERVER"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": 10000,
          "description": "Flush timeout in milliseconds.",
          "name": "otel.instrumentation.aws-lambda.flush-timeout",
          "type": "int"
        }
      ],
      "description": "Provides full instrumentation of the Lambda library, including standard and custom event types, from `aws-lambda-java-events` 2.2+.\n",
      "name": "aws-lambda-events-2.2",
      "scope": {
        "name": "io.opentelemetry.aws-lambda-events-2.2"
      },
      "semconv": [
        "Database Client",
        "HTTP",
        "Messaging"
      ],
      "source_path": "instrumentation/aws-lambda/aws-lambda-events-2.2",
      "target_versions": {
        "javaagent": [
          "com.amazonaws:aws-lambda-java-core:[1.0.0,)"
        ],
        "library": [
          "com.amazonaws:aws-lambda-java-core:1.0.0",
          "com.amazonaws:aws-lambda-java-events:2.2.1"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "messaging.operation",
                  "type": "STRING"
                },
                {
                  "name": "messaging.system",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CONSUMER"
            },
            {
              "attributes": [
                {
                  "name": "faas.invocation_id",
                  "type": "STRING"
                },
                {
                  "name": "faas.trigger",
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "user_agent.original",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "SERVER"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enables the experimental span attributes `aws.agent`, `aws.bucket.name`, `aws.queue.url`, `aws.queue.name`, `aws.stream.name`, `aws.table.name`, `aws.lambda.function.arn` and `aws.lambda.function.name` for AWS SDK instrumentation.\n",
          "name": "otel.instrumentation.aws-sdk.experimental-span-attributes",
          "type": "boolean"
        },
        {
          "default": "",
          "description": "Allows configuring headers to capture as span attributes.",
          "name": "otel.instrumentation.messaging.experimental.capture-headers",
          "type": "list"
        },
        {
          "default": false,
          "description": "Enables experimental receive telemetry, which will cause consumers to start a new trace, with only a span link connecting it to the producer trace.\n",
          "name": "otel.instrumentation.messaging.experimental.receive-telemetry.enabled",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation covers the AWS SDK 1.11+ client library, enabling messaging and client spans and metrics for calls to AWS services including DynamoDB, EC2, Kinesis, Lambda, RDS, S3, secrets manager, SNS/SQS and step functions.\n",
      "name": "aws-sdk-1.11",
      "scope": {
        "name": "io.opentelemetry.aws-sdk-1.11"
      },
      "semconv": [
        "Aws",
        "Database Client",
        "HTTP",
        "Messaging"
      ],
      "source_path": "instrumentation/aws-sdk/aws-sdk-1.11",
      "target_versions": {
        "javaagent": [
          "com.amazonaws:aws-java-sdk-core:[1.10.33,)",
          "com.amazonaws:aws-java-sdk-sqs:[1.10.33,)"
        ],
        "library": [
          "com.amazonaws:aws-java-sdk-core:1.11.0",
          "com.amazonaws:aws-java-sdk-sqs:[1.11.106,1.12.583)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "aws.agent",
                  "type": "STRING"
                },
                {
                  "name": "aws.bucket.name",
                  "type": "STRING"
                },
                {
                  "name": "aws.dynamodb.table_names",
                  "semconv": true,
                  "type": "STRING_ARRAY"
                },
                {
                  "name": "aws.lambda.function.arn",
                  "type": "STRING"
                },
                {
                  "name": "aws.lambda.function.name",
                  "type": "STRING"
                },
                {
                  "name": "aws.lambda.resource_mapping.id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "aws.queue.name",
                  "type": "STRING"
                },
                {
                  "name": "aws.queue.url",
                  "type": "STRING"
                },
                {
                  "name": "aws.request_id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "aws.sns.topic.arn",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "aws.step_functions.activity.arn",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "aws.step_functions.state_machine.arn",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "aws.stream.name",
                  "type": "STRING"
                },
                {
                  "name": "aws.table.name",
                  "type": "STRING"
                },
                {
                  "name": "db.operation",
                  "type": "STRING"
                },
                {
                  "name": "db.system",
                  "type": "STRING"
                },
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "messaging.destination.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.service",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.system",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            },
            {
              "attributes": [
                {
                  "name": "aws.agent",
                  "type": "STRING"
                },
                {
                  "name": "aws.queue.url",
                  "type": "STRING"
                },
                {
                  "name": "aws.request_id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "messaging.destination.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.message.id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.operation",
                  "type": "STRING"
                },
                {
                  "name": "messaging.system",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.service",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.system",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CONSUMER"
            }
          ],
          "when": "default"
        },
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of database client operations.",
              "name": "db.client.operation.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "aws.agent",
                  "type": "STRING"
                },
                {
                  "name": "aws.bucket.name",
                  "type": "STRING"
                },
                {
                  "name": "aws.dynamodb.table_names",
                  "semconv": true,
                  "type": "STRING_ARRAY"
                },
                {
                  "name": "aws.lambda.function.arn",
                  "type": "STRING"
                },
                {
                  "name": "aws.lambda.function.name",
                  "type": "STRING"
                },
                {
                  "name": "aws.lambda.resource_mapping.id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "aws.queue.name",
                  "type": "STRING"
                },
                {
                  "name": "aws.queue.url",
                  "type": "STRING"
                },
                {
                  "name": "aws.request_id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "aws.sns.topic.arn",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "aws.step_functions.activity.arn",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "aws.step_functions.state_machine.arn",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "aws.stream.name",
                  "type": "STRING"
                },
                {
                  "name": "aws.table.name",
                  "type": "STRING"
                },
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "messaging.destination.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.service",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.system",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            },
            {
              "attributes": [
                {
                  "name": "aws.agent",
                  "type": "STRING"
                },
                {
                  "name": "aws.queue.url",
                  "type": "STRING"
                },
                {
                  "name": "aws.request_id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "messaging.destination.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.message.id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.operation",
                  "type": "STRING"
                },
                {
                  "name": "messaging.system",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.service",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.system",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CONSUMER"
            }
          ],
          "when": "otel.semconv-stability.opt-in=database"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Determines whether errors returned by each individual HTTP request should be recorded as events for the SDK span.",
          "name": "otel.instrumentation.aws-sdk.experimental-record-individual-http-error",
          "type": "boolean"
        },
        {
          "default": false,
          "description": "Enables experimental span attributes `aws.agent`, `aws.lambda.function.arn` and `aws.lambda.function.name` for AWS SDK instrumentation.\n",
          "name": "otel.instrumentation.aws-sdk.experimental-span-attributes",
          "type": "boolean"
        },
        {
          "default": false,
          "description": "Determines whether the configured TextMapPropagator should be used to inject into supported messaging attributes (for SQS).",
          "name": "otel.instrumentation.aws-sdk.experimental-use-propagator-for-messaging",
          "type": "boolean"
        },
        {
          "default": false,
          "description": "Determines whether Generative AI events include full content of user and assistant messages. Note that full content can have data privacy and size concerns and care should be taken when enabling this\n",
          "name": "otel.instrumentation.genai.capture-message-content",
          "type": "boolean"
        },
        {
          "default": "",
          "description": "Allows configuring headers to capture as span attributes.",
          "name": "otel.instrumentation.messaging.experimental.capture-headers",
          "type": "list"
        },
        {
          "default": false,
          "description": "Enables experimental receive telemetry, which will cause consumers to start a new trace, with only a span link connecting it to the producer trace.\n",
          "name": "otel.instrumentation.messaging.experimental.receive-telemetry.enabled",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation covers the AWS SDK 2.2+ client library, enabling messaging and client spans and metrics for calls to AWS services including DynamoDB, EC2, Kinesis, Lambda, RDS, S3, SNS/SQS and Bedrock.\n",
      "name": "aws-sdk-2.2",
      "scope": {
        "name": "io.opentelemetry.aws-sdk-2.2"
      },
      "semconv": [
        "Aws",
        "Database Client",
        "Gen Ai",
        "HTTP",
        "Messaging"
      ],
      "source_path": "instrumentation/aws-sdk/aws-sdk-2.2",
      "target_versions": {
        "javaagent": [
          "software.amazon.awssdk:aws-core:[2.2.0,)",
          "software.amazon.awssdk:bedrock-runtime:[2.25.63,)",
          "software.amazon.awssdk:lambda:[2.17.0,)",
          "software.amazon.awssdk:sns:[2.2.0,)",
          "software.amazon.awssdk:sqs:[2.2.0,)"
        ],
        "library": [
          "software.amazon.awssdk:aws-core:2.2.0",
          "software.amazon.awssdk:aws-json-protocol:2.2.0",
          "software.amazon.awssdk:lambda:2.2.0",
          "software.amazon.awssdk:sns:2.2.0",
          "software.amazon.awssdk:sqs:2.2.0"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "gen_ai.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "gen_ai.request.model",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "gen_ai.system",
                  "type": "STRING"
                }
              ],
              "description": "GenAI operation duration.",
              "name": "gen_ai.client.operation.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            },
            {
              "attributes": [
                {
                  "name": "gen_ai.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "gen_ai.request.model",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "gen_ai.system",
                  "type": "STRING"
                },
                {
                  "name": "gen_ai.token.type",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "Measures number of input and output tokens used.",
              "name": "gen_ai.client.token.usage",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "token"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "aws.agent",
                  "type": "STRING"
                },
                {
                  "name": "aws.bucket.name",
                  "type": "STRING"
                },
                {
                  "name": "aws.dynamodb.global_secondary_indexes",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "aws.dynamodb.limit",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "aws.dynamodb.provisioned_throughput.read_capacity_units",
                  "type": "STRING"
                },
                {
                  "name": "aws.dynamodb.provisioned_throughput.write_capacity_units",
                  "type": "STRING"
                },
                {
                  "name": "aws.dynamodb.select",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "aws.lambda.function.arn",
                  "type": "STRING"
                },
                {
                  "name": "aws.lambda.function.name",
                  "type": "STRING"
                },
                {
                  "name": "aws.lambda.resource_mapping.id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "aws.queue.name",
                  "type": "STRING"
                },
                {
                  "name": "aws.queue.url",
                  "type": "STRING"
                },
                {
                  "name": "aws.request_id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "aws.secretsmanager.secret.arn",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "aws.sns.topic.arn",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "aws.step_functions.activity.arn",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "aws.step_functions.state_machine.arn",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "aws.stream.name",
                  "type": "STRING"
                },
                {
                  "name": "aws.table.name",
                  "type": "STRING"
                },
                {
                  "name": "db.operation",
                  "type": "STRING"
                },
                {
                  "name": "db.system",
                  "type": "STRING"
                },
                {
                  "name": "gen_ai.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "gen_ai.request.max_tokens",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "gen_ai.request.model",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "gen_ai.request.stop_sequences",
                  "semconv": true,
                  "type": "STRING_ARRAY"
                },
                {
                  "name": "gen_ai.request.temperature",
                  "semconv": true,
                  "type": "DOUBLE"
                },
                {
                  "name": "gen_ai.request.top_p",
                  "semconv": true,
                  "type": "DOUBLE"
                },
                {
                  "name": "gen_ai.response.finish_reasons",
                  "semconv": true,
                  "type": "STRING_ARRAY"
                },
                {
                  "name": "gen_ai.system",
                  "type": "STRING"
                },
                {
                  "name": "gen_ai.usage.input_tokens",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "gen_ai.usage.output_tokens",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "messaging.destination.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.service",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.system",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            },
            {
              "attributes": [
                {
                  "name": "aws.agent",
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "messaging.batch.message_count",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "messaging.destination.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.message.id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.operation",
                  "type": "STRING"
                },
                {
                  "name": "messaging.system",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.service",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.system",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CONSUMER"
            },
            {
              "attributes": [
                {
                  "name": "aws.agent",
                  "type": "STRING"
                },
                {
                  "name": "aws.queue.url",
                  "type": "STRING"
                },
                {
                  "name": "aws.request_id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "messaging.destination.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.message.id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.operation",
                  "type": "STRING"
                },
                {
                  "name": "messaging.system",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.service",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.system",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "PRODUCER"
            }
          ],
          "when": "default"
        },
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "Duration of database client operations.",
              "name": "db.client.operation.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "aws.agent",
                  "type": "STRING"
                },
                {
                  "name": "aws.bucket.name",
                  "type": "STRING"
                },
                {
                  "name": "aws.dynamodb.global_secondary_indexes",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "aws.dynamodb.limit",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "aws.dynamodb.provisioned_throughput.read_capacity_units",
                  "type": "STRING"
                },
                {
                  "name": "aws.dynamodb.provisioned_throughput.write_capacity_units",
                  "type": "STRING"
                },
                {
                  "name": "aws.dynamodb.select",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "aws.lambda.function.arn",
                  "type": "STRING"
                },
                {
                  "name": "aws.lambda.function.name",
                  "type": "STRING"
                },
                {
                  "name": "aws.lambda.resource_mapping.id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "aws.queue.name",
                  "type": "STRING"
                },
                {
                  "name": "aws.queue.url",
                  "type": "STRING"
                },
                {
                  "name": "aws.request_id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "aws.secretsmanager.secret.arn",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "aws.sns.topic.arn",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "aws.step_functions.activity.arn",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "aws.step_functions.state_machine.arn",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "aws.stream.name",
                  "type": "STRING"
                },
                {
                  "name": "aws.table.name",
                  "type": "STRING"
                },
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "messaging.destination.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.service",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.system",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            },
            {
              "attributes": [
                {
                  "name": "aws.agent",
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "messaging.batch.message_count",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "messaging.destination.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.message.id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.operation",
                  "type": "STRING"
                },
                {
                  "name": "messaging.system",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.service",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.system",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CONSUMER"
            },
            {
              "attributes": [
                {
                  "name": "aws.agent",
                  "type": "STRING"
                },
                {
                  "name": "aws.queue.url",
                  "type": "STRING"
                },
                {
                  "name": "aws.request_id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "messaging.destination.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.message.id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.operation",
                  "type": "STRING"
                },
                {
                  "name": "messaging.system",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.service",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.system",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "PRODUCER"
            }
          ],
          "when": "otel.semconv-stability.opt-in=database"
        }
      ]
    },
    {
      "description": "This instrumentation enables context propagation for the Azure Core library, it does not emit any telemetry on its own.",
      "name": "azure-core-1.14",
      "scope": {
        "name": "io.opentelemetry.azure-core-1.14"
      },
      "semconv": [],
      "source_path": "instrumentation/azure-core/azure-core-1.14",
      "target_versions": {
        "javaagent": [
          "com.azure:azure-core:[1.14.0,1.19.0)"
        ]
      }
    },
    {
      "description": "This instrumentation enables context propagation for the Azure Core library, it does not emit any telemetry on its own.",
      "name": "azure-core-1.19",
      "scope": {
        "name": "io.opentelemetry.azure-core-1.19"
      },
      "semconv": [],
      "source_path": "instrumentation/azure-core/azure-core-1.19",
      "target_versions": {
        "javaagent": [
          "com.azure:azure-core:[1.19.0,1.36.0)"
        ]
      }
    },
    {
      "description": "This instrumentation enables context propagation for the Azure Core library, it does not emit any telemetry on its own.",
      "name": "azure-core-1.36",
      "scope": {
        "name": "io.opentelemetry.azure-core-1.36"
      },
      "semconv": [],
      "source_path": "instrumentation/azure-core/azure-core-1.36",
      "target_versions": {
        "javaagent": [
          "com.azure:azure-core:[1.36.0,)"
        ]
      }
    },
    {
      "description": "The c3p0 instrumentation provides connection pool metrics for c3p0 data sources.",
      "name": "c3p0-0.9",
      "scope": {
        "name": "io.opentelemetry.c3p0-0.9"
      },
      "semconv": [
        "Database Client"
      ],
      "source_path": "instrumentation/c3p0-0.9",
      "target_versions": {
        "javaagent": [
          "com.mchange:c3p0:(,)"
        ],
        "library": [
          "com.mchange:c3p0:0.9.2"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                }
              ],
              "description": "The number of pending requests for an open connection, cumulative for the entire pool.",
              "name": "db.client.connections.pending_requests",
              "type": "LONG_SUM",
              "unit": "requests"
            },
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                },
                {
                  "name": "state",
                  "type": "STRING"
                }
              ],
              "description": "The number of connections that are currently in state described by the state attribute.",
              "name": "db.client.connections.usage",
              "type": "LONG_SUM",
              "unit": "connections"
            }
          ],
          "when": "default"
        },
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.client.connection.state",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The number of connections that are currently in state described by the state attribute.",
              "name": "db.client.connection.count",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "connection"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The number of current pending requests for an open connection.",
              "name": "db.client.connection.pending_requests",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "request"
            }
          ],
          "when": "otel.semconv-stability.opt-in=database"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enable the capture of experimental `camel.uri`, `camel.kafka.partitionKey`, `camel.kafka.key` and `camel.kafka.offset` span attributes.\n",
          "name": "otel.instrumentation.camel.experimental-span-attributes",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables tracing for Apache Camel 2.x applications by generating spans for each route execution. For Camel versions 3.5 and newer, users should instead use the native 'camel-opentelemetry' component provided directly by the Camel project.\n",
      "name": "camel-2.20",
      "scope": {
        "name": "io.opentelemetry.camel-2.20"
      },
      "semconv": [],
      "source_path": "instrumentation/camel-2.20",
      "target_versions": {
        "javaagent": [
          "org.apache.camel:camel-core:[2.19,3)"
        ]
      }
    },
    {
      "configurations": [
        {
          "default": true,
          "description": "Enables statement sanitization for database queries.",
          "name": "otel.instrumentation.common.db-statement-sanitizer.enabled",
          "type": "boolean"
        }
      ],
      "description": "Instruments the Cassandra database client, providing database client spans and metrics for Cassandra queries.\n",
      "name": "cassandra-3.0",
      "scope": {
        "name": "io.opentelemetry.cassandra-3.0"
      },
      "semconv": [
        "Database Client",
        "Network"
      ],
      "source_path": "instrumentation/cassandra/cassandra-3.0",
      "target_versions": {
        "javaagent": [
          "com.datastax.cassandra:cassandra-driver-core:[3.0,4.0)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.cassandra.table",
                  "type": "STRING"
                },
                {
                  "name": "db.name",
                  "type": "STRING"
                },
                {
                  "name": "db.operation",
                  "type": "STRING"
                },
                {
                  "name": "db.statement",
                  "type": "STRING"
                },
                {
                  "name": "db.system",
                  "type": "STRING"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        },
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.collection.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.namespace",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.query.text",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "otel.semconv-stability.opt-in=database"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": true,
          "description": "Enables statement sanitization for database queries.",
          "name": "otel.instrumentation.common.db-statement-sanitizer.enabled",
          "type": "boolean"
        }
      ],
      "description": "Instruments the Cassandra database client, providing database client spans and metrics for Cassandra queries.\n",
      "name": "cassandra-4.0",
      "scope": {
        "name": "io.opentelemetry.cassandra-4.0"
      },
      "semconv": [
        "Cassandra",
        "Database Client",
        "Network"
      ],
      "source_path": "instrumentation/cassandra/cassandra-4.0",
      "target_versions": {
        "javaagent": [
          "com.datastax.oss:java-driver-core:[4.0,4.4)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.cassandra.consistency_level",
                  "type": "STRING"
                },
                {
                  "name": "db.cassandra.coordinator.dc",
                  "type": "STRING"
                },
                {
                  "name": "db.cassandra.coordinator.id",
                  "type": "STRING"
                },
                {
                  "name": "db.cassandra.idempotence",
                  "type": "BOOLEAN"
                },
                {
                  "name": "db.cassandra.page_size",
                  "type": "LONG"
                },
                {
                  "name": "db.cassandra.speculative_execution_count",
                  "type": "LONG"
                },
                {
                  "name": "db.cassandra.table",
                  "type": "STRING"
                },
                {
                  "name": "db.name",
                  "type": "STRING"
                },
                {
                  "name": "db.operation",
                  "type": "STRING"
                },
                {
                  "name": "db.statement",
                  "type": "STRING"
                },
                {
                  "name": "db.system",
                  "type": "STRING"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        },
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "cassandra.consistency.level",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "cassandra.coordinator.dc",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "cassandra.coordinator.id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "cassandra.page.size",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "cassandra.query.idempotent",
                  "semconv": true,
                  "type": "BOOLEAN"
                },
                {
                  "name": "cassandra.speculative_execution.count",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "db.collection.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.namespace",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.query.text",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "otel.semconv-stability.opt-in=database"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": true,
          "description": "Enables statement sanitization for database queries.",
          "name": "otel.instrumentation.common.db-statement-sanitizer.enabled",
          "type": "boolean"
        }
      ],
      "description": "Instruments the Cassandra database client, providing database client spans and metrics for Cassandra queries.\n",
      "name": "cassandra-4.4",
      "scope": {
        "name": "io.opentelemetry.cassandra-4.4"
      },
      "semconv": [
        "Cassandra",
        "Database Client",
        "Network"
      ],
      "source_path": "instrumentation/cassandra/cassandra-4.4",
      "target_versions": {
        "javaagent": [
          "com.datastax.oss:java-driver-core:[4.4,]"
        ],
        "library": [
          "com.datastax.oss:java-driver-core:4.4.0"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.cassandra.consistency_level",
                  "type": "STRING"
                },
                {
                  "name": "db.cassandra.coordinator.dc",
                  "type": "STRING"
                },
                {
                  "name": "db.cassandra.coordinator.id",
                  "type": "STRING"
                },
                {
                  "name": "db.cassandra.idempotence",
                  "type": "BOOLEAN"
                },
                {
                  "name": "db.cassandra.page_size",
                  "type": "LONG"
                },
                {
                  "name": "db.cassandra.speculative_execution_count",
                  "type": "LONG"
                },
                {
                  "name": "db.cassandra.table",
                  "type": "STRING"
                },
                {
                  "name": "db.name",
                  "type": "STRING"
                },
                {
                  "name": "db.operation",
                  "type": "STRING"
                },
                {
                  "name": "db.statement",
                  "type": "STRING"
                },
                {
                  "name": "db.system",
                  "type": "STRING"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        },
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "cassandra.consistency.level",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "cassandra.coordinator.dc",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "cassandra.coordinator.id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "cassandra.page.size",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "cassandra.query.idempotent",
                  "semconv": true,
                  "type": "BOOLEAN"
                },
                {
                  "name": "cassandra.speculative_execution.count",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "db.collection.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.namespace",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.query.text",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "otel.semconv-stability.opt-in=database"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": true,
          "description": "Enables statement sanitization for database queries.",
          "name": "otel.instrumentation.common.db-statement-sanitizer.enabled",
          "type": "boolean"
        }
      ],
      "description": "Instruments the V1 ClickHouseClient, providing database client spans and metrics.",
      "name": "clickhouse-client-0.5",
      "scope": {
        "name": "io.opentelemetry.clickhouse-client-0.5"
      },
      "semconv": [
        "Database Client"
      ],
      "source_path": "instrumentation/clickhouse-client-0.5",
      "target_versions": {
        "javaagent": [
          "com.clickhouse.client:clickhouse-client:[0.5.0,)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.name",
                  "type": "STRING"
                },
                {
                  "name": "db.operation",
                  "type": "STRING"
                },
                {
                  "name": "db.statement",
                  "type": "STRING"
                },
                {
                  "name": "db.system",
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        },
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "db.namespace",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of database client operations.",
              "name": "db.client.operation.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.namespace",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.query.text",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.response.status_code",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "otel.semconv-stability.opt-in=database"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enables experimental span attributes `couchbase.operation_id` and `couchbase.local.address`",
          "name": "otel.instrumentation.couchbase.experimental-span-attributes",
          "type": "boolean"
        }
      ],
      "name": "couchbase-2.0",
      "scope": {
        "name": "io.opentelemetry.couchbase-2.0"
      },
      "semconv": [],
      "source_path": "instrumentation/couchbase/couchbase-2.0",
      "target_versions": {
        "javaagent": [
          "com.couchbase.client:java-client:[2,3)"
        ]
      }
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enables experimental span attributes couchbase.operation_id and couchbase.local.address",
          "name": "otel.instrumentation.couchbase.experimental-span-attributes",
          "type": "boolean"
        }
      ],
      "name": "couchbase-2.6",
      "scope": {
        "name": "io.opentelemetry.couchbase-2.6"
      },
      "semconv": [],
      "source_path": "instrumentation/couchbase/couchbase-2.6",
      "target_versions": {
        "javaagent": [
          "com.couchbase.client:java-client:[2.6.0,3)"
        ]
      }
    },
    {
      "description": "Couchbase instrumentation is owned by the Couchbase project. This instrumentation automatically configures the instrumentation provided by the Couchbase library.\n",
      "name": "couchbase-3.1",
      "scope": {
        "name": "io.opentelemetry.couchbase-3.1"
      },
      "semconv": [],
      "source_path": "instrumentation/couchbase/couchbase-3.1",
      "target_versions": {
        "javaagent": [
          "com.couchbase.client:java-client:[3.1,3.1.6)"
        ]
      }
    },
    {
      "description": "Couchbase instrumentation is owned by the Couchbase project. This instrumentation automatically configures the instrumentation provided by the Couchbase library.\n",
      "name": "couchbase-3.1.6",
      "scope": {
        "name": "io.opentelemetry.couchbase-3.1.6"
      },
      "semconv": [],
      "source_path": "instrumentation/couchbase/couchbase-3.1.6",
      "target_versions": {
        "javaagent": [
          "com.couchbase.client:java-client:[3.1.6,3.2.0)"
        ]
      }
    },
    {
      "description": "Couchbase instrumentation is owned by the Couchbase project. This instrumentation automatically configures the instrumentation provided by the Couchbase library.\n",
      "name": "couchbase-3.2",
      "scope": {
        "name": "io.opentelemetry.couchbase-3.2"
      },
      "semconv": [],
      "source_path": "instrumentation/couchbase/couchbase-3.2",
      "target_versions": {
        "javaagent": [
          "com.couchbase.client:java-client:[3.2.0,)"
        ]
      }
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enables the dropwizard metrics instrumentation.",
          "name": "otel.instrumentation.dropwizard-metrics.enabled",
          "type": "boolean"
        }
      ],
      "description": "The dropwizard-metrics instrumentation for the dropwizard/codahale metrics library produces OpenTelemetry compliant versions of the metrics generated by the Dropwizard MetricRegistry.\nThe Dropwizard metrics API does not have a concept of metric labels/tags/attributes, thus the data produced by this integration might be of very low quality, depending on how the API is used in the instrumented application.\n",
      "disabled_by_default": true,
      "name": "dropwizard-metrics-4.0",
      "scope": {
        "name": "io.opentelemetry.dropwizard-metrics-4.0"
      },
      "semconv": [],
      "source_path": "instrumentation/dropwizard/dropwizard-metrics-4.0",
      "target_versions": {
        "javaagent": [
          "io.dropwizard.metrics:metrics-core:[4.0.0,)"
        ]
      }
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enables the creation of experimental controller (INTERNAL) spans.",
          "name": "otel.instrumentation.common.experimental.controller-telemetry.enabled",
          "type": "boolean"
        },
        {
          "default": false,
          "description": "Enables the creation of experimental view (INTERNAL) spans.",
          "name": "otel.instrumentation.common.experimental.view-telemetry.enabled",
          "type": "boolean"
        }
      ],
      "name": "dropwizard-views-0.7",
      "scope": {
        "name": "io.opentelemetry.dropwizard-views-0.7"
      },
      "semconv": [],
      "source_path": "instrumentation/dropwizard/dropwizard-views-0.7",
      "target_versions": {
        "javaagent": [
          "io.dropwizard:dropwizard-views:(,3.0.0)"
        ]
      }
    },
    {
      "description": "This instrumentation enables client spans for Elasticsearch API client requests for version 7 of the client. Versions 8.10 and later have native support for OpenTelemetry.",
      "name": "elasticsearch-api-client-7.16",
      "scope": {
        "name": "io.opentelemetry.elasticsearch-api-client-7.16"
      },
      "semconv": [],
      "source_path": "instrumentation/elasticsearch/elasticsearch-api-client-7.16",
      "target_versions": {
        "javaagent": [
          "co.elastic.clients:elasticsearch-java:[7.16,7.17.20)",
          "co.elastic.clients:elasticsearch-java:[8.0.0,8.10)"
        ]
      }
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enable the capture of search query bodies. It is important to note that Elasticsearch queries\nmay contain personal or sensitive information.\n",
          "name": "otel.instrumentation.elasticsearch.capture-search-query",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables tracing for Elasticsearch REST clients.",
      "name": "elasticsearch-rest-5.0",
      "scope": {
        "name": "io.opentelemetry.elasticsearch-rest-5.0"
      },
      "semconv": [
        "Database Client"
      ],
      "source_path": "instrumentation/elasticsearch/elasticsearch-rest-5.0",
      "target_versions": {
        "javaagent": [
          "org.elasticsearch.client:elasticsearch-rest-client:[5.0,6.4)",
          "org.elasticsearch.client:rest:[5.0,6.4)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.system",
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enable the capture of search query bodies. It is important to note that Elasticsearch queries may contain personal or sensitive information.\n",
          "name": "otel.instrumentation.elasticsearch.capture-search-query",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables tracing for Elasticsearch REST clients.",
      "name": "elasticsearch-rest-6.4",
      "scope": {
        "name": "io.opentelemetry.elasticsearch-rest-6.4"
      },
      "semconv": [
        "Database Client"
      ],
      "source_path": "instrumentation/elasticsearch/elasticsearch-rest-6.4",
      "target_versions": {
        "javaagent": [
          "org.elasticsearch.client:elasticsearch-rest-client:[6.4,7.0)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.system",
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enable the capture of search query bodies. It is important to note that Elasticsearch queries may contain personal or sensitive information.\n",
          "name": "otel.instrumentation.elasticsearch.capture-search-query",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables tracing for Elasticsearch REST clients.",
      "name": "elasticsearch-rest-7.0",
      "scope": {
        "name": "io.opentelemetry.elasticsearch-rest-7.0"
      },
      "semconv": [
        "Database Client"
      ],
      "source_path": "instrumentation/elasticsearch/elasticsearch-rest-7.0",
      "target_versions": {
        "javaagent": [
          "org.elasticsearch.client:elasticsearch-rest-client:[7.0,)"
        ],
        "library": [
          "org.elasticsearch.client:elasticsearch-rest-client:7.0.0"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.system",
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enable the capture of experimental span attributes.",
          "name": "otel.instrumentation.elasticsearch.experimental-span-attributes",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables client spans for Elasticsearch transport client requests. Each call produces a span named after the Elasticsearch action, enriched with transport-specific attributes.\n",
      "name": "elasticsearch-transport-5.0",
      "scope": {
        "name": "io.opentelemetry.elasticsearch-transport-5.0"
      },
      "semconv": [
        "Database Client"
      ],
      "source_path": "instrumentation/elasticsearch/elasticsearch-transport-5.0",
      "target_versions": {
        "javaagent": [
          "org.elasticsearch.client:transport:[5.0.0,5.3.0)",
          "org.elasticsearch:elasticsearch:[5.0.0,5.3.0)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.operation",
                  "type": "STRING"
                },
                {
                  "name": "db.system",
                  "type": "STRING"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        },
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.operation",
                  "type": "STRING"
                },
                {
                  "name": "db.system",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.action",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.id",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.request",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.request.indices",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.request.write.type",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.response.status",
                  "type": "LONG"
                },
                {
                  "name": "elasticsearch.shard.replication.failed",
                  "type": "LONG"
                },
                {
                  "name": "elasticsearch.shard.replication.successful",
                  "type": "LONG"
                },
                {
                  "name": "elasticsearch.shard.replication.total",
                  "type": "LONG"
                },
                {
                  "name": "elasticsearch.type",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.version",
                  "type": "LONG"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "otel.instrumentation.elasticsearch.experimental-span-attributes=true"
        },
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "otel.semconv-stability.opt-in=database"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enable the capture of experimental span attributes.",
          "name": "otel.instrumentation.elasticsearch.experimental-span-attributes",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables client spans for Elasticsearch transport client requests. Each call produces a span named after the Elasticsearch action, enriched with transport-specific attributes.\n",
      "name": "elasticsearch-transport-5.3",
      "scope": {
        "name": "io.opentelemetry.elasticsearch-transport-5.3"
      },
      "semconv": [
        "Database Client"
      ],
      "source_path": "instrumentation/elasticsearch/elasticsearch-transport-5.3",
      "target_versions": {
        "javaagent": [
          "org.elasticsearch.client:transport:[5.3.0,6.0.0)",
          "org.elasticsearch:elasticsearch:[5.3.0,6.0.0)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.operation",
                  "type": "STRING"
                },
                {
                  "name": "db.system",
                  "type": "STRING"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        },
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.operation",
                  "type": "STRING"
                },
                {
                  "name": "db.system",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.action",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.id",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.request",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.request.indices",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.request.search.types",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.request.write.type",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.request.write.version",
                  "type": "LONG"
                },
                {
                  "name": "elasticsearch.response.status",
                  "type": "LONG"
                },
                {
                  "name": "elasticsearch.shard.broadcast.failed",
                  "type": "LONG"
                },
                {
                  "name": "elasticsearch.shard.broadcast.successful",
                  "type": "LONG"
                },
                {
                  "name": "elasticsearch.shard.broadcast.total",
                  "type": "LONG"
                },
                {
                  "name": "elasticsearch.shard.replication.failed",
                  "type": "LONG"
                },
                {
                  "name": "elasticsearch.shard.replication.successful",
                  "type": "LONG"
                },
                {
                  "name": "elasticsearch.shard.replication.total",
                  "type": "LONG"
                },
                {
                  "name": "elasticsearch.type",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.version",
                  "type": "LONG"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "otel.instrumentation.elasticsearch.experimental-span-attributes=true"
        },
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "otel.semconv-stability.opt-in=database"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enable the capture of experimental span attributes.",
          "name": "otel.instrumentation.elasticsearch.experimental-span-attributes",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables client spans for Elasticsearch transport client requests. Each call produces a span named after the Elasticsearch action, enriched with transport-specific attributes.\n",
      "name": "elasticsearch-transport-6.0",
      "scope": {
        "name": "io.opentelemetry.elasticsearch-transport-6.0"
      },
      "semconv": [
        "Database Client",
        "Network"
      ],
      "source_path": "instrumentation/elasticsearch/elasticsearch-transport-6.0",
      "target_versions": {
        "javaagent": [
          "org.elasticsearch.client:transport:[6.0.0,)",
          "org.elasticsearch:elasticsearch:[6.0.0,8.0.0)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.operation",
                  "type": "STRING"
                },
                {
                  "name": "db.system",
                  "type": "STRING"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.type",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        },
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.operation",
                  "type": "STRING"
                },
                {
                  "name": "db.system",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.action",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.id",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.request",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.request.indices",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.request.write.type",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.request.write.version",
                  "type": "LONG"
                },
                {
                  "name": "elasticsearch.response.status",
                  "type": "LONG"
                },
                {
                  "name": "elasticsearch.shard.replication.failed",
                  "type": "LONG"
                },
                {
                  "name": "elasticsearch.shard.replication.successful",
                  "type": "LONG"
                },
                {
                  "name": "elasticsearch.shard.replication.total",
                  "type": "LONG"
                },
                {
                  "name": "elasticsearch.type",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.version",
                  "type": "LONG"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.type",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "otel.instrumentation.elasticsearch.experimental-span-attributes=true"
        },
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.type",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "otel.semconv-stability.opt-in=database"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": "",
          "description": "List of Executor subclasses to be instrumented.",
          "name": "otel.instrumentation.executors.include",
          "type": "list"
        },
        {
          "default": false,
          "description": "Whether to instrument all classes that implement the Executor interface.",
          "name": "otel.instrumentation.executors.include-all",
          "type": "boolean"
        }
      ],
      "description": "The executor instrumentation ensures that context is automatically propagated when using common Java executors (e.g., ThreadPoolExecutor, ScheduledThreadPoolExecutor, ForkJoinPool). When a task is submitted, the current context is captured and bound to the task. Then, when the task eventually runs, even if it\u2019s on a different thread, the instrumentation reactivates that context, enabling consistent correlation across concurrent and asynchronous workflows.\n",
      "name": "executors",
      "scope": {
        "name": "io.opentelemetry.executors"
      },
      "semconv": [],
      "source_path": "instrumentation/executors",
      "target_versions": {
        "javaagent": [
          "Java 8+"
        ]
      }
    },
    {
      "description": "This instrumentation for Finagle HTTP clients and servers ensures that telemetry is correctly generated by the underlying Netty instrumentation. It augments existing telemetry by bridging the gap between Finagle's abstractions and Netty's pipeline, primarily for context propagation.\n",
      "name": "finagle-http-23.11",
      "scope": {
        "name": "io.opentelemetry.finagle-http-23.11"
      },
      "semconv": [],
      "source_path": "instrumentation/finagle-http-23.11",
      "target_versions": {
        "javaagent": [
          "com.twitter:finagle-http_2.12:[23.11.0,]",
          "com.twitter:finagle-http_2.13:[23.11.0,]"
        ]
      }
    },
    {
      "description": "This instrumentation for the Finatra web framework augments the telemetry generated by the underlying Netty instrumentation. It provides more specific, high-level context, such as route information, to the spans generated by Netty.",
      "name": "finatra-2.9",
      "scope": {
        "name": "io.opentelemetry.finatra-2.9"
      },
      "semconv": [
        "Code"
      ],
      "source_path": "instrumentation/finatra-2.9",
      "target_versions": {
        "javaagent": [
          "com.twitter:finatra-http_2.11:[2.9.0,]",
          "com.twitter:finatra-http_2.12:[2.9.0,]"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "code.function",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "code.namespace",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "INTERNAL"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "name": "geode-1.4",
      "scope": {
        "name": "io.opentelemetry.geode-1.4"
      },
      "semconv": [],
      "source_path": "instrumentation/geode-1.4",
      "target_versions": {
        "javaagent": [
          "org.apache.geode:geode-core:[1.4.0,)"
        ]
      }
    },
    {
      "name": "google-http-client-1.19",
      "scope": {
        "name": "io.opentelemetry.google-http-client-1.19"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/google-http-client-1.19",
      "target_versions": {
        "javaagent": [
          "com.google.http-client:google-http-client:[1.19.0,)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "name": "grails-3.0",
      "scope": {
        "name": "io.opentelemetry.grails-3.0"
      },
      "semconv": [],
      "source_path": "instrumentation/grails-3.0",
      "target_versions": {
        "javaagent": [
          "org.grails:grails-web-url-mappings:[3.0,)"
        ]
      }
    },
    {
      "name": "graphql-java-12.0",
      "scope": {
        "name": "io.opentelemetry.graphql-java-12.0"
      },
      "semconv": [],
      "source_path": "instrumentation/graphql-java/graphql-java-12.0",
      "target_versions": {
        "javaagent": [
          "com.graphql-java:graphql-java:[12,20)"
        ],
        "library": [
          "com.graphql-java:graphql-java:[12.0,19.+)"
        ]
      }
    },
    {
      "minimum_java_version": 11,
      "name": "graphql-java-20.0",
      "scope": {
        "name": "io.opentelemetry.graphql-java-20.0"
      },
      "semconv": [],
      "source_path": "instrumentation/graphql-java/graphql-java-20.0",
      "target_versions": {
        "javaagent": [
          "com.graphql-java:graphql-java:[20,)"
        ],
        "library": [
          "com.graphql-java:graphql-java:20.0"
        ]
      }
    },
    {
      "name": "grizzly-2.3",
      "scope": {
        "name": "io.opentelemetry.grizzly-2.3"
      },
      "semconv": [],
      "source_path": "instrumentation/grizzly-2.3",
      "target_versions": {
        "javaagent": [
          "org.glassfish.grizzly:grizzly-http:[2.3,)"
        ]
      }
    },
    {
      "name": "grpc-1.6",
      "scope": {
        "name": "io.opentelemetry.grpc-1.6"
      },
      "semconv": [],
      "source_path": "instrumentation/grpc-1.6",
      "target_versions": {
        "javaagent": [
          "io.grpc:grpc-core:[1.6.0,)"
        ],
        "library": [
          "io.grpc:grpc-core:1.6.0"
        ]
      }
    },
    {
      "name": "guava-10.0",
      "scope": {
        "name": "io.opentelemetry.guava-10.0"
      },
      "semconv": [],
      "source_path": "instrumentation/guava-10.0",
      "target_versions": {
        "javaagent": [
          "com.google.guava:guava:[10.0,]"
        ],
        "library": [
          "com.google.guava:guava:10.0"
        ]
      }
    },
    {
      "name": "gwt-2.0",
      "scope": {
        "name": "io.opentelemetry.gwt-2.0"
      },
      "semconv": [],
      "source_path": "instrumentation/gwt-2.0",
      "target_versions": {
        "javaagent": [
          "com.google.gwt:gwt-servlet:[2.0.0,)",
          "org.gwtproject:gwt-servlet:[2.10.0,)"
        ]
      }
    },
    {
      "name": "hibernate-3.3",
      "scope": {
        "name": "io.opentelemetry.hibernate-3.3"
      },
      "semconv": [],
      "source_path": "instrumentation/hibernate/hibernate-3.3",
      "target_versions": {
        "javaagent": [
          "org.hibernate:hibernate-core:[3.3.0.GA,4.0.0.Final)"
        ]
      }
    },
    {
      "name": "hibernate-4.0",
      "scope": {
        "name": "io.opentelemetry.hibernate-4.0"
      },
      "semconv": [],
      "source_path": "instrumentation/hibernate/hibernate-4.0",
      "target_versions": {
        "javaagent": [
          "org.hibernate:hibernate-core:[4.0.0.Final,6)"
        ]
      }
    },
    {
      "minimum_java_version": 11,
      "name": "hibernate-6.0",
      "scope": {
        "name": "io.opentelemetry.hibernate-6.0"
      },
      "semconv": [],
      "source_path": "instrumentation/hibernate/hibernate-6.0",
      "target_versions": {
        "javaagent": [
          "org.hibernate:hibernate-core:[6.0.0.Final,)"
        ]
      }
    },
    {
      "name": "hibernate-procedure-call-4.3",
      "scope": {
        "name": "io.opentelemetry.hibernate-procedure-call-4.3"
      },
      "semconv": [],
      "source_path": "instrumentation/hibernate/hibernate-procedure-call-4.3",
      "target_versions": {
        "javaagent": [
          "org.hibernate:hibernate-core:[4.3.0.Final,)"
        ]
      }
    },
    {
      "name": "hibernate-reactive-1.0",
      "scope": {
        "name": "io.opentelemetry.hibernate-reactive-1.0"
      },
      "semconv": [],
      "source_path": "instrumentation/hibernate/hibernate-reactive-1.0",
      "target_versions": {
        "javaagent": [
          "org.hibernate.reactive:hibernate-reactive-core:(,)"
        ]
      }
    },
    {
      "name": "hikaricp-3.0",
      "scope": {
        "name": "io.opentelemetry.hikaricp-3.0"
      },
      "semconv": [
        "Database Client"
      ],
      "source_path": "instrumentation/hikaricp-3.0",
      "target_versions": {
        "javaagent": [
          "com.zaxxer:HikariCP:[3.0.0,)"
        ],
        "library": [
          "com.zaxxer:HikariCP:3.0.0"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                }
              ],
              "description": "The time it took to create a new connection.",
              "name": "db.client.connections.create_time",
              "type": "HISTOGRAM",
              "unit": "ms"
            },
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                }
              ],
              "description": "The minimum number of idle open connections allowed.",
              "name": "db.client.connections.idle.min",
              "type": "LONG_SUM",
              "unit": "connections"
            },
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                }
              ],
              "description": "The maximum number of open connections allowed.",
              "name": "db.client.connections.max",
              "type": "LONG_SUM",
              "unit": "connections"
            },
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                }
              ],
              "description": "The number of pending requests for an open connection, cumulative for the entire pool.",
              "name": "db.client.connections.pending_requests",
              "type": "LONG_SUM",
              "unit": "requests"
            },
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                }
              ],
              "description": "The number of connection timeouts that have occurred trying to obtain a connection from the pool.",
              "name": "db.client.connections.timeouts",
              "type": "LONG_SUM",
              "unit": "timeouts"
            },
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                },
                {
                  "name": "state",
                  "type": "STRING"
                }
              ],
              "description": "The number of connections that are currently in state described by the state attribute.",
              "name": "db.client.connections.usage",
              "type": "LONG_SUM",
              "unit": "connections"
            },
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                }
              ],
              "description": "The time between borrowing a connection and returning it to the pool.",
              "name": "db.client.connections.use_time",
              "type": "HISTOGRAM",
              "unit": "ms"
            },
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                }
              ],
              "description": "The time it took to obtain an open connection from the pool.",
              "name": "db.client.connections.wait_time",
              "type": "HISTOGRAM",
              "unit": "ms"
            }
          ],
          "when": "default"
        },
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.client.connection.state",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The number of connections that are currently in state described by the state attribute.",
              "name": "db.client.connection.count",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "connection"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The time it took to create a new connection.",
              "name": "db.client.connection.create_time",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The minimum number of idle open connections allowed.",
              "name": "db.client.connection.idle.min",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "connection"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The maximum number of open connections allowed.",
              "name": "db.client.connection.max",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "connection"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The number of current pending requests for an open connection.",
              "name": "db.client.connection.pending_requests",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "request"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The number of connection timeouts that have occurred trying to obtain a connection from the pool.",
              "name": "db.client.connection.timeouts",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "timeout"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The time between borrowing a connection and returning it to the pool.",
              "name": "db.client.connection.use_time",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The time it took to obtain an open connection from the pool.",
              "name": "db.client.connection.wait_time",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "when": "otel.semconv-stability.opt-in=database"
        }
      ]
    },
    {
      "name": "http-url-connection",
      "scope": {
        "name": "io.opentelemetry.http-url-connection"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/http-url-connection",
      "target_versions": {
        "javaagent": [
          "Java 8+"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "name": "hystrix-1.4",
      "scope": {
        "name": "io.opentelemetry.hystrix-1.4"
      },
      "semconv": [],
      "source_path": "instrumentation/hystrix-1.4",
      "target_versions": {
        "javaagent": [
          "com.netflix.hystrix:hystrix-core:[1.4.0,)"
        ]
      }
    },
    {
      "name": "influxdb-2.4",
      "scope": {
        "name": "io.opentelemetry.influxdb-2.4"
      },
      "semconv": [],
      "source_path": "instrumentation/influxdb-2.4",
      "target_versions": {
        "javaagent": [
          "org.influxdb:influxdb-java:[2.4,)"
        ]
      }
    },
    {
      "minimum_java_version": 11,
      "name": "java-http-client",
      "scope": {
        "name": "io.opentelemetry.java-http-client"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/java-http-client",
      "target_versions": {
        "javaagent": [
          "Java 11+"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "name": "java-http-server",
      "scope": {
        "name": "io.opentelemetry.java-http-server"
      },
      "semconv": [],
      "source_path": "instrumentation/java-http-server",
      "target_versions": {
        "javaagent": [
          "Java 8+"
        ]
      }
    },
    {
      "minimum_java_version": 11,
      "name": "javalin-5.0",
      "scope": {
        "name": "io.opentelemetry.javalin-5.0"
      },
      "semconv": [],
      "source_path": "instrumentation/javalin-5.0",
      "target_versions": {
        "javaagent": [
          "io.javalin:javalin:[5.0.0,)"
        ]
      }
    },
    {
      "disabled_by_default": true,
      "name": "jaxrs-1.0",
      "scope": {
        "name": "io.opentelemetry.jaxrs-1.0"
      },
      "semconv": [],
      "source_path": "instrumentation/jaxrs/jaxrs-1.0",
      "target_versions": {
        "javaagent": [
          "javax.ws.rs:jsr311-api:[0.5,)"
        ]
      }
    },
    {
      "name": "jaxrs-2.0-annotations",
      "scope": {
        "name": "io.opentelemetry.jaxrs-2.0-annotations"
      },
      "semconv": [],
      "source_path": "instrumentation/jaxrs/jaxrs-2.0/jaxrs-2.0-annotations",
      "target_versions": {
        "javaagent": [
          "javax.ws.rs:javax.ws.rs-api:[,]"
        ]
      }
    },
    {
      "name": "jaxrs-2.0-cxf-3.2",
      "scope": {
        "name": "io.opentelemetry.jaxrs-2.0-cxf-3.2"
      },
      "semconv": [],
      "source_path": "instrumentation/jaxrs/jaxrs-2.0/jaxrs-2.0-cxf-3.2",
      "target_versions": {
        "javaagent": [
          "org.apache.cxf:cxf-rt-frontend-jaxrs:[3.2,4)",
          "org.apache.tomee:openejb-cxf-rs:(8,)"
        ]
      }
    },
    {
      "name": "jaxrs-2.0-jersey-2.0",
      "scope": {
        "name": "io.opentelemetry.jaxrs-2.0-jersey-2.0"
      },
      "semconv": [],
      "source_path": "instrumentation/jaxrs/jaxrs-2.0/jaxrs-2.0-jersey-2.0",
      "target_versions": {
        "javaagent": [
          "org.glassfish.jersey.containers:jersey-container-servlet:[2.0,3.0.0)",
          "org.glassfish.jersey.core:jersey-server:[2.0,3.0.0)"
        ]
      }
    },
    {
      "name": "jaxrs-2.0-resteasy-3.0",
      "scope": {
        "name": "io.opentelemetry.jaxrs-2.0-resteasy-3.0"
      },
      "semconv": [],
      "source_path": "instrumentation/jaxrs/jaxrs-2.0/jaxrs-2.0-resteasy-3.0",
      "target_versions": {
        "javaagent": [
          "org.jboss.resteasy:resteasy-jaxrs:[3.0.0.Final,3.1.0.Final)",
          "org.jboss.resteasy:resteasy-jaxrs:[3.5.0.Final,4)"
        ]
      }
    },
    {
      "name": "jaxrs-2.0-resteasy-3.1",
      "scope": {
        "name": "io.opentelemetry.jaxrs-2.0-resteasy-3.1"
      },
      "semconv": [],
      "source_path": "instrumentation/jaxrs/jaxrs-2.0/jaxrs-2.0-resteasy-3.1",
      "target_versions": {
        "javaagent": [
          "org.jboss.resteasy:resteasy-core:[4.0.0.Final,6)",
          "org.jboss.resteasy:resteasy-jaxrs:[3.1.0.Final,3.5.0.Final)"
        ]
      }
    },
    {
      "name": "jaxrs-3.0-annotations",
      "scope": {
        "name": "io.opentelemetry.jaxrs-3.0-annotations"
      },
      "semconv": [],
      "source_path": "instrumentation/jaxrs/jaxrs-3.0/jaxrs-3.0-annotations",
      "target_versions": {
        "javaagent": [
          "jakarta.ws.rs:jakarta.ws.rs-api:[3.0.0,)"
        ]
      }
    },
    {
      "minimum_java_version": 11,
      "name": "jaxrs-3.0-jersey-3.0",
      "scope": {
        "name": "io.opentelemetry.jaxrs-3.0-jersey-3.0"
      },
      "semconv": [],
      "source_path": "instrumentation/jaxrs/jaxrs-3.0/jaxrs-3.0-jersey-3.0",
      "target_versions": {
        "javaagent": [
          "org.glassfish.jersey.core:jersey-server:[3.0.0,)"
        ]
      }
    },
    {
      "minimum_java_version": 11,
      "name": "jaxrs-3.0-resteasy-6.0",
      "scope": {
        "name": "io.opentelemetry.jaxrs-3.0-resteasy-6.0"
      },
      "semconv": [],
      "source_path": "instrumentation/jaxrs/jaxrs-3.0/jaxrs-3.0-resteasy-6.0",
      "target_versions": {
        "javaagent": [
          "org.jboss.resteasy:resteasy-core:[6.0.0.Final,)"
        ]
      }
    },
    {
      "name": "jaxws-2.0",
      "scope": {
        "name": "io.opentelemetry.jaxws-2.0"
      },
      "semconv": [],
      "source_path": "instrumentation/jaxws/jaxws-2.0",
      "target_versions": {
        "javaagent": [
          "javax.xml.ws:jaxws-api:[2.0,]"
        ]
      }
    },
    {
      "name": "jaxws-2.0-axis2-1.6",
      "scope": {
        "name": "io.opentelemetry.jaxws-2.0-axis2-1.6"
      },
      "semconv": [],
      "source_path": "instrumentation/jaxws/jaxws-2.0-axis2-1.6",
      "target_versions": {
        "javaagent": [
          "org.apache.axis2:axis2-jaxws:[1.6.0,)"
        ]
      }
    },
    {
      "name": "jaxws-cxf-3.0",
      "scope": {
        "name": "io.opentelemetry.jaxws-cxf-3.0"
      },
      "semconv": [],
      "source_path": "instrumentation/jaxws/jaxws-cxf-3.0",
      "target_versions": {
        "javaagent": [
          "org.apache.cxf:cxf-rt-frontend-jaxws:[3.0.0,)"
        ]
      }
    },
    {
      "disabled_by_default": true,
      "name": "jaxws-jws-api-1.1",
      "scope": {
        "name": "io.opentelemetry.jaxws-jws-api-1.1"
      },
      "semconv": [],
      "source_path": "instrumentation/jaxws/jaxws-jws-api-1.1",
      "target_versions": {
        "javaagent": [
          "javax.jws:javax.jws-api:[1.1,]"
        ]
      }
    },
    {
      "name": "jaxws-metro-2.2",
      "scope": {
        "name": "io.opentelemetry.jaxws-metro-2.2"
      },
      "semconv": [],
      "source_path": "instrumentation/jaxws/jaxws-metro-2.2",
      "target_versions": {
        "javaagent": [
          "com.sun.xml.ws:jaxws-rt:[2.2.0.1,)"
        ]
      }
    },
    {
      "name": "jboss-logmanager-appender-1.1",
      "scope": {
        "name": "io.opentelemetry.jboss-logmanager-appender-1.1"
      },
      "semconv": [],
      "source_path": "instrumentation/jboss-logmanager/jboss-logmanager-appender-1.1",
      "target_versions": {
        "javaagent": [
          "org.jboss.logmanager:jboss-logmanager:[1.1.0.GA,)"
        ]
      }
    },
    {
      "name": "jboss-logmanager-mdc-1.1",
      "scope": {
        "name": "io.opentelemetry.jboss-logmanager-mdc-1.1"
      },
      "semconv": [],
      "source_path": "instrumentation/jboss-logmanager/jboss-logmanager-mdc-1.1",
      "target_versions": {
        "javaagent": [
          "org.jboss.logmanager:jboss-logmanager:[1.1.0.GA,)"
        ]
      }
    },
    {
      "configurations": [
        {
          "default": true,
          "description": "Enables statement sanitization for database queries.",
          "name": "otel.instrumentation.common.db-statement-sanitizer.enabled",
          "type": "boolean"
        },
        {
          "default": "",
          "description": "Used to specify a mapping from host names or IP addresses to peer services.",
          "name": "otel.instrumentation.common.peer-service-mapping",
          "type": "map"
        },
        {
          "default": false,
          "description": "Enables instrumentation of JDBC datasource connections.",
          "name": "otel.instrumentation.jdbc-datasource.enabled",
          "type": "boolean"
        },
        {
          "default": false,
          "description": "Sets whether the query parameters should be captured as span attributes named <code>db.query.parameter.&lt;key&gt;</code>. Enabling this option disables the statement sanitization.<p>WARNING: captured query parameters may contain sensitive information such as passwords, personally identifiable information or protected health info.\n",
          "name": "otel.instrumentation.jdbc.experimental.capture-query-parameters",
          "type": "boolean"
        },
        {
          "default": false,
          "description": "Enables experimental instrumentation to create spans for COMMIT and ROLLBACK operations.",
          "name": "otel.instrumentation.jdbc.experimental.transaction.enabled",
          "type": "boolean"
        },
        {
          "default": true,
          "description": "Enables statement sanitization for database queries. Takes precedent to otel.instrumentation.common.db-statement-sanitizer.enabled.",
          "name": "otel.instrumentation.jdbc.statement-sanitizer.enabled",
          "type": "boolean"
        }
      ],
      "description": "The JDBC instrumentation provides database client spans and metrics. Each call produces a span named after the SQL verb, enriched with standard DB client attributes (system, database, operation, sanitized statement, peer address) and error details if an exception occurs.\nThere is also a \"jdbc-datasource\" instrumentation that creates spans for datasource connections, but is disabled by default due to the volume of telemetry produced.\n",
      "name": "jdbc",
      "scope": {
        "name": "io.opentelemetry.jdbc"
      },
      "semconv": [],
      "source_path": "instrumentation/jdbc",
      "target_versions": {
        "javaagent": [
          "Java 8+"
        ]
      }
    },
    {
      "name": "jedis-1.4",
      "scope": {
        "name": "io.opentelemetry.jedis-1.4"
      },
      "semconv": [],
      "source_path": "instrumentation/jedis/jedis-1.4",
      "target_versions": {
        "javaagent": [
          "redis.clients:jedis:[1.4.0,3.0.0)"
        ]
      }
    },
    {
      "name": "jedis-3.0",
      "scope": {
        "name": "io.opentelemetry.jedis-3.0"
      },
      "semconv": [],
      "source_path": "instrumentation/jedis/jedis-3.0",
      "target_versions": {
        "javaagent": [
          "redis.clients:jedis:[3.0.0,4)"
        ]
      }
    },
    {
      "name": "jedis-4.0",
      "scope": {
        "name": "io.opentelemetry.jedis-4.0"
      },
      "semconv": [],
      "source_path": "instrumentation/jedis/jedis-4.0",
      "target_versions": {
        "javaagent": [
          "redis.clients:jedis:[4.0.0-beta1,)"
        ]
      }
    },
    {
      "minimum_java_version": 11,
      "name": "jetty-11.0",
      "scope": {
        "name": "io.opentelemetry.jetty-11.0"
      },
      "semconv": [],
      "source_path": "instrumentation/jetty/jetty-11.0",
      "target_versions": {
        "javaagent": [
          "org.eclipse.jetty:jetty-server:[11, 12)"
        ]
      }
    },
    {
      "minimum_java_version": 17,
      "name": "jetty-12.0",
      "scope": {
        "name": "io.opentelemetry.jetty-12.0"
      },
      "semconv": [],
      "source_path": "instrumentation/jetty/jetty-12.0",
      "target_versions": {
        "javaagent": [
          "org.eclipse.jetty:jetty-server:[12,)"
        ]
      }
    },
    {
      "name": "jetty-8.0",
      "scope": {
        "name": "io.opentelemetry.jetty-8.0"
      },
      "semconv": [],
      "source_path": "instrumentation/jetty/jetty-8.0",
      "target_versions": {
        "javaagent": [
          "org.eclipse.jetty:jetty-server:[8.0.0.v20110901,11)"
        ]
      }
    },
    {
      "minimum_java_version": 17,
      "name": "jetty-httpclient-12.0",
      "scope": {
        "name": "io.opentelemetry.jetty-httpclient-12.0"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/jetty-httpclient/jetty-httpclient-12.0",
      "target_versions": {
        "javaagent": [
          "org.eclipse.jetty:jetty-client:[12,)"
        ],
        "library": [
          "org.eclipse.jetty:jetty-client:12.0.0"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "name": "jetty-httpclient-9.2",
      "scope": {
        "name": "io.opentelemetry.jetty-httpclient-9.2"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/jetty-httpclient/jetty-httpclient-9.2",
      "target_versions": {
        "javaagent": [
          "org.eclipse.jetty:jetty-client:[9.2,10)"
        ],
        "library": [
          "org.eclipse.jetty:jetty-client:[9.2.0.v20140526,9.+)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "name": "jms-1.1",
      "scope": {
        "name": "io.opentelemetry.jms-1.1"
      },
      "semconv": [],
      "source_path": "instrumentation/jms/jms-1.1",
      "target_versions": {
        "javaagent": [
          "jakarta.jms:jakarta.jms-api:(,3)",
          "javax.jms:javax.jms-api:(,)",
          "javax.jms:jms-api:(,)"
        ]
      }
    },
    {
      "minimum_java_version": 11,
      "name": "jms-3.0",
      "scope": {
        "name": "io.opentelemetry.jms-3.0"
      },
      "semconv": [],
      "source_path": "instrumentation/jms/jms-3.0",
      "target_versions": {
        "javaagent": [
          "jakarta.jms:jakarta.jms-api:[3.0.0,)"
        ]
      }
    },
    {
      "name": "jodd-http-4.2",
      "scope": {
        "name": "io.opentelemetry.jodd-http-4.2"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/jodd-http-4.2",
      "target_versions": {
        "javaagent": [
          "org.jodd:jodd-http:[4.2.0,)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "name": "jsf-mojarra-1.2",
      "scope": {
        "name": "io.opentelemetry.jsf-mojarra-1.2"
      },
      "semconv": [],
      "source_path": "instrumentation/jsf/jsf-mojarra-1.2",
      "target_versions": {
        "javaagent": [
          "com.sun.faces:jsf-impl:[2.0,2.1)",
          "com.sun.faces:jsf-impl:[2.1,2.2)",
          "javax.faces:jsf-impl:[1.2,2)",
          "org.glassfish:jakarta.faces:[2.3.9,3)",
          "org.glassfish:javax.faces:[2.0.7,3)"
        ]
      }
    },
    {
      "minimum_java_version": 11,
      "name": "jsf-mojarra-3.0",
      "scope": {
        "name": "io.opentelemetry.jsf-mojarra-3.0"
      },
      "semconv": [],
      "source_path": "instrumentation/jsf/jsf-mojarra-3.0",
      "target_versions": {
        "javaagent": [
          "org.glassfish:jakarta.faces:[3,)"
        ]
      }
    },
    {
      "name": "jsf-myfaces-1.2",
      "scope": {
        "name": "io.opentelemetry.jsf-myfaces-1.2"
      },
      "semconv": [],
      "source_path": "instrumentation/jsf/jsf-myfaces-1.2",
      "target_versions": {
        "javaagent": [
          "org.apache.myfaces.core:myfaces-impl:[1.2,3)"
        ]
      }
    },
    {
      "minimum_java_version": 11,
      "name": "jsf-myfaces-3.0",
      "scope": {
        "name": "io.opentelemetry.jsf-myfaces-3.0"
      },
      "semconv": [],
      "source_path": "instrumentation/jsf/jsf-myfaces-3.0",
      "target_versions": {
        "javaagent": [
          "org.apache.myfaces.core:myfaces-impl:[3,)"
        ]
      }
    },
    {
      "name": "jsp-2.3",
      "scope": {
        "name": "io.opentelemetry.jsp-2.3"
      },
      "semconv": [],
      "source_path": "instrumentation/jsp-2.3",
      "target_versions": {
        "javaagent": [
          "org.apache.tomcat:tomcat-jasper:[7.0.19,10)"
        ]
      }
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enables the capture of the experimental consumer attribute \"kafka.record.queue_time_ms\"",
          "name": "otel.instrumentation.kafka.experimental-span-attributes",
          "type": "boolean"
        },
        {
          "default": true,
          "description": "Enable context propagation for kafka message producers.",
          "name": "otel.instrumentation.kafka.producer-propagation.enabled",
          "type": "boolean"
        },
        {
          "default": "",
          "description": "A comma-separated list of header names to capture as span attributes.",
          "name": "otel.instrumentation.messaging.experimental.capture-headers",
          "type": "list"
        },
        {
          "default": false,
          "description": "Enables experimental receive telemetry, which will cause consumers to start a new trace, with only a span link connecting it to the producer trace.\n",
          "name": "otel.instrumentation.messaging.experimental.receive-telemetry.enabled",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables messaging spans and metrics for Apache Kafka 0.11 clients. It automatically traces message production and consumption, propagates context, and emits metrics for production and consumption.\n",
      "name": "kafka-clients-0.11",
      "scope": {
        "name": "io.opentelemetry.kafka-clients-0.11"
      },
      "semconv": [],
      "source_path": "instrumentation/kafka/kafka-clients/kafka-clients-0.11",
      "target_versions": {
        "javaagent": [
          "org.apache.kafka:kafka-clients:[0.11.0.0,)"
        ]
      }
    },
    {
      "description": "This instrumentation provides a library integration that enables messaging spans and metrics for Apache Kafka 2.6+ clients.\n",
      "name": "kafka-clients-2.6",
      "scope": {
        "name": "io.opentelemetry.kafka-clients-2.6"
      },
      "semconv": [],
      "source_path": "instrumentation/kafka/kafka-clients/kafka-clients-2.6",
      "target_versions": {
        "library": [
          "org.apache.kafka:kafka-clients:2.6.0"
        ]
      }
    },
    {
      "name": "kafka-streams-0.11",
      "scope": {
        "name": "io.opentelemetry.kafka-streams-0.11"
      },
      "semconv": [],
      "source_path": "instrumentation/kafka/kafka-streams-0.11",
      "target_versions": {
        "javaagent": [
          "org.apache.kafka:kafka-streams:[0.11.0.0,)"
        ]
      }
    },
    {
      "name": "kotlinx-coroutines-1.0",
      "scope": {
        "name": "io.opentelemetry.kotlinx-coroutines-1.0"
      },
      "semconv": [],
      "source_path": "instrumentation/kotlinx-coroutines/kotlinx-coroutines-1.0",
      "target_versions": {
        "javaagent": [
          "org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm:[1.3.9,)",
          "org.jetbrains.kotlinx:kotlinx-coroutines-core:[1.0.0,1.3.8)"
        ]
      }
    },
    {
      "name": "kotlinx-coroutines-flow-1.3",
      "scope": {
        "name": "io.opentelemetry.kotlinx-coroutines-flow-1.3"
      },
      "semconv": [],
      "source_path": "instrumentation/kotlinx-coroutines/kotlinx-coroutines-flow-1.3",
      "target_versions": {
        "javaagent": [
          "org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm:[1.3.9,)",
          "org.jetbrains.kotlinx:kotlinx-coroutines-core:[1.3.0,1.3.8)"
        ]
      }
    },
    {
      "name": "ktor-1.0",
      "scope": {
        "name": "io.opentelemetry.ktor-1.0"
      },
      "semconv": [],
      "source_path": "instrumentation/ktor/ktor-1.0",
      "target_versions": {
        "library": [
          "io.ktor:ktor-server-core:[1.0.0,1.+)"
        ]
      }
    },
    {
      "name": "ktor-2.0",
      "scope": {
        "name": "io.opentelemetry.ktor-2.0"
      },
      "semconv": [],
      "source_path": "instrumentation/ktor/ktor-2.0",
      "target_versions": {
        "javaagent": [
          "io.ktor:ktor-client-core:[2.0.0,3.0.0)",
          "io.ktor:ktor-server-core:[2.0.0,3.0.0)"
        ],
        "library": [
          "io.ktor:ktor-client-core:[2.0.0,2.+)",
          "io.ktor:ktor-server-core:[2.0.0,2.+)"
        ]
      }
    },
    {
      "name": "ktor-3.0",
      "scope": {
        "name": "io.opentelemetry.ktor-3.0"
      },
      "semconv": [],
      "source_path": "instrumentation/ktor/ktor-3.0",
      "target_versions": {
        "javaagent": [
          "io.ktor:ktor-client-core:[3.0.0,)",
          "io.ktor:ktor-server-core:[3.0.0,)"
        ],
        "library": [
          "io.ktor:ktor-client-core:3.0.0",
          "io.ktor:ktor-server-core:3.0.0"
        ]
      }
    },
    {
      "name": "kubernetes-client-7.0",
      "scope": {
        "name": "io.opentelemetry.kubernetes-client-7.0"
      },
      "semconv": [],
      "source_path": "instrumentation/kubernetes-client-7.0",
      "target_versions": {
        "javaagent": [
          "io.kubernetes:client-java-api:[7.0.0,)"
        ]
      }
    },
    {
      "name": "lettuce-4.0",
      "scope": {
        "name": "io.opentelemetry.lettuce-4.0"
      },
      "semconv": [],
      "source_path": "instrumentation/lettuce/lettuce-4.0",
      "target_versions": {
        "javaagent": [
          "biz.paluch.redis:lettuce:[4.0.Final,)"
        ]
      }
    },
    {
      "name": "lettuce-5.0",
      "scope": {
        "name": "io.opentelemetry.lettuce-5.0"
      },
      "semconv": [],
      "source_path": "instrumentation/lettuce/lettuce-5.0",
      "target_versions": {
        "javaagent": [
          "io.lettuce:lettuce-core:[5.0.0.RELEASE,5.1.0.RELEASE)"
        ]
      }
    },
    {
      "name": "lettuce-5.1",
      "scope": {
        "name": "io.opentelemetry.lettuce-5.1"
      },
      "semconv": [],
      "source_path": "instrumentation/lettuce/lettuce-5.1",
      "target_versions": {
        "javaagent": [
          "io.lettuce:lettuce-core:[5.1.0.RELEASE,)"
        ],
        "library": [
          "io.lettuce:lettuce-core:5.1.0.RELEASE"
        ]
      }
    },
    {
      "name": "liberty-20.0",
      "scope": {
        "name": "io.opentelemetry.liberty-20.0"
      },
      "semconv": [],
      "source_path": "instrumentation/liberty/liberty-20.0"
    },
    {
      "name": "liberty-dispatcher-20.0",
      "scope": {
        "name": "io.opentelemetry.liberty-dispatcher-20.0"
      },
      "semconv": [],
      "source_path": "instrumentation/liberty/liberty-dispatcher-20.0"
    },
    {
      "name": "log4j-appender-1.2",
      "scope": {
        "name": "io.opentelemetry.log4j-appender-1.2"
      },
      "semconv": [],
      "source_path": "instrumentation/log4j/log4j-appender-1.2",
      "target_versions": {
        "javaagent": [
          "log4j:log4j:[1.2,)"
        ]
      }
    },
    {
      "name": "log4j-appender-2.17",
      "scope": {
        "name": "io.opentelemetry.log4j-appender-2.17"
      },
      "semconv": [],
      "source_path": "instrumentation/log4j/log4j-appender-2.17",
      "target_versions": {
        "javaagent": [
          "org.apache.logging.log4j:log4j-core:[2.0,)"
        ],
        "library": [
          "org.apache.logging.log4j:log4j-core:2.17.0"
        ]
      }
    },
    {
      "name": "log4j-context-data-2.17",
      "scope": {
        "name": "io.opentelemetry.log4j-context-data-2.17"
      },
      "semconv": [],
      "source_path": "instrumentation/log4j/log4j-context-data/log4j-context-data-2.17",
      "target_versions": {
        "javaagent": [
          "org.apache.logging.log4j:log4j-core:[2.17.0,)"
        ]
      }
    },
    {
      "name": "log4j-context-data-2.7",
      "scope": {
        "name": "io.opentelemetry.log4j-context-data-2.7"
      },
      "semconv": [],
      "source_path": "instrumentation/log4j/log4j-context-data/log4j-context-data-2.7",
      "target_versions": {
        "javaagent": [
          "org.apache.logging.log4j:log4j-core:[2.7,2.17.0)"
        ]
      }
    },
    {
      "name": "log4j-mdc-1.2",
      "scope": {
        "name": "io.opentelemetry.log4j-mdc-1.2"
      },
      "semconv": [],
      "source_path": "instrumentation/log4j/log4j-mdc-1.2",
      "target_versions": {
        "javaagent": [
          "log4j:log4j:[1.2,)"
        ]
      }
    },
    {
      "name": "logback-appender-1.0",
      "scope": {
        "name": "io.opentelemetry.logback-appender-1.0"
      },
      "semconv": [],
      "source_path": "instrumentation/logback/logback-appender-1.0",
      "target_versions": {
        "javaagent": [
          "ch.qos.logback:logback-classic:[0.9.16,)"
        ],
        "library": [
          "ch.qos.logback:logback-classic:1.3.0",
          "net.logstash.logback:logstash-logback-encoder:3.0",
          "org.slf4j:slf4j-api:2.0.0"
        ]
      }
    },
    {
      "name": "logback-mdc-1.0",
      "scope": {
        "name": "io.opentelemetry.logback-mdc-1.0"
      },
      "semconv": [],
      "source_path": "instrumentation/logback/logback-mdc-1.0",
      "target_versions": {
        "javaagent": [
          "ch.qos.logback:logback-classic:[1.0.0,1.2.3]"
        ],
        "library": [
          "ch.qos.logback:logback-classic:1.0.0",
          "org.slf4j:slf4j-api:1.6.4"
        ]
      }
    },
    {
      "disabled_by_default": true,
      "name": "micrometer-1.5",
      "scope": {
        "name": "io.opentelemetry.micrometer-1.5"
      },
      "semconv": [],
      "source_path": "instrumentation/micrometer/micrometer-1.5",
      "target_versions": {
        "javaagent": [
          "io.micrometer:micrometer-core:[1.5.0,)"
        ],
        "library": [
          "io.micrometer:micrometer-core:1.5.0"
        ]
      }
    },
    {
      "name": "mongo-3.1",
      "scope": {
        "name": "io.opentelemetry.mongo-3.1"
      },
      "semconv": [],
      "source_path": "instrumentation/mongo/mongo-3.1",
      "target_versions": {
        "javaagent": [
          "org.mongodb:mongo-java-driver:[3.1,)"
        ],
        "library": [
          "org.mongodb:mongo-java-driver:3.1.0"
        ]
      }
    },
    {
      "name": "mongo-3.7",
      "scope": {
        "name": "io.opentelemetry.mongo-3.7"
      },
      "semconv": [],
      "source_path": "instrumentation/mongo/mongo-3.7",
      "target_versions": {
        "javaagent": [
          "org.mongodb:mongo-java-driver:[3.7, 4.0)",
          "org.mongodb:mongodb-driver-core:[3.7, 4.0)"
        ]
      }
    },
    {
      "name": "mongo-4.0",
      "scope": {
        "name": "io.opentelemetry.mongo-4.0"
      },
      "semconv": [],
      "source_path": "instrumentation/mongo/mongo-4.0",
      "target_versions": {
        "javaagent": [
          "org.mongodb:mongodb-driver-core:[4.0,)"
        ]
      }
    },
    {
      "name": "mongo-async-3.3",
      "scope": {
        "name": "io.opentelemetry.mongo-async-3.3"
      },
      "semconv": [],
      "source_path": "instrumentation/mongo/mongo-async-3.3",
      "target_versions": {
        "javaagent": [
          "org.mongodb:mongodb-driver-async:[3.3,)"
        ]
      }
    },
    {
      "disabled_by_default": true,
      "name": "mybatis-3.2",
      "scope": {
        "name": "io.opentelemetry.mybatis-3.2"
      },
      "semconv": [],
      "source_path": "instrumentation/mybatis-3.2",
      "target_versions": {
        "javaagent": [
          "org.mybatis:mybatis:[3.2.0,)"
        ]
      }
    },
    {
      "name": "netty-3.8",
      "scope": {
        "name": "io.opentelemetry.netty-3.8"
      },
      "semconv": [
        "Client",
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/netty/netty-3.8",
      "target_versions": {
        "javaagent": [
          "io.netty:netty:[3.8.0.Final,4)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            },
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.scheme",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "Duration of HTTP server requests.",
              "name": "http.server.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            },
            {
              "attributes": [
                {
                  "name": "client.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.path",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.query",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.scheme",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "user_agent.original",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "SERVER"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enable the creation of Connect and DNS spans",
          "name": "otel.instrumentation.netty.connection-telemetry.enabled",
          "type": "boolean"
        },
        {
          "default": false,
          "description": "Enable SSL telemetry",
          "name": "otel.instrumentation.netty.ssl-telemetry.enabled",
          "type": "boolean"
        }
      ],
      "name": "netty-4.0",
      "scope": {
        "name": "io.opentelemetry.netty-4.0"
      },
      "semconv": [
        "Client",
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/netty/netty-4.0",
      "target_versions": {
        "javaagent": [
          "io.netty:netty-all:[4.0.0.Final,4.1.0.Final)",
          "io.netty:netty-codec-http:[4.0.0.Final,4.1.0.Final)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            },
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.scheme",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "Duration of HTTP server requests.",
              "name": "http.server.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            },
            {
              "attributes": [
                {
                  "name": "client.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.path",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.query",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.scheme",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "user_agent.original",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "SERVER"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enable the creation of Connect and DNS spans",
          "name": "otel.instrumentation.netty.connection-telemetry.enabled",
          "type": "boolean"
        },
        {
          "default": false,
          "description": "Enable SSL telemetry",
          "name": "otel.instrumentation.netty.ssl-telemetry.enabled",
          "type": "boolean"
        }
      ],
      "name": "netty-4.1",
      "scope": {
        "name": "io.opentelemetry.netty-4.1"
      },
      "semconv": [
        "Client",
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/netty/netty-4.1",
      "target_versions": {
        "javaagent": [
          "io.netty:netty-all:[4.1.0.Final,5.0.0)",
          "io.netty:netty-codec-http:[4.1.0.Final,5.0.0)"
        ],
        "library": [
          "io.netty:netty-codec-http:4.1.0.Final"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            },
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.scheme",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "Duration of HTTP server requests.",
              "name": "http.server.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            },
            {
              "attributes": [
                {
                  "name": "client.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.path",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.query",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.scheme",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "user_agent.original",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "SERVER"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "name": "okhttp-2.2",
      "scope": {
        "name": "io.opentelemetry.okhttp-2.2"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/okhttp/okhttp-2.2",
      "target_versions": {
        "javaagent": [
          "com.squareup.okhttp:okhttp:[2.2,3)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "name": "okhttp-3.0",
      "scope": {
        "name": "io.opentelemetry.okhttp-3.0"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/okhttp/okhttp-3.0",
      "target_versions": {
        "javaagent": [
          "com.squareup.okhttp3:okhttp:[3.0,)"
        ],
        "library": [
          "com.squareup.okhttp3:okhttp:3.0.0"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.resend_count",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enables including the full content of user and assistant messages in emitted log events. Note that full content can have data privacy and size concerns, and care should be taken when enabling this.\n",
          "name": "otel.instrumentation.genai.capture-message-content",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables Gen AI client spans and metrics for OpenAI Java SDK 1.1+.",
      "name": "openai-java-1.1",
      "scope": {
        "name": "io.opentelemetry.openai-java-1.1"
      },
      "semconv": [
        "Gen Ai"
      ],
      "source_path": "instrumentation/openai/openai-java-1.1",
      "target_versions": {
        "javaagent": [
          "com.openai:openai-java:[1.1.0,3)"
        ],
        "library": [
          "com.openai:openai-java:[1.1.0,2.+)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "gen_ai.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "gen_ai.request.model",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "gen_ai.response.model",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "gen_ai.system",
                  "type": "STRING"
                }
              ],
              "description": "GenAI operation duration.",
              "name": "gen_ai.client.operation.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            },
            {
              "attributes": [
                {
                  "name": "gen_ai.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "gen_ai.request.model",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "gen_ai.response.model",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "gen_ai.system",
                  "type": "STRING"
                },
                {
                  "name": "gen_ai.token.type",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "Measures number of input and output tokens used.",
              "name": "gen_ai.client.token.usage",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "token"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "gen_ai.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "gen_ai.request.frequency_penalty",
                  "semconv": true,
                  "type": "DOUBLE"
                },
                {
                  "name": "gen_ai.request.max_tokens",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "gen_ai.request.model",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "gen_ai.request.presence_penalty",
                  "semconv": true,
                  "type": "DOUBLE"
                },
                {
                  "name": "gen_ai.request.seed",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "gen_ai.request.stop_sequences",
                  "semconv": true,
                  "type": "STRING_ARRAY"
                },
                {
                  "name": "gen_ai.request.temperature",
                  "semconv": true,
                  "type": "DOUBLE"
                },
                {
                  "name": "gen_ai.request.top_p",
                  "semconv": true,
                  "type": "DOUBLE"
                },
                {
                  "name": "gen_ai.response.finish_reasons",
                  "semconv": true,
                  "type": "STRING_ARRAY"
                },
                {
                  "name": "gen_ai.response.id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "gen_ai.response.model",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "gen_ai.system",
                  "type": "STRING"
                },
                {
                  "name": "gen_ai.usage.input_tokens",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "gen_ai.usage.output_tokens",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "INTERNAL"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "minimum_java_version": 11,
      "name": "opensearch-rest-1.0",
      "scope": {
        "name": "io.opentelemetry.opensearch-rest-1.0"
      },
      "semconv": [],
      "source_path": "instrumentation/opensearch/opensearch-rest-1.0",
      "target_versions": {
        "javaagent": [
          "org.opensearch.client:opensearch-rest-client:[1.0,3.0)"
        ]
      }
    },
    {
      "minimum_java_version": 11,
      "name": "opensearch-rest-3.0",
      "scope": {
        "name": "io.opentelemetry.opensearch-rest-3.0"
      },
      "semconv": [],
      "source_path": "instrumentation/opensearch/opensearch-rest-3.0",
      "target_versions": {
        "javaagent": [
          "org.opensearch.client:opensearch-rest-client:[3.0,)"
        ]
      }
    },
    {
      "description": "The Oracle Universal Connection Pool (UCP) instrumentation generates connection pool metrics.",
      "name": "oracle-ucp-11.2",
      "scope": {
        "name": "io.opentelemetry.oracle-ucp-11.2"
      },
      "semconv": [
        "Database Client"
      ],
      "source_path": "instrumentation/oracle-ucp-11.2",
      "target_versions": {
        "javaagent": [
          "com.oracle.database.jdbc:ucp:[,)"
        ],
        "library": [
          "com.oracle.database.jdbc:ojdbc8:12.2.0.1",
          "com.oracle.database.jdbc:ucp:11.2.0.4"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                }
              ],
              "description": "The maximum number of open connections allowed.",
              "name": "db.client.connections.max",
              "type": "LONG_SUM",
              "unit": "connections"
            },
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                }
              ],
              "description": "The number of pending requests for an open connection, cumulative for the entire pool.",
              "name": "db.client.connections.pending_requests",
              "type": "LONG_SUM",
              "unit": "requests"
            },
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                },
                {
                  "name": "state",
                  "type": "STRING"
                }
              ],
              "description": "The number of connections that are currently in state described by the state attribute.",
              "name": "db.client.connections.usage",
              "type": "LONG_SUM",
              "unit": "connections"
            }
          ],
          "when": "default"
        },
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.client.connection.state",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The number of connections that are currently in state described by the state attribute.",
              "name": "db.client.connection.count",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "connection"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The maximum number of open connections allowed.",
              "name": "db.client.connection.max",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "connection"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The number of current pending requests for an open connection.",
              "name": "db.client.connection.pending_requests",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "request"
            }
          ],
          "when": "otel.semconv-stability.opt-in=database"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enable the OSHI process runtime metrics.",
          "name": "otel.instrumentation.oshi.experimental-metrics.enabled",
          "type": "boolean"
        }
      ],
      "description": "When the OSHI library is detected on the classpath, this instrumentation will use the system class loader to load classes from the oshi-core jar that are then used to generate system metrics.",
      "name": "oshi",
      "scope": {
        "name": "io.opentelemetry.oshi"
      },
      "semconv": [
        "System"
      ],
      "source_path": "instrumentation/oshi",
      "target_versions": {
        "javaagent": [
          "com.github.oshi:oshi-core:[5.3.1,)"
        ],
        "library": [
          "com.github.oshi:oshi-core:5.3.1"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "device",
                  "type": "STRING"
                },
                {
                  "name": "direction",
                  "type": "STRING"
                }
              ],
              "description": "System disk IO",
              "name": "system.disk.io",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "By"
            },
            {
              "attributes": [
                {
                  "name": "device",
                  "type": "STRING"
                },
                {
                  "name": "direction",
                  "type": "STRING"
                }
              ],
              "description": "System disk operations",
              "name": "system.disk.operations",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "operations"
            },
            {
              "attributes": [
                {
                  "name": "state",
                  "type": "STRING"
                }
              ],
              "description": "System memory usage",
              "name": "system.memory.usage",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "By"
            },
            {
              "attributes": [
                {
                  "name": "state",
                  "type": "STRING"
                }
              ],
              "description": "System memory utilization",
              "name": "system.memory.utilization",
              "semconv": true,
              "type": "DOUBLE_GAUGE",
              "unit": "1"
            },
            {
              "attributes": [
                {
                  "name": "device",
                  "type": "STRING"
                },
                {
                  "name": "direction",
                  "type": "STRING"
                }
              ],
              "description": "System network errors",
              "name": "system.network.errors",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "errors"
            },
            {
              "attributes": [
                {
                  "name": "device",
                  "type": "STRING"
                },
                {
                  "name": "direction",
                  "type": "STRING"
                }
              ],
              "description": "System network IO",
              "name": "system.network.io",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "By"
            },
            {
              "attributes": [
                {
                  "name": "device",
                  "type": "STRING"
                },
                {
                  "name": "direction",
                  "type": "STRING"
                }
              ],
              "description": "System network packets",
              "name": "system.network.packets",
              "type": "LONG_SUM",
              "unit": "packets"
            }
          ],
          "when": "default"
        },
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "type",
                  "type": "STRING"
                }
              ],
              "description": "Runtime Java CPU time",
              "name": "runtime.java.cpu_time",
              "type": "LONG_GAUGE",
              "unit": "ms"
            },
            {
              "attributes": [
                {
                  "name": "type",
                  "type": "STRING"
                }
              ],
              "description": "Runtime Java memory",
              "name": "runtime.java.memory",
              "type": "LONG_SUM",
              "unit": "By"
            },
            {
              "attributes": [
                {
                  "name": "device",
                  "type": "STRING"
                },
                {
                  "name": "direction",
                  "type": "STRING"
                }
              ],
              "description": "System disk IO",
              "name": "system.disk.io",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "By"
            },
            {
              "attributes": [
                {
                  "name": "device",
                  "type": "STRING"
                },
                {
                  "name": "direction",
                  "type": "STRING"
                }
              ],
              "description": "System disk operations",
              "name": "system.disk.operations",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "operations"
            },
            {
              "attributes": [
                {
                  "name": "state",
                  "type": "STRING"
                }
              ],
              "description": "System memory usage",
              "name": "system.memory.usage",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "By"
            },
            {
              "attributes": [
                {
                  "name": "state",
                  "type": "STRING"
                }
              ],
              "description": "System memory utilization",
              "name": "system.memory.utilization",
              "semconv": true,
              "type": "DOUBLE_GAUGE",
              "unit": "1"
            },
            {
              "attributes": [
                {
                  "name": "device",
                  "type": "STRING"
                },
                {
                  "name": "direction",
                  "type": "STRING"
                }
              ],
              "description": "System network errors",
              "name": "system.network.errors",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "errors"
            },
            {
              "attributes": [
                {
                  "name": "device",
                  "type": "STRING"
                },
                {
                  "name": "direction",
                  "type": "STRING"
                }
              ],
              "description": "System network IO",
              "name": "system.network.io",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "By"
            },
            {
              "attributes": [
                {
                  "name": "device",
                  "type": "STRING"
                },
                {
                  "name": "direction",
                  "type": "STRING"
                }
              ],
              "description": "System network packets",
              "name": "system.network.packets",
              "type": "LONG_SUM",
              "unit": "packets"
            }
          ],
          "when": "otel.instrumentation.oshi.experimental-metrics.enabled=true"
        }
      ]
    },
    {
      "name": "payara",
      "scope": {
        "name": "io.opentelemetry.payara"
      },
      "semconv": [],
      "source_path": "instrumentation/payara"
    },
    {
      "name": "pekko-actor-1.0",
      "scope": {
        "name": "io.opentelemetry.pekko-actor-1.0"
      },
      "semconv": [],
      "source_path": "instrumentation/pekko/pekko-actor-1.0",
      "target_versions": {
        "javaagent": [
          "org.apache.pekko:pekko-actor_2.12:[1.0,)",
          "org.apache.pekko:pekko-actor_2.13:[1.0,)",
          "org.apache.pekko:pekko-actor_3:[1.0,)"
        ]
      }
    },
    {
      "name": "pekko-http-1.0",
      "scope": {
        "name": "io.opentelemetry.pekko-http-1.0"
      },
      "semconv": [
        "Client",
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/pekko/pekko-http-1.0",
      "target_versions": {
        "javaagent": [
          "com.softwaremill.sttp.tapir:tapir-pekko-http-server_2.12:[1.7,)",
          "com.softwaremill.sttp.tapir:tapir-pekko-http-server_2.13:[1.7,)",
          "com.softwaremill.sttp.tapir:tapir-pekko-http-server_3:[1.7,)",
          "org.apache.pekko:pekko-http_2.12:[1.0,)",
          "org.apache.pekko:pekko-http_2.13:[1.0,)",
          "org.apache.pekko:pekko-http_3:[1.0,)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            },
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "http.route",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.scheme",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "Duration of HTTP server requests.",
              "name": "http.server.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            },
            {
              "attributes": [
                {
                  "name": "client.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "http.route",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.path",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.query",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.scheme",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "user_agent.original",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "SERVER"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "name": "play-mvc-2.4",
      "scope": {
        "name": "io.opentelemetry.play-mvc-2.4"
      },
      "semconv": [],
      "source_path": "instrumentation/play/play-mvc/play-mvc-2.4",
      "target_versions": {
        "javaagent": [
          "com.typesafe.play:play_2.11:[2.4.0,2.6)"
        ]
      }
    },
    {
      "name": "play-mvc-2.6",
      "scope": {
        "name": "io.opentelemetry.play-mvc-2.6"
      },
      "semconv": [],
      "source_path": "instrumentation/play/play-mvc/play-mvc-2.6",
      "target_versions": {
        "javaagent": [
          "com.typesafe.play:play_$scalaVersion:[2.6.0,)",
          "com.typesafe.play:play_2.12:[2.6.0,)",
          "com.typesafe.play:play_2.13:[2.6.0,)"
        ]
      }
    },
    {
      "name": "play-ws-1.0",
      "scope": {
        "name": "io.opentelemetry.play-ws-1.0"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/play/play-ws/play-ws-1.0",
      "target_versions": {
        "javaagent": [
          "com.typesafe.play:play-ahc-ws-standalone_2.11:[1.0.0,2.0.0)",
          "com.typesafe.play:play-ahc-ws-standalone_2.12:[1.0.0,2.0.0)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "name": "play-ws-2.0",
      "scope": {
        "name": "io.opentelemetry.play-ws-2.0"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/play/play-ws/play-ws-2.0",
      "target_versions": {
        "javaagent": [
          "com.typesafe.play:play-ahc-ws-standalone_2.11:[2.0.0,]",
          "com.typesafe.play:play-ahc-ws-standalone_2.12:[2.0.0,2.1.0)",
          "com.typesafe.play:play-ahc-ws-standalone_2.13:[2.0.6,2.1.0)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "name": "play-ws-2.1",
      "scope": {
        "name": "io.opentelemetry.play-ws-2.1"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/play/play-ws/play-ws-2.1",
      "target_versions": {
        "javaagent": [
          "com.typesafe.play:play-ahc-ws-standalone_2.12:[2.1.0,]",
          "com.typesafe.play:play-ahc-ws-standalone_2.13:[2.1.0,]"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "name": "powerjob-4.0",
      "scope": {
        "name": "io.opentelemetry.powerjob-4.0"
      },
      "semconv": [],
      "source_path": "instrumentation/powerjob-4.0",
      "target_versions": {
        "javaagent": [
          "tech.powerjob:powerjob-worker:[4.0.0,)"
        ]
      }
    },
    {
      "name": "pulsar-2.8",
      "scope": {
        "name": "io.opentelemetry.pulsar-2.8"
      },
      "semconv": [],
      "source_path": "instrumentation/pulsar/pulsar-2.8",
      "target_versions": {
        "javaagent": [
          "org.apache.pulsar:pulsar-client:[2.8.0,)"
        ]
      }
    },
    {
      "name": "quarkus-resteasy-reactive",
      "scope": {
        "name": "io.opentelemetry.quarkus-resteasy-reactive"
      },
      "semconv": [],
      "source_path": "instrumentation/quarkus-resteasy-reactive",
      "target_versions": {
        "javaagent": [
          "io.quarkus:quarkus-resteasy-reactive:(,3.9.0)"
        ]
      }
    },
    {
      "name": "quartz-2.0",
      "scope": {
        "name": "io.opentelemetry.quartz-2.0"
      },
      "semconv": [],
      "source_path": "instrumentation/quartz-2.0",
      "target_versions": {
        "javaagent": [
          "org.quartz-scheduler:quartz:[2.0.0,)"
        ],
        "library": [
          "org.quartz-scheduler:quartz:2.0.0"
        ]
      }
    },
    {
      "name": "r2dbc-1.0",
      "scope": {
        "name": "io.opentelemetry.r2dbc-1.0"
      },
      "semconv": [],
      "source_path": "instrumentation/r2dbc-1.0",
      "target_versions": {
        "javaagent": [
          "io.r2dbc:r2dbc-spi:[1.0.0.RELEASE,)"
        ],
        "library": [
          "io.r2dbc:r2dbc-spi:1.0.0.RELEASE"
        ]
      }
    },
    {
      "name": "rabbitmq-2.7",
      "scope": {
        "name": "io.opentelemetry.rabbitmq-2.7"
      },
      "semconv": [],
      "source_path": "instrumentation/rabbitmq-2.7",
      "target_versions": {
        "javaagent": [
          "com.rabbitmq:amqp-client:[2.7.0,)"
        ]
      }
    },
    {
      "name": "ratpack-1.4",
      "scope": {
        "name": "io.opentelemetry.ratpack-1.4"
      },
      "semconv": [],
      "source_path": "instrumentation/ratpack/ratpack-1.4",
      "target_versions": {
        "javaagent": [
          "io.ratpack:ratpack-core:[1.4.0,)"
        ]
      }
    },
    {
      "name": "ratpack-1.7",
      "scope": {
        "name": "io.opentelemetry.ratpack-1.7"
      },
      "semconv": [],
      "source_path": "instrumentation/ratpack/ratpack-1.7",
      "target_versions": {
        "javaagent": [
          "io.ratpack:ratpack-core:[1.7.0,)"
        ],
        "library": [
          "io.ratpack:ratpack-core:1.7.0"
        ]
      }
    },
    {
      "name": "reactor-3.1",
      "scope": {
        "name": "io.opentelemetry.reactor-3.1"
      },
      "semconv": [],
      "source_path": "instrumentation/reactor/reactor-3.1",
      "target_versions": {
        "javaagent": [
          "io.projectreactor:reactor-core:[3.1.0.RELEASE,)"
        ]
      }
    },
    {
      "name": "reactor-3.4",
      "scope": {
        "name": "io.opentelemetry.reactor-3.4"
      },
      "semconv": [],
      "source_path": "instrumentation/reactor/reactor-3.4",
      "target_versions": {
        "javaagent": [
          "io.projectreactor:reactor-core:[3.4.0,)"
        ]
      }
    },
    {
      "name": "reactor-kafka-1.0",
      "scope": {
        "name": "io.opentelemetry.reactor-kafka-1.0"
      },
      "semconv": [],
      "source_path": "instrumentation/reactor/reactor-kafka-1.0",
      "target_versions": {
        "javaagent": [
          "io.projectreactor.kafka:reactor-kafka:[1.0.0,)"
        ]
      }
    },
    {
      "name": "reactor-netty-0.9",
      "scope": {
        "name": "io.opentelemetry.reactor-netty-0.9"
      },
      "semconv": [],
      "source_path": "instrumentation/reactor/reactor-netty/reactor-netty-0.9",
      "target_versions": {
        "javaagent": [
          "io.projectreactor.netty:reactor-netty:[0.8.2.RELEASE,1.0.0)"
        ]
      }
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enable the creation of Connect and DNS spans.",
          "name": "otel.instrumentation.reactor-netty.connection-telemetry.enabled",
          "type": "boolean"
        }
      ],
      "name": "reactor-netty-1.0",
      "scope": {
        "name": "io.opentelemetry.reactor-netty-1.0"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/reactor/reactor-netty/reactor-netty-1.0",
      "target_versions": {
        "javaagent": [
          "io.projectreactor.netty:reactor-netty-http:[1.0.0,)",
          "io.projectreactor.netty:reactor-netty:[1.0.0,)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.resend_count",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "name": "rediscala-1.8",
      "scope": {
        "name": "io.opentelemetry.rediscala-1.8"
      },
      "semconv": [],
      "source_path": "instrumentation/rediscala-1.8",
      "target_versions": {
        "javaagent": [
          "com.github.Ma27:rediscala_2.11:[1.8.1,)",
          "com.github.Ma27:rediscala_2.12:[1.8.1,)",
          "com.github.Ma27:rediscala_2.13:[1.9.0,)",
          "com.github.etaty:rediscala_2.11:[1.5.0,)",
          "com.github.etaty:rediscala_2.12:[1.8.0,)",
          "com.github.etaty:rediscala_2.13:[1.9.0,)",
          "io.github.rediscala:rediscala_2.13:[1.10.0,)"
        ]
      }
    },
    {
      "name": "redisson-3.0",
      "scope": {
        "name": "io.opentelemetry.redisson-3.0"
      },
      "semconv": [],
      "source_path": "instrumentation/redisson/redisson-3.0",
      "target_versions": {
        "javaagent": [
          "org.redisson:redisson:[3.0.0,3.17.0)"
        ]
      }
    },
    {
      "name": "redisson-3.17",
      "scope": {
        "name": "io.opentelemetry.redisson-3.17"
      },
      "semconv": [],
      "source_path": "instrumentation/redisson/redisson-3.17",
      "target_versions": {
        "javaagent": [
          "org.redisson:redisson:[3.17.0,)"
        ]
      }
    },
    {
      "name": "resources",
      "scope": {
        "name": "io.opentelemetry.resources"
      },
      "semconv": [],
      "source_path": "instrumentation/resources"
    },
    {
      "name": "restlet-1.1",
      "scope": {
        "name": "io.opentelemetry.restlet-1.1"
      },
      "semconv": [],
      "source_path": "instrumentation/restlet/restlet-1.1",
      "target_versions": {
        "javaagent": [
          "org.restlet:org.restlet:[1.1.0, 1.2-M1)"
        ],
        "library": [
          "com.noelios.restlet:com.noelios.restlet:1.1.5",
          "org.restlet:org.restlet:[1.1.5,1.+)"
        ]
      }
    },
    {
      "name": "restlet-2.0",
      "scope": {
        "name": "io.opentelemetry.restlet-2.0"
      },
      "semconv": [],
      "source_path": "instrumentation/restlet/restlet-2.0",
      "target_versions": {
        "javaagent": [
          "org.restlet.jse:org.restlet:[2.0.0,)"
        ],
        "library": [
          "org.restlet.jse:org.restlet:2.0.2"
        ]
      }
    },
    {
      "name": "rmi",
      "scope": {
        "name": "io.opentelemetry.rmi"
      },
      "semconv": [],
      "source_path": "instrumentation/rmi",
      "target_versions": {
        "javaagent": [
          "Java 8+"
        ]
      }
    },
    {
      "name": "rocketmq-client-4.8",
      "scope": {
        "name": "io.opentelemetry.rocketmq-client-4.8"
      },
      "semconv": [],
      "source_path": "instrumentation/rocketmq/rocketmq-client/rocketmq-client-4.8",
      "target_versions": {
        "javaagent": [
          "org.apache.rocketmq:rocketmq-client:[4.0.0,)"
        ],
        "library": [
          "org.apache.rocketmq:rocketmq-client:4.8.0"
        ]
      }
    },
    {
      "name": "rocketmq-client-5.0",
      "scope": {
        "name": "io.opentelemetry.rocketmq-client-5.0"
      },
      "semconv": [],
      "source_path": "instrumentation/rocketmq/rocketmq-client/rocketmq-client-5.0",
      "target_versions": {
        "javaagent": [
          "org.apache.rocketmq:rocketmq-client-java:[5.0.0,)"
        ]
      }
    },
    {
      "minimum_java_version": 17,
      "name": "runtime-telemetry-java17",
      "scope": {
        "name": "io.opentelemetry.runtime-telemetry-java17"
      },
      "semconv": [],
      "source_path": "instrumentation/runtime-telemetry/runtime-telemetry-java17"
    },
    {
      "name": "runtime-telemetry-java8",
      "scope": {
        "name": "io.opentelemetry.runtime-telemetry-java8"
      },
      "semconv": [],
      "source_path": "instrumentation/runtime-telemetry/runtime-telemetry-java8"
    },
    {
      "name": "rxjava-1.0",
      "scope": {
        "name": "io.opentelemetry.rxjava-1.0"
      },
      "semconv": [],
      "source_path": "instrumentation/rxjava/rxjava-1.0",
      "target_versions": {
        "library": [
          "io.reactivex:rxjava:1.0.7"
        ]
      }
    },
    {
      "name": "rxjava-2.0",
      "scope": {
        "name": "io.opentelemetry.rxjava-2.0"
      },
      "semconv": [],
      "source_path": "instrumentation/rxjava/rxjava-2.0",
      "target_versions": {
        "javaagent": [
          "io.reactivex.rxjava2:rxjava:[2.0.6,)"
        ],
        "library": [
          "io.reactivex.rxjava2:rxjava:2.1.3"
        ]
      }
    },
    {
      "name": "rxjava-3.0",
      "scope": {
        "name": "io.opentelemetry.rxjava-3.0"
      },
      "semconv": [],
      "source_path": "instrumentation/rxjava/rxjava-3.0",
      "target_versions": {
        "javaagent": [
          "io.reactivex.rxjava3:rxjava:[3.0.0,3.1.0]"
        ],
        "library": [
          "io.reactivex.rxjava3:rxjava:[3.0.12,3.1.0)"
        ]
      }
    },
    {
      "name": "rxjava-3.1.1",
      "scope": {
        "name": "io.opentelemetry.rxjava-3.1.1"
      },
      "semconv": [],
      "source_path": "instrumentation/rxjava/rxjava-3.1.1",
      "target_versions": {
        "javaagent": [
          "io.reactivex.rxjava3:rxjava:[3.1.1,)"
        ],
        "library": [
          "io.reactivex.rxjava3:rxjava:3.1.1"
        ]
      }
    },
    {
      "name": "scala-fork-join-2.8",
      "scope": {
        "name": "io.opentelemetry.scala-fork-join-2.8"
      },
      "semconv": [],
      "source_path": "instrumentation/scala-fork-join-2.8",
      "target_versions": {
        "javaagent": [
          "org.scala-lang:scala-library:[2.8.0,2.12.0)"
        ]
      }
    },
    {
      "name": "servlet-2.2",
      "scope": {
        "name": "io.opentelemetry.servlet-2.2"
      },
      "semconv": [],
      "source_path": "instrumentation/servlet/servlet-2.2",
      "target_versions": {
        "javaagent": [
          "javax.servlet:servlet-api:[2.2, 3.0)"
        ]
      }
    },
    {
      "name": "servlet-3.0",
      "scope": {
        "name": "io.opentelemetry.servlet-3.0"
      },
      "semconv": [],
      "source_path": "instrumentation/servlet/servlet-3.0",
      "target_versions": {
        "javaagent": [
          "javax.servlet:javax.servlet-api:[3.0,)"
        ]
      }
    },
    {
      "name": "servlet-5.0",
      "scope": {
        "name": "io.opentelemetry.servlet-5.0"
      },
      "semconv": [],
      "source_path": "instrumentation/servlet/servlet-5.0",
      "target_versions": {
        "javaagent": [
          "jakarta.servlet:jakarta.servlet-api:[5.0.0,)"
        ]
      }
    },
    {
      "description": "This instrumentation does not emit telemetry on its own. Instead, it extracts the HTTP route and attaches it to SERVER spans and HTTP server metrics.\n",
      "name": "spark-2.3",
      "scope": {
        "name": "io.opentelemetry.spark-2.3"
      },
      "semconv": [],
      "source_path": "instrumentation/spark-2.3",
      "target_versions": {
        "javaagent": [
          "com.sparkjava:spark-core:[2.3,)"
        ]
      }
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Adds the experimental attribute `job.system` to spans.",
          "name": "otel.instrumentation.spring-batch.experimental-span-attributes",
          "type": "boolean"
        },
        {
          "default": false,
          "description": "When enabled, a new root span will be created for each chunk processing. Please note that this may lead to a high number of spans being created.",
          "name": "otel.instrumentation.spring-batch.experimental.chunk.new-trace",
          "type": "boolean"
        },
        {
          "default": false,
          "description": "When enabled, spans will be created for each item processed. Please note that this may lead to a high number of spans being created.",
          "name": "otel.instrumentation.spring-batch.item.enabled",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables INTERNAL spans for jobs run by the Spring Batch framework.",
      "disabled_by_default": true,
      "name": "spring-batch-3.0",
      "scope": {
        "name": "io.opentelemetry.spring-batch-3.0"
      },
      "semconv": [],
      "source_path": "instrumentation/spring/spring-batch-3.0",
      "target_versions": {
        "javaagent": [
          "org.springframework.batch:spring-batch-core:[3.0.0.RELEASE,5)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "job.system",
                  "type": "STRING"
                }
              ],
              "span_kind": "INTERNAL"
            }
          ],
          "when": "otel.instrumentation.spring-batch.experimental-span-attributes=true"
        }
      ]
    },
    {
      "description": "This instrumentation configures the OpenTelemetry Micrometer bridge to receive metrics from Spring Boot Actuator. It does not produce telemetry on its own.\n",
      "disabled_by_default": true,
      "name": "spring-boot-actuator-autoconfigure-2.0",
      "scope": {
        "name": "io.opentelemetry.spring-boot-actuator-autoconfigure-2.0"
      },
      "semconv": [],
      "source_path": "instrumentation/spring/spring-boot-actuator-autoconfigure-2.0",
      "target_versions": {
        "javaagent": [
          "org.springframework.boot:spring-boot-actuator-autoconfigure:[2.0.0.RELEASE,)"
        ]
      }
    },
    {
      "description": "This instrumentation automatically detects the `service.name` and `service.version` for Spring Boot applications and sets them as resource attributes.\nIt uses the following strategies (first successful wins):\n  - Check for the SPRING_APPLICATION_NAME environment variable\n  - Check for spring.application.name system property\n  - Check for application.properties file on the classpath\n  - Check for application.properties in the current working dir\n  - Check for application.yml on the classpath\n  - Check for application.yml in the current working dir\n  - Check for --spring.application.name program argument (not jvm arg) via ProcessHandle\n  - Check for --spring.application.name program argument via sun.java.command system property\n",
      "name": "spring-boot-resources",
      "scope": {
        "name": "io.opentelemetry.spring-boot-resources"
      },
      "semconv": [],
      "source_path": "instrumentation/spring/spring-boot-resources"
    },
    {
      "description": "This instrumentation enhances tracing for Spring Cloud AWS. It augments the existing AWS SDK instrumentation by providing higher-level tracing for SQS operations, capturing details specific to Spring Cloud AWS SQS usage and linking them to the underlying AWS SDK traces.\n",
      "minimum_java_version": 17,
      "name": "spring-cloud-aws-3.0",
      "scope": {
        "name": "io.opentelemetry.spring-cloud-aws-3.0"
      },
      "semconv": [],
      "source_path": "instrumentation/spring/spring-cloud-aws-3.0",
      "target_versions": {
        "javaagent": [
          "io.awspring.cloud:spring-cloud-aws-sqs:[3.0.0,)"
        ]
      }
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enables experimental `spring-cloud-gateway.route` attributes (e.g., `spring-cloud-gateway.route.id`, `spring-cloud-gateway.route.uri`, etc.) on spans.\n",
          "name": "otel.instrumentation.spring-cloud-gateway.experimental-span-attributes",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enhances tracing for Spring Cloud Gateway. It does not generate new telemetry on its own, but rather enriches existing traces produced by other instrumentations like Netty and Spring WebFlux with Spring Cloud Gateway-specific attributes.\n",
      "name": "spring-cloud-gateway-2.0",
      "scope": {
        "name": "io.opentelemetry.spring-cloud-gateway-2.0"
      },
      "semconv": [],
      "source_path": "instrumentation/spring/spring-cloud-gateway/spring-cloud-gateway-2.0",
      "target_versions": {
        "javaagent": [
          "org.springframework.cloud:spring-cloud-starter-gateway:[2.0.0.RELEASE,]"
        ]
      }
    },
    {
      "description": "This instrumentation ensures proper context propagation for asynchronous operations within Spring Core. It modifies how tasks are submitted and executed to ensure that spans created by other instrumentations are correctly linked across thread boundaries, rather than generating any new telemetry itself.\n",
      "minimum_java_version": 17,
      "name": "spring-core-2.0",
      "scope": {
        "name": "io.opentelemetry.spring-core-2.0"
      },
      "semconv": [],
      "source_path": "instrumentation/spring/spring-core-2.0",
      "target_versions": {
        "javaagent": [
          "org.springframework:spring-core:[2.0,]"
        ]
      }
    },
    {
      "description": "This instrumentation enhances tracing for Spring Data operations. It works in conjunction with other instrumentations, such as JDBC, to provide additional context and details for database interactions initiated through Spring Data.\n",
      "name": "spring-data-1.8",
      "scope": {
        "name": "io.opentelemetry.spring-data-1.8"
      },
      "semconv": [
        "Code"
      ],
      "source_path": "instrumentation/spring/spring-data/spring-data-1.8",
      "target_versions": {
        "javaagent": [
          "org.springframework.data:spring-data-commons:[1.8.0.RELEASE,]",
          "org.springframework:spring-aop:[1.2,]"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "code.function",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "code.namespace",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "INTERNAL"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": "",
          "description": "Allows configuring headers to capture as span attributes.",
          "name": "otel.instrumentation.messaging.experimental.capture-headers",
          "type": "list"
        },
        {
          "default": "*",
          "description": "An array of Spring channel name patterns that will be intercepted.",
          "name": "otel.instrumentation.spring-integration.global-channel-interceptor-patterns",
          "type": "list"
        },
        {
          "default": false,
          "description": "Create producer spans when messages are sent to an output channel. Enable when you're using a messaging library that doesn't have its own instrumentation for generating producer spans. Note that the detection of output channels only works for Spring Cloud Stream `DirectWithAttributesChannel`.\n",
          "name": "otel.instrumentation.spring-integration.producer.enabled",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables PRODUCER and CONSUMER spans for Spring Integration.",
      "name": "spring-integration-4.1",
      "scope": {
        "name": "io.opentelemetry.spring-integration-4.1"
      },
      "semconv": [],
      "source_path": "instrumentation/spring/spring-integration-4.1",
      "target_versions": {
        "javaagent": [
          "org.springframework.integration:spring-integration-core:[4.1.0.RELEASE,)"
        ],
        "library": [
          "org.springframework.integration:spring-integration-core:[4.1.0.RELEASE,5.+)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "messaging.operation",
                  "type": "STRING"
                }
              ],
              "span_kind": "CONSUMER"
            }
          ],
          "when": "default"
        },
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "messaging.operation",
                  "type": "STRING"
                }
              ],
              "span_kind": "CONSUMER"
            },
            {
              "attributes": [
                {
                  "name": "messaging.operation",
                  "type": "STRING"
                }
              ],
              "span_kind": "PRODUCER"
            }
          ],
          "when": "otel.instrumentation.spring-integration.producer.enabled=true"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": "",
          "description": "A comma-separated list of header names to capture as span attributes.",
          "name": "otel.instrumentation.messaging.experimental.capture-headers",
          "type": "list"
        },
        {
          "default": false,
          "description": "Enables experimental receive telemetry, which will cause consumers to start a new trace, with only a span link connecting it to the producer trace.\n",
          "name": "otel.instrumentation.messaging.experimental.receive-telemetry.enabled",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables the generation of CONSUMER spans for Spring JMS.",
      "name": "spring-jms-2.0",
      "scope": {
        "name": "io.opentelemetry.spring-jms-2.0"
      },
      "semconv": [
        "Messaging"
      ],
      "source_path": "instrumentation/spring/spring-jms/spring-jms-2.0",
      "target_versions": {
        "javaagent": [
          "org.springframework:spring-jms:[2.0,6)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "messaging.destination.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.message.id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.operation",
                  "type": "STRING"
                },
                {
                  "name": "messaging.system",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CONSUMER"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": "",
          "description": "A comma-separated list of header names to capture as span attributes.",
          "name": "otel.instrumentation.messaging.experimental.capture-headers",
          "type": "list"
        },
        {
          "default": false,
          "description": "Enables experimental receive telemetry, which will cause consumers to start a new trace, with only a span link connecting it to the producer trace.\n",
          "name": "otel.instrumentation.messaging.experimental.receive-telemetry.enabled",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables the generation of CONSUMER spans for Spring JMS.",
      "minimum_java_version": 17,
      "name": "spring-jms-6.0",
      "scope": {
        "name": "io.opentelemetry.spring-jms-6.0"
      },
      "semconv": [
        "Messaging"
      ],
      "source_path": "instrumentation/spring/spring-jms/spring-jms-6.0",
      "target_versions": {
        "javaagent": [
          "org.springframework:spring-jms:[6.0.0,)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "messaging.destination.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.message.id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.operation",
                  "type": "STRING"
                },
                {
                  "name": "messaging.system",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CONSUMER"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enables capturing experimental span attribute `kafka.record.queue_time_ms`",
          "name": "otel.instrumentation.kafka.experimental-span-attributes",
          "type": "boolean"
        },
        {
          "default": "",
          "description": "A comma-separated list of header names to capture as span attributes.",
          "name": "otel.instrumentation.messaging.experimental.capture-headers",
          "type": "list"
        },
        {
          "default": false,
          "description": "Enables experimental receive telemetry, which will cause consumers to start a new trace, with only a span link connecting it to the producer trace.\n",
          "name": "otel.instrumentation.messaging.experimental.receive-telemetry.enabled",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables CONSUMER spans for Spring Kafka listeners.",
      "name": "spring-kafka-2.7",
      "scope": {
        "name": "io.opentelemetry.spring-kafka-2.7"
      },
      "semconv": [
        "Messaging"
      ],
      "source_path": "instrumentation/spring/spring-kafka-2.7",
      "target_versions": {
        "javaagent": [
          "org.springframework.kafka:spring-kafka:[2.7.0,)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "messaging.batch.message_count",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "messaging.client_id",
                  "type": "STRING"
                },
                {
                  "name": "messaging.destination.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.destination.partition.id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.kafka.consumer.group",
                  "type": "STRING"
                },
                {
                  "name": "messaging.kafka.message.key",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.kafka.message.offset",
                  "type": "LONG"
                },
                {
                  "name": "messaging.message.body.size",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "messaging.operation",
                  "type": "STRING"
                },
                {
                  "name": "messaging.system",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CONSUMER"
            }
          ],
          "when": "default"
        },
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "kafka.record.queue_time_ms",
                  "type": "LONG"
                },
                {
                  "name": "messaging.batch.message_count",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "messaging.client_id",
                  "type": "STRING"
                },
                {
                  "name": "messaging.destination.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.destination.partition.id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.kafka.consumer.group",
                  "type": "STRING"
                },
                {
                  "name": "messaging.kafka.message.key",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.kafka.message.offset",
                  "type": "LONG"
                },
                {
                  "name": "messaging.message.body.size",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "messaging.operation",
                  "type": "STRING"
                },
                {
                  "name": "messaging.system",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CONSUMER"
            }
          ],
          "when": "otel.instrumentation.kafka.experimental-span-attributes=true"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": "",
          "description": "A comma-separated list of header names to capture as span attributes.",
          "name": "otel.instrumentation.messaging.experimental.capture-headers",
          "type": "list"
        },
        {
          "default": false,
          "description": "Enables experimental receive telemetry, which will cause consumers to start a new trace, with only a span link connecting it to the producer trace.\n",
          "name": "otel.instrumentation.messaging.experimental.receive-telemetry.enabled",
          "type": "boolean"
        },
        {
          "default": false,
          "description": "Enables capturing experimental span attribute `messaging.pulsar.message.type` on PRODUCER spans.\n",
          "name": "otel.instrumentation.pulsar.experimental-span-attributes",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables CONSUMER spans for Spring Pulsar listeners.",
      "minimum_java_version": 17,
      "name": "spring-pulsar-1.0",
      "scope": {
        "name": "io.opentelemetry.spring-pulsar-1.0"
      },
      "semconv": [
        "Messaging"
      ],
      "source_path": "instrumentation/spring/spring-pulsar-1.0",
      "target_versions": {
        "javaagent": [
          "org.springframework.pulsar:spring-pulsar:[1.0.0,)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "messaging.destination.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.message.body.size",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "messaging.message.id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.operation",
                  "type": "STRING"
                },
                {
                  "name": "messaging.system",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CONSUMER"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": "",
          "description": "A comma-separated list of header names to capture as span attributes.",
          "name": "otel.instrumentation.messaging.experimental.capture-headers",
          "type": "list"
        }
      ],
      "description": "This instrumentation enables CONSUMER spans for Spring RabbitMQ listeners.",
      "name": "spring-rabbit-1.0",
      "scope": {
        "name": "io.opentelemetry.spring-rabbit-1.0"
      },
      "semconv": [
        "Messaging"
      ],
      "source_path": "instrumentation/spring/spring-rabbit-1.0",
      "target_versions": {
        "javaagent": [
          "org.springframework.amqp:spring-rabbit:(,)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "messaging.destination.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.message.body.size",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "messaging.operation",
                  "type": "STRING"
                },
                {
                  "name": "messaging.system",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CONSUMER"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "description": "This instrumentation enables CLIENT and SERVER spans for Spring RMI applications.",
      "name": "spring-rmi-4.0",
      "scope": {
        "name": "io.opentelemetry.spring-rmi-4.0"
      },
      "semconv": [
        "Aws"
      ],
      "source_path": "instrumentation/spring/spring-rmi-4.0",
      "target_versions": {
        "javaagent": [
          "org.springframework:spring-context:[4.0.0.RELEASE,6)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "rpc.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.service",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.system",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            },
            {
              "attributes": [
                {
                  "name": "rpc.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.service",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.system",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "SERVER"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Adds the experimental span attribute `job.system` with the value `spring_scheduling`.",
          "name": "otel.instrumentation.spring-scheduling.experimental-span-attributes",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables tracing for Spring Scheduling tasks.",
      "name": "spring-scheduling-3.1",
      "scope": {
        "name": "io.opentelemetry.spring-scheduling-3.1"
      },
      "semconv": [
        "Code"
      ],
      "source_path": "instrumentation/spring/spring-scheduling-3.1",
      "target_versions": {
        "javaagent": [
          "org.springframework:spring-context:[3.1.0.RELEASE,]"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "code.function",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "code.namespace",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "INTERNAL"
            }
          ],
          "when": "default"
        },
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "code.function",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "code.namespace",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "job.system",
                  "type": "STRING"
                }
              ],
              "span_kind": "INTERNAL"
            }
          ],
          "when": "otel.instrumentation.spring-scheduling.experimental-span-attributes=true"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enables capturing the enduser.id attribute.",
          "name": "otel.instrumentation.common.enduser.id.enabled",
          "type": "boolean"
        },
        {
          "default": false,
          "description": "Enables capturing the enduser.role attribute.",
          "name": "otel.instrumentation.common.enduser.role.enabled",
          "type": "boolean"
        },
        {
          "default": false,
          "description": "Enables capturing the enduser.scope attribute.",
          "name": "otel.instrumentation.common.enduser.scope.enabled",
          "type": "boolean"
        },
        {
          "default": "ROLE_",
          "description": "Prefix of granted authorities identifying roles to capture in the `enduser.role` semantic attribute.",
          "name": "otel.instrumentation.spring-security.enduser.role.granted-authority-prefix",
          "type": "string"
        },
        {
          "default": "SCOPE_",
          "description": "Prefix of granted authorities identifying scopes to capture in the `enduser.scopes` semantic attribute.",
          "name": "otel.instrumentation.spring-security.scope.role.granted-authority-prefix",
          "type": "string"
        }
      ],
      "description": "This instrumentation does not emit any telemetry on its own. Instead, it captures enduser attributes, and is only enabled when at least one of the `enduser` configurations is enabled.\nNOTE: The `enduser` attributes have been deprecated and will be removed in 3.0+ of the java agent.\n",
      "minimum_java_version": 17,
      "name": "spring-security-config-6.0",
      "scope": {
        "name": "io.opentelemetry.spring-security-config-6.0"
      },
      "semconv": [],
      "source_path": "instrumentation/spring/spring-security-config-6.0",
      "target_versions": {
        "javaagent": [
          "org.springframework.security:spring-security-config:[6.0.0,]"
        ],
        "library": [
          "io.projectreactor:reactor-core:3.5.0",
          "jakarta.servlet:jakarta.servlet-api:6.0.0",
          "org.springframework.security:spring-security-config:6.0.0",
          "org.springframework.security:spring-security-web:6.0.0",
          "org.springframework:spring-web:6.0.0"
        ]
      }
    },
    {
      "description": "This instrumentation provides a library integration that enables capturing HTTP client spans and metrics for Spring's RestTemplate. The agent integration enriches HTTP server spans and metrics with route information.\n",
      "name": "spring-web-3.1",
      "scope": {
        "name": "io.opentelemetry.spring-web-3.1"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/spring/spring-web/spring-web-3.1",
      "target_versions": {
        "javaagent": [
          "org.springframework:spring-web:[3.1.0.RELEASE,6)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "description": "This instrumentation enriches HTTP server spans and metrics with route information.",
      "name": "spring-web-6.0",
      "scope": {
        "name": "io.opentelemetry.spring-web-6.0"
      },
      "semconv": [],
      "source_path": "instrumentation/spring/spring-web/spring-web-6.0",
      "target_versions": {
        "javaagent": [
          "org.springframework:spring-web:[6.0.0,)"
        ]
      }
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enables the creation of experimental controller (INTERNAL) spans.",
          "name": "otel.instrumentation.common.experimental.controller-telemetry.enabled",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables HTTP client spans and metrics for Spring WebFlux 5.0. It also optionally enables experimental controller (INTERNAL) spans.\n",
      "name": "spring-webflux-5.0",
      "scope": {
        "name": "io.opentelemetry.spring-webflux-5.0"
      },
      "semconv": [
        "Code",
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/spring/spring-webflux/spring-webflux-5.0",
      "target_versions": {
        "javaagent": [
          "io.projectreactor.ipc:reactor-netty:[0.7.0.RELEASE,)",
          "io.projectreactor.netty:reactor-netty:[0.8.0.RELEASE,)",
          "org.springframework:spring-webflux:[5.0.0.RELEASE,)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            },
            {
              "attributes": [
                {
                  "name": "code.function",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "code.namespace",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "INTERNAL"
            }
          ],
          "when": "otel.instrumentation.common.experimental.controller-telemetry.enabled"
        }
      ]
    },
    {
      "description": "This instrumentation provides a library integration for the Spring WebFlux WebClient and Webflux server versions 5.3+ that enables HTTP client and server spans and metrics.\n",
      "name": "spring-webflux-5.3",
      "scope": {
        "name": "io.opentelemetry.spring-webflux-5.3"
      },
      "semconv": [
        "Client",
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/spring/spring-webflux/spring-webflux-5.3",
      "target_versions": {
        "library": [
          "org.springframework:spring-webflux:5.3.0"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            },
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "http.route",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.scheme",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "Duration of HTTP server requests.",
              "name": "http.server.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            },
            {
              "attributes": [
                {
                  "name": "client.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "http.route",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.path",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.query",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.scheme",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "user_agent.original",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "SERVER"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enables the creation of experimental controller (INTERNAL) spans.",
          "name": "otel.instrumentation.common.experimental.controller-telemetry.enabled",
          "type": "boolean"
        },
        {
          "default": false,
          "description": "Enables the creation of experimental view (INTERNAL) spans.",
          "name": "otel.instrumentation.common.experimental.view-telemetry.enabled",
          "type": "boolean"
        },
        {
          "default": false,
          "description": "Enables the capture of experimental span attributes `spring-webmvc-view-name` and `spring-webmvc.view.type`.\n",
          "name": "otel.instrumentation.spring-webmvc.experimental-span-attributes",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables optional Controller and View (INTERNAL) spans for Spring WebMVC 3.1+.\n",
      "name": "spring-webmvc-3.1",
      "scope": {
        "name": "io.opentelemetry.spring-webmvc-3.1"
      },
      "semconv": [
        "Code"
      ],
      "source_path": "instrumentation/spring/spring-webmvc/spring-webmvc-3.1",
      "target_versions": {
        "javaagent": [
          "org.springframework:spring-webmvc:[3.1.0.RELEASE,6)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "code.function",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "code.namespace",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "INTERNAL"
            }
          ],
          "when": "default"
        },
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "code.function",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "code.namespace",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "spring-webmvc.view.type",
                  "type": "STRING"
                }
              ],
              "span_kind": "INTERNAL"
            }
          ],
          "when": "otel.instrumentation.spring-webmvc.experimental-span-attributes=true"
        }
      ]
    },
    {
      "description": "This instrumentation provides a library integration for Spring WebMVC controllers, that enables the creation of HTTP server spans and metrics for requests processed by the Spring servlet container.\n",
      "name": "spring-webmvc-5.3",
      "scope": {
        "name": "io.opentelemetry.spring-webmvc-5.3"
      },
      "semconv": [
        "Client",
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/spring/spring-webmvc/spring-webmvc-5.3",
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "http.route",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.scheme",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "Duration of HTTP server requests.",
              "name": "http.server.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "client.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "http.route",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.path",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.query",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.scheme",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "user_agent.original",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "SERVER"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enables the creation of experimental controller (INTERNAL) spans.",
          "name": "otel.instrumentation.common.experimental.controller-telemetry.enabled",
          "type": "boolean"
        },
        {
          "default": false,
          "description": "Enables the creation of experimental view (INTERNAL) spans.",
          "name": "otel.instrumentation.common.experimental.view-telemetry.enabled",
          "type": "boolean"
        },
        {
          "default": false,
          "description": "Enables the capture of experimental span attributes `spring-webmvc-view-name` and `spring-webmvc.view.type`.\n",
          "name": "otel.instrumentation.spring-webmvc.experimental-span-attributes",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables optional Controller and View (INTERNAL) spans for Spring WebMVC 6.0+.\n",
      "minimum_java_version": 17,
      "name": "spring-webmvc-6.0",
      "scope": {
        "name": "io.opentelemetry.spring-webmvc-6.0"
      },
      "semconv": [
        "Code"
      ],
      "source_path": "instrumentation/spring/spring-webmvc/spring-webmvc-6.0",
      "target_versions": {
        "javaagent": [
          "org.springframework:spring-webmvc:[6.0.0,)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "code.function",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "code.namespace",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "INTERNAL"
            }
          ],
          "when": "default"
        },
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "code.function",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "code.namespace",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "spring-webmvc.view.type",
                  "type": "STRING"
                }
              ],
              "span_kind": "INTERNAL"
            }
          ],
          "when": "otel.instrumentation.spring-webmvc.experimental-span-attributes=true"
        }
      ]
    },
    {
      "disabled_by_default": true,
      "name": "spring-ws-2.0",
      "scope": {
        "name": "io.opentelemetry.spring-ws-2.0"
      },
      "semconv": [],
      "source_path": "instrumentation/spring/spring-ws-2.0",
      "target_versions": {
        "javaagent": [
          "org.springframework.ws:spring-ws-core:[2.0.0.RELEASE,]"
        ]
      }
    },
    {
      "name": "spymemcached-2.12",
      "scope": {
        "name": "io.opentelemetry.spymemcached-2.12"
      },
      "semconv": [],
      "source_path": "instrumentation/spymemcached-2.12",
      "target_versions": {
        "javaagent": [
          "net.spy:spymemcached:[2.12.0,)"
        ]
      }
    },
    {
      "name": "struts-2.3",
      "scope": {
        "name": "io.opentelemetry.struts-2.3"
      },
      "semconv": [],
      "source_path": "instrumentation/struts/struts-2.3",
      "target_versions": {
        "javaagent": [
          "org.apache.struts:struts2-core:[2.1.0,7)"
        ]
      }
    },
    {
      "minimum_java_version": 17,
      "name": "struts-7.0",
      "scope": {
        "name": "io.opentelemetry.struts-7.0"
      },
      "semconv": [],
      "source_path": "instrumentation/struts/struts-7.0",
      "target_versions": {
        "javaagent": [
          "org.apache.struts:struts2-core:[7.0.0,)"
        ]
      }
    },
    {
      "name": "tapestry-5.4",
      "scope": {
        "name": "io.opentelemetry.tapestry-5.4"
      },
      "semconv": [],
      "source_path": "instrumentation/tapestry-5.4",
      "target_versions": {
        "javaagent": [
          "org.apache.tapestry:tapestry-core:[5.4.0,)"
        ]
      }
    },
    {
      "minimum_java_version": 11,
      "name": "tomcat-10.0",
      "scope": {
        "name": "io.opentelemetry.tomcat-10.0"
      },
      "semconv": [],
      "source_path": "instrumentation/tomcat/tomcat-10.0",
      "target_versions": {
        "javaagent": [
          "org.apache.tomcat.embed:tomcat-embed-core:[10,)"
        ]
      }
    },
    {
      "name": "tomcat-7.0",
      "scope": {
        "name": "io.opentelemetry.tomcat-7.0"
      },
      "semconv": [],
      "source_path": "instrumentation/tomcat/tomcat-7.0",
      "target_versions": {
        "javaagent": [
          "org.apache.tomcat.embed:tomcat-embed-core:[7.0.4, 10)"
        ]
      }
    },
    {
      "name": "tomcat-jdbc",
      "scope": {
        "name": "io.opentelemetry.tomcat-jdbc"
      },
      "semconv": [
        "Database Client"
      ],
      "source_path": "instrumentation/tomcat/tomcat-jdbc",
      "target_versions": {
        "javaagent": [
          "org.apache.tomcat:tomcat-jdbc:[8.5.0,)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                }
              ],
              "description": "The maximum number of idle open connections allowed.",
              "name": "db.client.connections.idle.max",
              "type": "LONG_SUM",
              "unit": "connections"
            },
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                }
              ],
              "description": "The minimum number of idle open connections allowed.",
              "name": "db.client.connections.idle.min",
              "type": "LONG_SUM",
              "unit": "connections"
            },
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                }
              ],
              "description": "The maximum number of open connections allowed.",
              "name": "db.client.connections.max",
              "type": "LONG_SUM",
              "unit": "connections"
            },
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                }
              ],
              "description": "The number of pending requests for an open connection, cumulative for the entire pool.",
              "name": "db.client.connections.pending_requests",
              "type": "LONG_SUM",
              "unit": "requests"
            },
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                },
                {
                  "name": "state",
                  "type": "STRING"
                }
              ],
              "description": "The number of connections that are currently in state described by the state attribute.",
              "name": "db.client.connections.usage",
              "type": "LONG_SUM",
              "unit": "connections"
            }
          ],
          "when": "default"
        },
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.client.connection.state",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The number of connections that are currently in state described by the state attribute.",
              "name": "db.client.connection.count",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "connection"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The maximum number of idle open connections allowed.",
              "name": "db.client.connection.idle.max",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "connection"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The minimum number of idle open connections allowed.",
              "name": "db.client.connection.idle.min",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "connection"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The maximum number of open connections allowed.",
              "name": "db.client.connection.max",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "connection"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The number of current pending requests for an open connection.",
              "name": "db.client.connection.pending_requests",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "request"
            }
          ],
          "when": "otel.semconv-stability.opt-in=database"
        }
      ]
    },
    {
      "name": "twilio-6.6",
      "scope": {
        "name": "io.opentelemetry.twilio-6.6"
      },
      "semconv": [],
      "source_path": "instrumentation/twilio-6.6",
      "target_versions": {
        "javaagent": [
          "com.twilio.sdk:twilio:(,8.0.0)"
        ]
      }
    },
    {
      "name": "undertow-1.4",
      "scope": {
        "name": "io.opentelemetry.undertow-1.4"
      },
      "semconv": [],
      "source_path": "instrumentation/undertow-1.4",
      "target_versions": {
        "javaagent": [
          "io.undertow:undertow-core:[1.4.0.Final,)"
        ]
      }
    },
    {
      "name": "vaadin-14.2",
      "scope": {
        "name": "io.opentelemetry.vaadin-14.2"
      },
      "semconv": [],
      "source_path": "instrumentation/vaadin-14.2",
      "target_versions": {
        "javaagent": [
          "com.vaadin:flow-server:[2.2.0,3)",
          "com.vaadin:flow-server:[3.1.0,)"
        ]
      }
    },
    {
      "name": "vertx-http-client-3.0",
      "scope": {
        "name": "io.opentelemetry.vertx-http-client-3.0"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/vertx/vertx-http-client/vertx-http-client-3.0",
      "target_versions": {
        "javaagent": [
          "io.vertx:vertx-core:[3.0.0,4.0.0)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "name": "vertx-http-client-4.0",
      "scope": {
        "name": "io.opentelemetry.vertx-http-client-4.0"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/vertx/vertx-http-client/vertx-http-client-4.0",
      "target_versions": {
        "javaagent": [
          "io.vertx:vertx-core:[4.0.0,5)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "minimum_java_version": 11,
      "name": "vertx-http-client-5.0",
      "scope": {
        "name": "io.opentelemetry.vertx-http-client-5.0"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/vertx/vertx-http-client/vertx-http-client-5.0",
      "target_versions": {
        "javaagent": [
          "io.vertx:vertx-core:[5.0.0,)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "name": "vertx-kafka-client-3.6",
      "scope": {
        "name": "io.opentelemetry.vertx-kafka-client-3.6"
      },
      "semconv": [],
      "source_path": "instrumentation/vertx/vertx-kafka-client-3.6",
      "target_versions": {
        "javaagent": [
          "io.vertx:vertx-kafka-client:[3.5.1,)"
        ]
      }
    },
    {
      "name": "vertx-redis-client-4.0",
      "scope": {
        "name": "io.opentelemetry.vertx-redis-client-4.0"
      },
      "semconv": [
        "Database Client"
      ],
      "source_path": "instrumentation/vertx/vertx-redis-client-4.0",
      "target_versions": {
        "javaagent": [
          "io.vertx:vertx-redis-client:[4.0.0,)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.operation",
                  "type": "STRING"
                },
                {
                  "name": "db.redis.database_index",
                  "type": "LONG"
                },
                {
                  "name": "db.statement",
                  "type": "STRING"
                },
                {
                  "name": "db.system",
                  "type": "STRING"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        },
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "db.namespace",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of database client operations.",
              "name": "db.client.operation.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.namespace",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.query.text",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "otel.semconv-stability.opt-in=database"
        }
      ]
    },
    {
      "name": "vertx-rx-java-3.5",
      "scope": {
        "name": "io.opentelemetry.vertx-rx-java-3.5"
      },
      "semconv": [],
      "source_path": "instrumentation/vertx/vertx-rx-java-3.5",
      "target_versions": {
        "javaagent": [
          "io.vertx:vertx-rx-java2:[3.5.0,)"
        ]
      }
    },
    {
      "name": "vertx-sql-client-4.0",
      "scope": {
        "name": "io.opentelemetry.vertx-sql-client-4.0"
      },
      "semconv": [
        "Database Client"
      ],
      "source_path": "instrumentation/vertx/vertx-sql-client/vertx-sql-client-4.0",
      "target_versions": {
        "javaagent": [
          "io.vertx:vertx-sql-client:[4.0.0,5)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.name",
                  "type": "STRING"
                },
                {
                  "name": "db.operation",
                  "type": "STRING"
                },
                {
                  "name": "db.sql.table",
                  "type": "STRING"
                },
                {
                  "name": "db.statement",
                  "type": "STRING"
                },
                {
                  "name": "db.user",
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        },
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "db.collection.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.namespace",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of database client operations.",
              "name": "db.client.operation.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.collection.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.namespace",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.query.text",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.response.status_code",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "otel.semconv-stability.opt-in=database"
        }
      ]
    },
    {
      "minimum_java_version": 11,
      "name": "vertx-sql-client-5.0",
      "scope": {
        "name": "io.opentelemetry.vertx-sql-client-5.0"
      },
      "semconv": [
        "Database Client"
      ],
      "source_path": "instrumentation/vertx/vertx-sql-client/vertx-sql-client-5.0",
      "target_versions": {
        "javaagent": [
          "io.vertx:vertx-sql-client:[5.0.0,)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.name",
                  "type": "STRING"
                },
                {
                  "name": "db.operation",
                  "type": "STRING"
                },
                {
                  "name": "db.sql.table",
                  "type": "STRING"
                },
                {
                  "name": "db.statement",
                  "type": "STRING"
                },
                {
                  "name": "db.user",
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        },
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "db.collection.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.namespace",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of database client operations.",
              "name": "db.client.operation.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.collection.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.namespace",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.query.text",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.response.status_code",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "otel.semconv-stability.opt-in=database"
        }
      ]
    },
    {
      "name": "vertx-web-3.0",
      "scope": {
        "name": "io.opentelemetry.vertx-web-3.0"
      },
      "semconv": [],
      "source_path": "instrumentation/vertx/vertx-web-3.0",
      "target_versions": {
        "javaagent": [
          "io.vertx:vertx-web:[3.0.0,)"
        ]
      }
    },
    {
      "description": "Instrumentation for the vibur-dbcp library, which provides connection pool metrics.",
      "name": "vibur-dbcp-11.0",
      "scope": {
        "name": "io.opentelemetry.vibur-dbcp-11.0"
      },
      "semconv": [
        "Database Client"
      ],
      "source_path": "instrumentation/vibur-dbcp-11.0",
      "target_versions": {
        "javaagent": [
          "org.vibur:vibur-dbcp:[11.0,)"
        ],
        "library": [
          "org.vibur:vibur-dbcp:11.0"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                }
              ],
              "description": "The maximum number of open connections allowed.",
              "name": "db.client.connections.max",
              "type": "LONG_SUM",
              "unit": "connections"
            },
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                },
                {
                  "name": "state",
                  "type": "STRING"
                }
              ],
              "description": "The number of connections that are currently in state described by the state attribute.",
              "name": "db.client.connections.usage",
              "type": "LONG_SUM",
              "unit": "connections"
            }
          ],
          "when": "default"
        },
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.client.connection.state",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The number of connections that are currently in state described by the state attribute.",
              "name": "db.client.connection.count",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "connection"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The maximum number of open connections allowed.",
              "name": "db.client.connection.max",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "connection"
            }
          ],
          "when": "otel.semconv-stability.opt-in=database"
        }
      ]
    },
    {
      "name": "wicket-8.0",
      "scope": {
        "name": "io.opentelemetry.wicket-8.0"
      },
      "semconv": [],
      "source_path": "instrumentation/wicket-8.0",
      "target_versions": {
        "javaagent": [
          "org.apache.wicket:wicket:[8.0.0,]"
        ]
      }
    },
    {
      "name": "xxl-job-1.9.2",
      "scope": {
        "name": "io.opentelemetry.xxl-job-1.9.2"
      },
      "semconv": [],
      "source_path": "instrumentation/xxl-job/xxl-job-1.9.2",
      "target_versions": {
        "javaagent": [
          "com.xuxueli:xxl-job-core:[1.9.2, 2.1.2)"
        ]
      }
    },
    {
      "name": "xxl-job-2.1.2",
      "scope": {
        "name": "io.opentelemetry.xxl-job-2.1.2"
      },
      "semconv": [],
      "source_path": "instrumentation/xxl-job/xxl-job-2.1.2",
      "target_versions": {
        "javaagent": [
          "com.xuxueli:xxl-job-core:[2.1.2,2.3.0)"
        ]
      }
    },
    {
      "name": "xxl-job-2.3.0",
      "scope": {
        "name": "io.opentelemetry.xxl-job-2.3.0"
      },
      "semconv": [],
      "source_path": "instrumentation/xxl-job/xxl-job-2.3.0",
      "target_versions": {
        "javaagent": [
          "com.xuxueli:xxl-job-core:[2.3.0,)"
        ]
      }
    },
    {
      "name": "zio-2.0",
      "scope": {
        "name": "io.opentelemetry.zio-2.0"
      },
      "semconv": [],
      "source_path": "instrumentation/zio/zio-2.0",
      "target_versions": {
        "javaagent": [
          "dev.zio:zio_2.12:[2.0.0,)",
          "dev.zio:zio_2.13:[2.0.0,)",
          "dev.zio:zio_3:[2.0.0,)"
        ]
      }
    }
  ],
  "2.19": [
    {
      "description": "This instrumentation enables HTTP server spans and HTTP server metrics for the ActiveJ HTTP server.",
      "library_link": "https://activej.io/",
      "minimum_java_version": 17,
      "name": "activej-http-6.0",
      "scope": {
        "name": "io.opentelemetry.activej-http-6.0"
      },
      "semconv": [
        "Client",
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/activej-http-6.0",
      "target_versions": {
        "javaagent": [
          "io.activej:activej-http:[6.0,)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.scheme",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "Duration of HTTP server requests.",
              "name": "http.server.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "client.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.path",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.query",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.scheme",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "user_agent.original",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "SERVER"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "description": "This instrumentation provides context propagation for Akka actors, it does not emit any telemetry on its own.",
      "library_link": "https://doc.akka.io/libraries/akka-core/current/typed/index.html",
      "name": "akka-actor-2.3",
      "scope": {
        "name": "io.opentelemetry.akka-actor-2.3"
      },
      "semconv": [],
      "source_path": "instrumentation/akka/akka-actor-2.3",
      "target_versions": {
        "javaagent": [
          "com.typesafe.akka:akka-actor_2.11:[2.3,)",
          "com.typesafe.akka:akka-actor_2.12:[2.3,)",
          "com.typesafe.akka:akka-actor_2.13:[2.3,)"
        ]
      }
    },
    {
      "description": "This instrumentation provides context propagation for the Akka Fork-Join Pool, it does not emit any telemetry on its own.",
      "library_link": "https://doc.akka.io/libraries/akka-core/current/typed/index.html",
      "name": "akka-actor-fork-join-2.5",
      "scope": {
        "name": "io.opentelemetry.akka-actor-fork-join-2.5"
      },
      "semconv": [],
      "source_path": "instrumentation/akka/akka-actor-fork-join-2.5",
      "target_versions": {
        "javaagent": [
          "com.typesafe.akka:akka-actor_2.11:[2.5,)",
          "com.typesafe.akka:akka-actor_2.12:[2.5,2.6)",
          "com.typesafe.akka:akka-actor_2.13:[2.5.23,2.6)"
        ]
      }
    },
    {
      "description": "This instrumentation enables HTTP client spans and metrics for the Akka HTTP client, and HTTP server spans and metrics for the Akka HTTP server.\n",
      "library_link": "https://doc.akka.io/docs/akka-http/current/index.html",
      "name": "akka-http-10.0",
      "scope": {
        "name": "io.opentelemetry.akka-http-10.0"
      },
      "semconv": [
        "Client",
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/akka/akka-http-10.0",
      "target_versions": {
        "javaagent": [
          "com.typesafe.akka:akka-http_2.11:[10,)",
          "com.typesafe.akka:akka-http_2.12:[10,)",
          "com.typesafe.akka:akka-http_2.13:[10,)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            },
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "http.route",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.scheme",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "Duration of HTTP server requests.",
              "name": "http.server.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            },
            {
              "attributes": [
                {
                  "name": "client.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "http.route",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.path",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.query",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.scheme",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "user_agent.original",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "SERVER"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "description": "The Alibaba Druid instrumentation generates database connection pool metrics for druid data sources.\n",
      "library_link": "https://github.com/alibaba/druid",
      "name": "alibaba-druid-1.0",
      "scope": {
        "name": "io.opentelemetry.alibaba-druid-1.0"
      },
      "semconv": [
        "Database Client"
      ],
      "source_path": "instrumentation/alibaba-druid-1.0",
      "target_versions": {
        "javaagent": [
          "com.alibaba:druid:(,)"
        ],
        "library": [
          "com.alibaba:druid:1.0.0"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                }
              ],
              "description": "The maximum number of idle open connections allowed.",
              "name": "db.client.connections.idle.max",
              "type": "LONG_SUM",
              "unit": "connections"
            },
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                }
              ],
              "description": "The minimum number of idle open connections allowed.",
              "name": "db.client.connections.idle.min",
              "type": "LONG_SUM",
              "unit": "connections"
            },
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                }
              ],
              "description": "The maximum number of open connections allowed.",
              "name": "db.client.connections.max",
              "type": "LONG_SUM",
              "unit": "connections"
            },
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                }
              ],
              "description": "The number of pending requests for an open connection, cumulative for the entire pool.",
              "name": "db.client.connections.pending_requests",
              "type": "LONG_SUM",
              "unit": "requests"
            },
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                },
                {
                  "name": "state",
                  "type": "STRING"
                }
              ],
              "description": "The number of connections that are currently in state described by the state attribute.",
              "name": "db.client.connections.usage",
              "type": "LONG_SUM",
              "unit": "connections"
            }
          ],
          "when": "default"
        },
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.client.connection.state",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The number of connections that are currently in state described by the state attribute.",
              "name": "db.client.connection.count",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "connection"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The maximum number of idle open connections allowed.",
              "name": "db.client.connection.idle.max",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "connection"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The minimum number of idle open connections allowed.",
              "name": "db.client.connection.idle.min",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "connection"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The maximum number of open connections allowed.",
              "name": "db.client.connection.max",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "connection"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The number of current pending requests for an open connection.",
              "name": "db.client.connection.pending_requests",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "request"
            }
          ],
          "when": "otel.semconv-stability.opt-in=database"
        }
      ]
    },
    {
      "description": "This instrumentation enables database connection pools metrics for Apache DBCP.\nThe instrumentation uses `MBeanRegistration` methods for lifecycle detection, therefore it only activates if the `BasicDataSource` is registered to an `MBeanServer`. If using Spring Boot, this happens automatically as all Spring beans that support JMX registration are automatically registered by default.\n",
      "library_link": "https://commons.apache.org/proper/commons-dbcp/",
      "name": "apache-dbcp-2.0",
      "scope": {
        "name": "io.opentelemetry.apache-dbcp-2.0"
      },
      "semconv": [
        "Database Client"
      ],
      "source_path": "instrumentation/apache-dbcp-2.0",
      "target_versions": {
        "javaagent": [
          "org.apache.commons:commons-dbcp2:[2,)"
        ],
        "library": [
          "org.apache.commons:commons-dbcp2:2.0"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                }
              ],
              "description": "The maximum number of idle open connections allowed.",
              "name": "db.client.connections.idle.max",
              "type": "LONG_SUM",
              "unit": "connections"
            },
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                }
              ],
              "description": "The minimum number of idle open connections allowed.",
              "name": "db.client.connections.idle.min",
              "type": "LONG_SUM",
              "unit": "connections"
            },
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                }
              ],
              "description": "The maximum number of open connections allowed.",
              "name": "db.client.connections.max",
              "type": "LONG_SUM",
              "unit": "connections"
            },
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                },
                {
                  "name": "state",
                  "type": "STRING"
                }
              ],
              "description": "The number of connections that are currently in state described by the state attribute.",
              "name": "db.client.connections.usage",
              "type": "LONG_SUM",
              "unit": "connections"
            }
          ],
          "when": "default"
        },
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.client.connection.state",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The number of connections that are currently in state described by the state attribute.",
              "name": "db.client.connection.count",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "connection"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The maximum number of idle open connections allowed.",
              "name": "db.client.connection.idle.max",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "connection"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The minimum number of idle open connections allowed.",
              "name": "db.client.connection.idle.min",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "connection"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The maximum number of open connections allowed.",
              "name": "db.client.connection.max",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "connection"
            }
          ],
          "when": "otel.semconv-stability.opt-in=database"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": "",
          "description": "Used to specify a mapping from host names or IP addresses to peer services.",
          "name": "otel.instrumentation.common.peer-service-mapping",
          "type": "map"
        }
      ],
      "description": "The Apache Dubbo instrumentation provides RPC client spans and RPC server spans for Apache Dubbo RPC calls. Each call produces a span named after the Dubbo method, enriched with standard RPC attributes (system, service, method), network attributes, and error details if an exception occurs.",
      "library_link": "https://github.com/apache/dubbo/",
      "name": "apache-dubbo-2.7",
      "scope": {
        "name": "io.opentelemetry.apache-dubbo-2.7"
      },
      "semconv": [
        "Aws",
        "Database Client"
      ],
      "source_path": "instrumentation/apache-dubbo-2.7",
      "target_versions": {
        "javaagent": [
          "org.apache.dubbo:dubbo:[2.7,)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "rpc.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.service",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.system",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "CLIENT"
            },
            {
              "attributes": [
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "rpc.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.service",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.system",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "SERVER"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "description": "This instrumentation enables HTTP client spans and HTTP client metrics for the Apache HttpAsyncClient.",
      "library_link": "https://hc.apache.org/index.html",
      "name": "apache-httpasyncclient-4.1",
      "scope": {
        "name": "io.opentelemetry.apache-httpasyncclient-4.1"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/apache-httpasyncclient-4.1",
      "target_versions": {
        "javaagent": [
          "org.apache.httpcomponents:httpasyncclient:[4.1,)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "description": "This instrumentation enables HTTP client spans and HTTP client metrics for versions 2 and 3 of the Apache HttpClient.",
      "library_link": "https://hc.apache.org/index.html",
      "name": "apache-httpclient-2.0",
      "scope": {
        "name": "io.opentelemetry.apache-httpclient-2.0"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/apache-httpclient/apache-httpclient-2.0",
      "target_versions": {
        "javaagent": [
          "commons-httpclient:commons-httpclient:[2.0,4.0)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "description": "This instrumentation enables HTTP client spans and HTTP client metrics for version 4 of the Apache HttpClient.",
      "library_link": "https://hc.apache.org/index.html",
      "name": "apache-httpclient-4.0",
      "scope": {
        "name": "io.opentelemetry.apache-httpclient-4.0"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/apache-httpclient/apache-httpclient-4.0",
      "target_versions": {
        "javaagent": [
          "io.dropwizard:dropwizard-client:(,3.0.0)",
          "org.apache.httpcomponents:httpclient:[4.0,)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "description": "This instrumentation provides a library integration that enables HTTP client spans and HTTP client metrics for the Apache HttpClient.",
      "library_link": "https://hc.apache.org/index.html",
      "name": "apache-httpclient-4.3",
      "scope": {
        "name": "io.opentelemetry.apache-httpclient-4.3"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/apache-httpclient/apache-httpclient-4.3",
      "target_versions": {
        "library": [
          "org.apache.httpcomponents:httpclient:[4.3,4.+)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.resend_count",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "description": "This instrumentation enables HTTP client spans and HTTP client metrics for version 5 of the Apache HttpClient.",
      "library_link": "https://hc.apache.org/index.html",
      "name": "apache-httpclient-5.0",
      "scope": {
        "name": "io.opentelemetry.apache-httpclient-5.0"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/apache-httpclient/apache-httpclient-5.0",
      "target_versions": {
        "javaagent": [
          "org.apache.httpcomponents.client5:httpclient5:[5.0,)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "description": "This instrumentation provides a library integration that enables HTTP client spans and HTTP client metrics for the Apache HttpClient.",
      "library_link": "https://hc.apache.org/index.html",
      "name": "apache-httpclient-5.2",
      "scope": {
        "name": "io.opentelemetry.apache-httpclient-5.2"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/apache-httpclient/apache-httpclient-5.2",
      "target_versions": {
        "library": [
          "org.apache.httpcomponents.client5:httpclient5:5.2.1"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.resend_count",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enables experimental `apache-shenyu.meta.` prefixed span attributes `app-name`, `service-name`, `context-path`, `param-types`, `id`, `method-name`, `rpc-type`, `path` and `rpc-ext`.\n",
          "name": "otel.instrumentation.apache-shenyu.experimental-span-attributes",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation does not emit telemetry on its own. Instead, it augments existing HTTP server spans and HTTP server metrics with the HTTP route and Shenyu specific attributes.\n",
      "library_link": "https://shenyu.apache.org/",
      "name": "apache-shenyu-2.4",
      "scope": {
        "name": "io.opentelemetry.apache-shenyu-2.4"
      },
      "semconv": [],
      "source_path": "instrumentation/apache-shenyu-2.4",
      "target_versions": {
        "javaagent": [
          "org.apache.shenyu:shenyu-web:[2.4.0,)"
        ]
      }
    },
    {
      "description": "This instrumentation enables HTTP client spans and metrics for the Armeria HTTP client, and HTTP server spans and metrics for the Armeria HTTP server.\n",
      "library_link": "https://armeria.dev/",
      "name": "armeria-1.3",
      "scope": {
        "name": "io.opentelemetry.armeria-1.3"
      },
      "semconv": [
        "Client",
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/armeria/armeria-1.3",
      "target_versions": {
        "javaagent": [
          "com.linecorp.armeria:armeria:[1.3.0,)"
        ],
        "library": [
          "com.linecorp.armeria:armeria:1.3.0"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            },
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "http.route",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.scheme",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "Duration of HTTP server requests.",
              "name": "http.server.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            },
            {
              "attributes": [
                {
                  "name": "client.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "http.route",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.path",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.query",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.scheme",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "user_agent.original",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "SERVER"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "description": "This instrumentation enables RPC client spans and metrics for the Armeria gRPC client, and RPC server spans and metrics for the Armeria gRPC server.\n",
      "library_link": "https://armeria.dev/",
      "name": "armeria-grpc-1.14",
      "scope": {
        "name": "io.opentelemetry.armeria-grpc-1.14"
      },
      "semconv": [
        "Aws",
        "Database Client",
        "Rpc"
      ],
      "source_path": "instrumentation/armeria/armeria-grpc-1.14",
      "target_versions": {
        "javaagent": [
          "com.linecorp.armeria:armeria-grpc:[1.14.0,)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "rpc.grpc.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "rpc.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.service",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.system",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "CLIENT"
            },
            {
              "attributes": [
                {
                  "name": "rpc.grpc.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "rpc.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.service",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.system",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "SERVER"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "description": "This instrumentation enables HTTP client spans and HTTP client metrics for version 1 of the AsyncHttpClient (AHC) HTTP client.",
      "library_link": "https://github.com/AsyncHttpClient/async-http-client",
      "name": "async-http-client-1.9",
      "scope": {
        "name": "io.opentelemetry.async-http-client-1.9"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/async-http-client/async-http-client-1.9",
      "target_versions": {
        "javaagent": [
          "com.ning:async-http-client:[1.9.0,)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "description": "This instrumentation enables HTTP client spans and HTTP client metrics for version 2 of the AsyncHttpClient (AHC) HTTP client.",
      "library_link": "https://github.com/AsyncHttpClient/async-http-client",
      "name": "async-http-client-2.0",
      "scope": {
        "name": "io.opentelemetry.async-http-client-2.0"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/async-http-client/async-http-client-2.0",
      "target_versions": {
        "javaagent": [
          "org.asynchttpclient:async-http-client:[2.0.0,)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "description": "This instrumentation does not emit telemetry on its own. Instead, it hooks into the Avaje Jex Context to extract the HTTP route and attach it to existing HTTP server spans and HTTP server metrics.\n",
      "library_link": "https://avaje.io/jex/",
      "minimum_java_version": 21,
      "name": "avaje-jex-3.0",
      "scope": {
        "name": "io.opentelemetry.avaje-jex-3.0"
      },
      "semconv": [],
      "source_path": "instrumentation/avaje-jex-3.0",
      "target_versions": {
        "javaagent": [
          "io.avaje:avaje-jex:[3.0,)"
        ]
      }
    },
    {
      "configurations": [
        {
          "default": 10000,
          "description": "Flush timeout in milliseconds.",
          "name": "otel.instrumentation.aws-lambda.flush-timeout",
          "type": "int"
        }
      ],
      "description": "Provides lightweight instrumentation of the Lambda core library, supporting all versions. It generates FaaS server spans with the `faas.invocation_id` attribute. Use this package if you only use `RequestStreamHandler` or know you don't use any event classes from `aws-lambda-java-events`. This also includes when you are using `aws-serverless-java-container` to run e.g., a Spring Boot application on Lambda.\nFor custom wrappers when using library instrumentation, you can configure the `OTEL_INSTRUMENTATION_AWS_LAMBDA_HANDLER` environment variable to contain your lambda handler method (in the format `package.ClassName::methodName`) and use one of wrappers as your lambda `Handler`.\n",
      "library_link": "https://docs.aws.amazon.com/lambda/latest/dg/java-handler.html",
      "name": "aws-lambda-core-1.0",
      "scope": {
        "name": "io.opentelemetry.aws-lambda-core-1.0"
      },
      "semconv": [],
      "source_path": "instrumentation/aws-lambda/aws-lambda-core-1.0",
      "target_versions": {
        "javaagent": [
          "com.amazonaws:aws-lambda-java-core:[1.0.0,)"
        ],
        "library": [
          "com.amazonaws:aws-lambda-java-core:1.0.0"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "faas.invocation_id",
                  "type": "STRING"
                }
              ],
              "span_kind": "SERVER"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": 10000,
          "description": "Flush timeout in milliseconds.",
          "name": "otel.instrumentation.aws-lambda.flush-timeout",
          "type": "int"
        },
        {
          "default": "CONNECT,DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT,TRACE",
          "description": "Configures the instrumentation to recognize an alternative set of HTTP request methods. All other methods will be treated as `_OTHER`.\n",
          "name": "otel.instrumentation.http.known-methods",
          "type": "list"
        }
      ],
      "description": "This version of the library instrumentation is deprecated, please use the `aws-lambda-events-3.11` library instrumentation instead. This instrumentation builds on top of the `aws-lambda-core-1.0` instrumentation, expanding support to cover the Lambda library, including standard and custom event types.\n",
      "library_link": "https://docs.aws.amazon.com/lambda/latest/dg/java-handler.html",
      "name": "aws-lambda-events-2.2",
      "scope": {
        "name": "io.opentelemetry.aws-lambda-events-2.2"
      },
      "semconv": [
        "Database Client",
        "HTTP",
        "Messaging"
      ],
      "source_path": "instrumentation/aws-lambda/aws-lambda-events-2.2",
      "target_versions": {
        "javaagent": [
          "com.amazonaws:aws-lambda-java-core:[1.0.0,)"
        ],
        "library": [
          "com.amazonaws:aws-lambda-java-core:1.0.0",
          "com.amazonaws:aws-lambda-java-events:2.2.1"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "messaging.operation",
                  "type": "STRING"
                },
                {
                  "name": "messaging.system",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CONSUMER"
            },
            {
              "attributes": [
                {
                  "name": "faas.invocation_id",
                  "type": "STRING"
                },
                {
                  "name": "faas.trigger",
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "user_agent.original",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "SERVER"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": 10000,
          "description": "Flush timeout in milliseconds.",
          "name": "otel.instrumentation.aws-lambda.flush-timeout",
          "type": "int"
        }
      ],
      "description": "This instrumentation builds on top of the `aws-lambda-core-1.0` instrumentation, expanding support to cover the Lambda library, including standard and custom event types.\n",
      "library_link": "https://docs.aws.amazon.com/lambda/latest/dg/java-handler.html",
      "name": "aws-lambda-events-3.11",
      "scope": {
        "name": "io.opentelemetry.aws-lambda-events-3.11"
      },
      "semconv": [
        "Cloud",
        "Database Client",
        "HTTP",
        "Messaging"
      ],
      "source_path": "instrumentation/aws-lambda/aws-lambda-events-3.11",
      "target_versions": {
        "library": [
          "com.amazonaws:aws-lambda-java-core:1.0.0",
          "com.amazonaws:aws-lambda-java-events:3.11.0"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "messaging.destination.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.message.id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.operation",
                  "type": "STRING"
                },
                {
                  "name": "messaging.system",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CONSUMER"
            },
            {
              "attributes": [
                {
                  "name": "cloud.account.id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "cloud.resource_id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "faas.invocation_id",
                  "type": "STRING"
                },
                {
                  "name": "faas.trigger",
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "user_agent.original",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "SERVER"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enables the experimental span attributes `aws.agent`, `aws.bucket.name`, `aws.queue.url`, `aws.queue.name`, `aws.stream.name`, `aws.table.name`, `aws.lambda.function.arn` and `aws.lambda.function.name` for AWS SDK instrumentation.\n",
          "name": "otel.instrumentation.aws-sdk.experimental-span-attributes",
          "type": "boolean"
        },
        {
          "default": "",
          "description": "Allows configuring headers to capture as span attributes.",
          "name": "otel.instrumentation.messaging.experimental.capture-headers",
          "type": "list"
        },
        {
          "default": false,
          "description": "Enables experimental receive telemetry, which will cause consumers to start a new trace, with only a span link connecting it to the producer trace.\n",
          "name": "otel.instrumentation.messaging.experimental.receive-telemetry.enabled",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation covers the AWS SDK 1.11+ client library, enabling messaging and client spans and metrics for calls to AWS services including DynamoDB, EC2, Kinesis, Lambda, RDS, S3, secrets manager, SNS/SQS and step functions.\n",
      "library_link": "https://aws.amazon.com/sdk-for-java/",
      "name": "aws-sdk-1.11",
      "scope": {
        "name": "io.opentelemetry.aws-sdk-1.11"
      },
      "semconv": [
        "Aws",
        "Database Client",
        "HTTP",
        "Messaging"
      ],
      "source_path": "instrumentation/aws-sdk/aws-sdk-1.11",
      "target_versions": {
        "javaagent": [
          "com.amazonaws:aws-java-sdk-core:[1.10.33,)",
          "com.amazonaws:aws-java-sdk-sqs:[1.10.33,)"
        ],
        "library": [
          "com.amazonaws:aws-java-sdk-core:1.11.0",
          "com.amazonaws:aws-java-sdk-sqs:[1.11.106,1.12.583)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "aws.agent",
                  "type": "STRING"
                },
                {
                  "name": "aws.bucket.name",
                  "type": "STRING"
                },
                {
                  "name": "aws.dynamodb.table_names",
                  "semconv": true,
                  "type": "STRING_ARRAY"
                },
                {
                  "name": "aws.lambda.function.arn",
                  "type": "STRING"
                },
                {
                  "name": "aws.lambda.function.name",
                  "type": "STRING"
                },
                {
                  "name": "aws.lambda.resource_mapping.id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "aws.queue.name",
                  "type": "STRING"
                },
                {
                  "name": "aws.queue.url",
                  "type": "STRING"
                },
                {
                  "name": "aws.request_id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "aws.sns.topic.arn",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "aws.step_functions.activity.arn",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "aws.step_functions.state_machine.arn",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "aws.stream.name",
                  "type": "STRING"
                },
                {
                  "name": "aws.table.name",
                  "type": "STRING"
                },
                {
                  "name": "db.operation",
                  "type": "STRING"
                },
                {
                  "name": "db.system",
                  "type": "STRING"
                },
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "messaging.destination.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.service",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.system",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            },
            {
              "attributes": [
                {
                  "name": "aws.agent",
                  "type": "STRING"
                },
                {
                  "name": "aws.queue.url",
                  "type": "STRING"
                },
                {
                  "name": "aws.request_id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "messaging.destination.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.message.id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.operation",
                  "type": "STRING"
                },
                {
                  "name": "messaging.system",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.service",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.system",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CONSUMER"
            }
          ],
          "when": "default"
        },
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of database client operations.",
              "name": "db.client.operation.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "aws.agent",
                  "type": "STRING"
                },
                {
                  "name": "aws.bucket.name",
                  "type": "STRING"
                },
                {
                  "name": "aws.dynamodb.table_names",
                  "semconv": true,
                  "type": "STRING_ARRAY"
                },
                {
                  "name": "aws.lambda.function.arn",
                  "type": "STRING"
                },
                {
                  "name": "aws.lambda.function.name",
                  "type": "STRING"
                },
                {
                  "name": "aws.lambda.resource_mapping.id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "aws.queue.name",
                  "type": "STRING"
                },
                {
                  "name": "aws.queue.url",
                  "type": "STRING"
                },
                {
                  "name": "aws.request_id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "aws.sns.topic.arn",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "aws.step_functions.activity.arn",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "aws.step_functions.state_machine.arn",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "aws.stream.name",
                  "type": "STRING"
                },
                {
                  "name": "aws.table.name",
                  "type": "STRING"
                },
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "messaging.destination.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.service",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.system",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            },
            {
              "attributes": [
                {
                  "name": "aws.agent",
                  "type": "STRING"
                },
                {
                  "name": "aws.queue.url",
                  "type": "STRING"
                },
                {
                  "name": "aws.request_id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "messaging.destination.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.message.id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.operation",
                  "type": "STRING"
                },
                {
                  "name": "messaging.system",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.service",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.system",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CONSUMER"
            }
          ],
          "when": "otel.semconv-stability.opt-in=database"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Determines whether errors returned by each individual HTTP request should be recorded as events for the SDK span.",
          "name": "otel.instrumentation.aws-sdk.experimental-record-individual-http-error",
          "type": "boolean"
        },
        {
          "default": false,
          "description": "Enables experimental span attributes `aws.agent`, `aws.lambda.function.arn` and `aws.lambda.function.name` for AWS SDK instrumentation.\n",
          "name": "otel.instrumentation.aws-sdk.experimental-span-attributes",
          "type": "boolean"
        },
        {
          "default": false,
          "description": "Determines whether the configured TextMapPropagator should be used to inject into supported messaging attributes (for SQS).",
          "name": "otel.instrumentation.aws-sdk.experimental-use-propagator-for-messaging",
          "type": "boolean"
        },
        {
          "default": false,
          "description": "Determines whether Generative AI events include full content of user and assistant messages. Note that full content can have data privacy and size concerns and care should be taken when enabling this\n",
          "name": "otel.instrumentation.genai.capture-message-content",
          "type": "boolean"
        },
        {
          "default": "",
          "description": "Allows configuring headers to capture as span attributes.",
          "name": "otel.instrumentation.messaging.experimental.capture-headers",
          "type": "list"
        },
        {
          "default": false,
          "description": "Enables experimental receive telemetry, which will cause consumers to start a new trace, with only a span link connecting it to the producer trace.\n",
          "name": "otel.instrumentation.messaging.experimental.receive-telemetry.enabled",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation covers the AWS SDK 2.2+ client library, enabling messaging and client spans and metrics for calls to AWS services including DynamoDB, EC2, Kinesis, Lambda, RDS, S3, SNS/SQS and Bedrock.\n",
      "library_link": "https://aws.amazon.com/sdk-for-java/",
      "name": "aws-sdk-2.2",
      "scope": {
        "name": "io.opentelemetry.aws-sdk-2.2"
      },
      "semconv": [
        "Aws",
        "Database Client",
        "Gen Ai",
        "HTTP",
        "Messaging"
      ],
      "source_path": "instrumentation/aws-sdk/aws-sdk-2.2",
      "target_versions": {
        "javaagent": [
          "software.amazon.awssdk:aws-core:[2.2.0,)",
          "software.amazon.awssdk:bedrock-runtime:[2.25.63,)",
          "software.amazon.awssdk:lambda:[2.17.0,)",
          "software.amazon.awssdk:sns:[2.2.0,)",
          "software.amazon.awssdk:sqs:[2.2.0,)"
        ],
        "library": [
          "software.amazon.awssdk:aws-core:2.2.0",
          "software.amazon.awssdk:aws-json-protocol:2.2.0",
          "software.amazon.awssdk:lambda:2.2.0",
          "software.amazon.awssdk:sns:2.2.0",
          "software.amazon.awssdk:sqs:2.2.0"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "gen_ai.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "gen_ai.provider.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "gen_ai.request.model",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "GenAI operation duration.",
              "name": "gen_ai.client.operation.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            },
            {
              "attributes": [
                {
                  "name": "gen_ai.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "gen_ai.provider.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "gen_ai.request.model",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "gen_ai.token.type",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "Measures number of input and output tokens used.",
              "name": "gen_ai.client.token.usage",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "token"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "aws.agent",
                  "type": "STRING"
                },
                {
                  "name": "aws.bucket.name",
                  "type": "STRING"
                },
                {
                  "name": "aws.dynamodb.global_secondary_indexes",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "aws.dynamodb.limit",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "aws.dynamodb.provisioned_throughput.read_capacity_units",
                  "type": "STRING"
                },
                {
                  "name": "aws.dynamodb.provisioned_throughput.write_capacity_units",
                  "type": "STRING"
                },
                {
                  "name": "aws.dynamodb.select",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "aws.lambda.function.arn",
                  "type": "STRING"
                },
                {
                  "name": "aws.lambda.function.name",
                  "type": "STRING"
                },
                {
                  "name": "aws.lambda.resource_mapping.id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "aws.queue.name",
                  "type": "STRING"
                },
                {
                  "name": "aws.queue.url",
                  "type": "STRING"
                },
                {
                  "name": "aws.request_id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "aws.secretsmanager.secret.arn",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "aws.sns.topic.arn",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "aws.step_functions.activity.arn",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "aws.step_functions.state_machine.arn",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "aws.stream.name",
                  "type": "STRING"
                },
                {
                  "name": "aws.table.name",
                  "type": "STRING"
                },
                {
                  "name": "db.operation",
                  "type": "STRING"
                },
                {
                  "name": "db.system",
                  "type": "STRING"
                },
                {
                  "name": "gen_ai.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "gen_ai.provider.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "gen_ai.request.max_tokens",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "gen_ai.request.model",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "gen_ai.request.stop_sequences",
                  "semconv": true,
                  "type": "STRING_ARRAY"
                },
                {
                  "name": "gen_ai.request.temperature",
                  "semconv": true,
                  "type": "DOUBLE"
                },
                {
                  "name": "gen_ai.request.top_p",
                  "semconv": true,
                  "type": "DOUBLE"
                },
                {
                  "name": "gen_ai.response.finish_reasons",
                  "semconv": true,
                  "type": "STRING_ARRAY"
                },
                {
                  "name": "gen_ai.usage.input_tokens",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "gen_ai.usage.output_tokens",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "messaging.destination.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.service",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.system",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            },
            {
              "attributes": [
                {
                  "name": "aws.agent",
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "messaging.batch.message_count",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "messaging.destination.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.message.id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.operation",
                  "type": "STRING"
                },
                {
                  "name": "messaging.system",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.service",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.system",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CONSUMER"
            },
            {
              "attributes": [
                {
                  "name": "aws.agent",
                  "type": "STRING"
                },
                {
                  "name": "aws.queue.url",
                  "type": "STRING"
                },
                {
                  "name": "aws.request_id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "messaging.destination.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.message.id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.operation",
                  "type": "STRING"
                },
                {
                  "name": "messaging.system",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.service",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.system",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "PRODUCER"
            }
          ],
          "when": "default"
        },
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "Duration of database client operations.",
              "name": "db.client.operation.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "aws.agent",
                  "type": "STRING"
                },
                {
                  "name": "aws.bucket.name",
                  "type": "STRING"
                },
                {
                  "name": "aws.dynamodb.global_secondary_indexes",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "aws.dynamodb.limit",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "aws.dynamodb.provisioned_throughput.read_capacity_units",
                  "type": "STRING"
                },
                {
                  "name": "aws.dynamodb.provisioned_throughput.write_capacity_units",
                  "type": "STRING"
                },
                {
                  "name": "aws.dynamodb.select",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "aws.lambda.function.arn",
                  "type": "STRING"
                },
                {
                  "name": "aws.lambda.function.name",
                  "type": "STRING"
                },
                {
                  "name": "aws.lambda.resource_mapping.id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "aws.queue.name",
                  "type": "STRING"
                },
                {
                  "name": "aws.queue.url",
                  "type": "STRING"
                },
                {
                  "name": "aws.request_id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "aws.secretsmanager.secret.arn",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "aws.sns.topic.arn",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "aws.step_functions.activity.arn",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "aws.step_functions.state_machine.arn",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "aws.stream.name",
                  "type": "STRING"
                },
                {
                  "name": "aws.table.name",
                  "type": "STRING"
                },
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "messaging.destination.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.service",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.system",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            },
            {
              "attributes": [
                {
                  "name": "aws.agent",
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "messaging.batch.message_count",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "messaging.destination.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.message.id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.operation",
                  "type": "STRING"
                },
                {
                  "name": "messaging.system",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.service",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.system",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CONSUMER"
            },
            {
              "attributes": [
                {
                  "name": "aws.agent",
                  "type": "STRING"
                },
                {
                  "name": "aws.queue.url",
                  "type": "STRING"
                },
                {
                  "name": "aws.request_id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "messaging.destination.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.message.id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.operation",
                  "type": "STRING"
                },
                {
                  "name": "messaging.system",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.service",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.system",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "PRODUCER"
            }
          ],
          "when": "otel.semconv-stability.opt-in=database"
        }
      ]
    },
    {
      "description": "This instrumentation enables context propagation for the Azure Core library, it does not emit any telemetry on its own.",
      "library_link": "https://learn.microsoft.com/en-us/java/api/overview/azure/core-readme?view=azure-java-stable",
      "name": "azure-core-1.14",
      "scope": {
        "name": "io.opentelemetry.azure-core-1.14"
      },
      "semconv": [],
      "source_path": "instrumentation/azure-core/azure-core-1.14",
      "target_versions": {
        "javaagent": [
          "com.azure:azure-core:[1.14.0,1.19.0)"
        ]
      }
    },
    {
      "description": "This instrumentation enables context propagation for the Azure Core library, it does not emit any telemetry on its own.",
      "library_link": "https://learn.microsoft.com/en-us/java/api/overview/azure/core-readme?view=azure-java-stable",
      "name": "azure-core-1.19",
      "scope": {
        "name": "io.opentelemetry.azure-core-1.19"
      },
      "semconv": [],
      "source_path": "instrumentation/azure-core/azure-core-1.19",
      "target_versions": {
        "javaagent": [
          "com.azure:azure-core:[1.19.0,1.36.0)"
        ]
      }
    },
    {
      "description": "This instrumentation enables context propagation for the Azure Core library, it does not emit any telemetry on its own.",
      "library_link": "https://learn.microsoft.com/en-us/java/api/overview/azure/core-readme?view=azure-java-stable",
      "name": "azure-core-1.36",
      "scope": {
        "name": "io.opentelemetry.azure-core-1.36"
      },
      "semconv": [],
      "source_path": "instrumentation/azure-core/azure-core-1.36",
      "target_versions": {
        "javaagent": [
          "com.azure:azure-core:[1.36.0,)"
        ]
      }
    },
    {
      "description": "The c3p0 instrumentation provides connection pool metrics for c3p0 data sources.",
      "library_link": "https://github.com/swaldman/c3p0",
      "name": "c3p0-0.9",
      "scope": {
        "name": "io.opentelemetry.c3p0-0.9"
      },
      "semconv": [
        "Database Client"
      ],
      "source_path": "instrumentation/c3p0-0.9",
      "target_versions": {
        "javaagent": [
          "com.mchange:c3p0:(,)"
        ],
        "library": [
          "com.mchange:c3p0:0.9.2"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                }
              ],
              "description": "The number of pending requests for an open connection, cumulative for the entire pool.",
              "name": "db.client.connections.pending_requests",
              "type": "LONG_SUM",
              "unit": "requests"
            },
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                },
                {
                  "name": "state",
                  "type": "STRING"
                }
              ],
              "description": "The number of connections that are currently in state described by the state attribute.",
              "name": "db.client.connections.usage",
              "type": "LONG_SUM",
              "unit": "connections"
            }
          ],
          "when": "default"
        },
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.client.connection.state",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The number of connections that are currently in state described by the state attribute.",
              "name": "db.client.connection.count",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "connection"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The number of current pending requests for an open connection.",
              "name": "db.client.connection.pending_requests",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "request"
            }
          ],
          "when": "otel.semconv-stability.opt-in=database"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enable the capture of experimental `camel.uri`, `camel.kafka.partitionKey`, `camel.kafka.key` and `camel.kafka.offset` span attributes.\n",
          "name": "otel.instrumentation.camel.experimental-span-attributes",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables tracing for Apache Camel 2.x applications by generating spans for each route execution. For Camel versions 3.5 and newer, users should instead use the native 'camel-opentelemetry' component provided directly by the Camel project.\n",
      "library_link": "https://camel.apache.org/",
      "name": "camel-2.20",
      "scope": {
        "name": "io.opentelemetry.camel-2.20"
      },
      "semconv": [
        "Database Client",
        "HTTP",
        "Messaging"
      ],
      "source_path": "instrumentation/camel-2.20",
      "target_versions": {
        "javaagent": [
          "org.apache.camel:camel-core:[2.19,3)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.name",
                  "type": "STRING"
                },
                {
                  "name": "db.statement",
                  "type": "STRING"
                },
                {
                  "name": "db.system",
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            },
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.destination.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.message.id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "INTERNAL"
            },
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "SERVER"
            }
          ],
          "when": "default"
        },
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "camel.uri",
                  "type": "STRING"
                },
                {
                  "name": "db.name",
                  "type": "STRING"
                },
                {
                  "name": "db.statement",
                  "type": "STRING"
                },
                {
                  "name": "db.system",
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            },
            {
              "attributes": [
                {
                  "name": "camel.uri",
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.destination.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.message.id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "INTERNAL"
            },
            {
              "attributes": [
                {
                  "name": "camel.uri",
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "SERVER"
            }
          ],
          "when": "otel.instrumentation.camel.experimental-span-attributes=true"
        },
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.namespace",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.query.text",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            },
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.destination.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.message.id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "INTERNAL"
            },
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "SERVER"
            }
          ],
          "when": "otel.semconv-stability.opt-in=database"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": true,
          "description": "Enables statement sanitization for database queries.",
          "name": "otel.instrumentation.common.db-statement-sanitizer.enabled",
          "type": "boolean"
        }
      ],
      "description": "Instruments the Cassandra database client, providing database client spans and metrics for Cassandra queries.\n",
      "library_link": "https://github.com/apache/cassandra-java-driver",
      "name": "cassandra-3.0",
      "scope": {
        "name": "io.opentelemetry.cassandra-3.0"
      },
      "semconv": [
        "Database Client",
        "Network"
      ],
      "source_path": "instrumentation/cassandra/cassandra-3.0",
      "target_versions": {
        "javaagent": [
          "com.datastax.cassandra:cassandra-driver-core:[3.0,4.0)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.cassandra.table",
                  "type": "STRING"
                },
                {
                  "name": "db.name",
                  "type": "STRING"
                },
                {
                  "name": "db.operation",
                  "type": "STRING"
                },
                {
                  "name": "db.statement",
                  "type": "STRING"
                },
                {
                  "name": "db.system",
                  "type": "STRING"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        },
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.collection.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.namespace",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.query.text",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "otel.semconv-stability.opt-in=database"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": true,
          "description": "Enables statement sanitization for database queries.",
          "name": "otel.instrumentation.common.db-statement-sanitizer.enabled",
          "type": "boolean"
        }
      ],
      "description": "Instruments the Cassandra database client, providing database client spans and metrics for Cassandra queries.\n",
      "library_link": "https://github.com/apache/cassandra-java-driver",
      "name": "cassandra-4.0",
      "scope": {
        "name": "io.opentelemetry.cassandra-4.0"
      },
      "semconv": [
        "Cassandra",
        "Database Client",
        "Network"
      ],
      "source_path": "instrumentation/cassandra/cassandra-4.0",
      "target_versions": {
        "javaagent": [
          "com.datastax.oss:java-driver-core:[4.0,4.4)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.cassandra.consistency_level",
                  "type": "STRING"
                },
                {
                  "name": "db.cassandra.coordinator.dc",
                  "type": "STRING"
                },
                {
                  "name": "db.cassandra.coordinator.id",
                  "type": "STRING"
                },
                {
                  "name": "db.cassandra.idempotence",
                  "type": "BOOLEAN"
                },
                {
                  "name": "db.cassandra.page_size",
                  "type": "LONG"
                },
                {
                  "name": "db.cassandra.speculative_execution_count",
                  "type": "LONG"
                },
                {
                  "name": "db.cassandra.table",
                  "type": "STRING"
                },
                {
                  "name": "db.name",
                  "type": "STRING"
                },
                {
                  "name": "db.operation",
                  "type": "STRING"
                },
                {
                  "name": "db.statement",
                  "type": "STRING"
                },
                {
                  "name": "db.system",
                  "type": "STRING"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        },
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "cassandra.consistency.level",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "cassandra.coordinator.dc",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "cassandra.coordinator.id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "cassandra.page.size",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "cassandra.query.idempotent",
                  "semconv": true,
                  "type": "BOOLEAN"
                },
                {
                  "name": "cassandra.speculative_execution.count",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "db.collection.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.namespace",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.query.text",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "otel.semconv-stability.opt-in=database"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": true,
          "description": "Enables statement sanitization for database queries.",
          "name": "otel.instrumentation.common.db-statement-sanitizer.enabled",
          "type": "boolean"
        }
      ],
      "description": "Instruments the Cassandra database client, providing database client spans and metrics for Cassandra queries.\n",
      "library_link": "https://github.com/apache/cassandra-java-driver",
      "name": "cassandra-4.4",
      "scope": {
        "name": "io.opentelemetry.cassandra-4.4"
      },
      "semconv": [
        "Cassandra",
        "Database Client",
        "Network"
      ],
      "source_path": "instrumentation/cassandra/cassandra-4.4",
      "target_versions": {
        "javaagent": [
          "com.datastax.oss:java-driver-core:[4.4,]"
        ],
        "library": [
          "com.datastax.oss:java-driver-core:4.4.0"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.cassandra.consistency_level",
                  "type": "STRING"
                },
                {
                  "name": "db.cassandra.coordinator.dc",
                  "type": "STRING"
                },
                {
                  "name": "db.cassandra.coordinator.id",
                  "type": "STRING"
                },
                {
                  "name": "db.cassandra.idempotence",
                  "type": "BOOLEAN"
                },
                {
                  "name": "db.cassandra.page_size",
                  "type": "LONG"
                },
                {
                  "name": "db.cassandra.speculative_execution_count",
                  "type": "LONG"
                },
                {
                  "name": "db.cassandra.table",
                  "type": "STRING"
                },
                {
                  "name": "db.name",
                  "type": "STRING"
                },
                {
                  "name": "db.operation",
                  "type": "STRING"
                },
                {
                  "name": "db.statement",
                  "type": "STRING"
                },
                {
                  "name": "db.system",
                  "type": "STRING"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        },
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "cassandra.consistency.level",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "cassandra.coordinator.dc",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "cassandra.coordinator.id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "cassandra.page.size",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "cassandra.query.idempotent",
                  "semconv": true,
                  "type": "BOOLEAN"
                },
                {
                  "name": "cassandra.speculative_execution.count",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "db.collection.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.namespace",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.query.text",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "otel.semconv-stability.opt-in=database"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": true,
          "description": "Enables statement sanitization for database queries.",
          "name": "otel.instrumentation.common.db-statement-sanitizer.enabled",
          "type": "boolean"
        }
      ],
      "description": "Instruments the V1 ClickHouseClient, providing database client spans and metrics.",
      "library_link": "https://github.com/ClickHouse/clickhouse-java",
      "name": "clickhouse-client-0.5",
      "scope": {
        "name": "io.opentelemetry.clickhouse-client-0.5"
      },
      "semconv": [
        "Database Client"
      ],
      "source_path": "instrumentation/clickhouse-client-0.5",
      "target_versions": {
        "javaagent": [
          "com.clickhouse.client:clickhouse-client:[0.5.0,)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.name",
                  "type": "STRING"
                },
                {
                  "name": "db.operation",
                  "type": "STRING"
                },
                {
                  "name": "db.statement",
                  "type": "STRING"
                },
                {
                  "name": "db.system",
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        },
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "db.namespace",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of database client operations.",
              "name": "db.client.operation.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.namespace",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.query.text",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.response.status_code",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "otel.semconv-stability.opt-in=database"
        }
      ]
    },
    {
      "description": "This instrumentation enables database client spans and database client metrics for Couchbase 2.0 operations. It automatically traces key-value operations (get, upsert, replace, remove), view queries, N1QL queries, and cluster management operations.\n",
      "library_link": "https://github.com/couchbase/couchbase-java-client",
      "name": "couchbase-2.0",
      "scope": {
        "name": "io.opentelemetry.couchbase-2.0"
      },
      "semconv": [
        "Database Client"
      ],
      "source_path": "instrumentation/couchbase/couchbase-2.0",
      "target_versions": {
        "javaagent": [
          "com.couchbase.client:java-client:[2,3)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.name",
                  "type": "STRING"
                },
                {
                  "name": "db.operation",
                  "type": "STRING"
                },
                {
                  "name": "db.statement",
                  "type": "STRING"
                },
                {
                  "name": "db.system",
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        },
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "Duration of database client operations.",
              "name": "db.client.operation.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.namespace",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.query.text",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "otel.semconv-stability.opt-in=database"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enables experimental span attributes `couchbase.operation_id` and `couchbase.local.address`. Different operation types receive different experimental attributes.\n",
          "name": "otel.instrumentation.couchbase.experimental-span-attributes",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables database client spans and database client metrics for Couchbase 2.6 operations. It automatically traces key-value operations (get, upsert, replace, remove), view queries, N1QL queries, and cluster management operations.\n",
      "library_link": "https://github.com/couchbase/couchbase-java-client",
      "name": "couchbase-2.6",
      "scope": {
        "name": "io.opentelemetry.couchbase-2.6"
      },
      "semconv": [
        "Database Client",
        "Network"
      ],
      "source_path": "instrumentation/couchbase/couchbase-2.6",
      "target_versions": {
        "javaagent": [
          "com.couchbase.client:java-client:[2.6.0,3)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.name",
                  "type": "STRING"
                },
                {
                  "name": "db.operation",
                  "type": "STRING"
                },
                {
                  "name": "db.statement",
                  "type": "STRING"
                },
                {
                  "name": "db.system",
                  "type": "STRING"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.type",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        },
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "couchbase.local.address",
                  "type": "STRING"
                },
                {
                  "name": "couchbase.operation_id",
                  "type": "STRING"
                },
                {
                  "name": "db.name",
                  "type": "STRING"
                },
                {
                  "name": "db.operation",
                  "type": "STRING"
                },
                {
                  "name": "db.statement",
                  "type": "STRING"
                },
                {
                  "name": "db.system",
                  "type": "STRING"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.type",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "otel.instrumentation.couchbase.experimental-span-attributes=true"
        },
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of database client operations.",
              "name": "db.client.operation.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.namespace",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.query.text",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.type",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "otel.semconv-stability.opt-in=database"
        }
      ]
    },
    {
      "description": "Couchbase instrumentation is owned by the Couchbase project for versions 3+. This instrumentation automatically configures the instrumentation provided by the Couchbase library.\n",
      "library_link": "https://github.com/couchbase/couchbase-java-client",
      "name": "couchbase-3.1",
      "scope": {
        "name": "io.opentelemetry.couchbase-3.1"
      },
      "semconv": [],
      "source_path": "instrumentation/couchbase/couchbase-3.1",
      "target_versions": {
        "javaagent": [
          "com.couchbase.client:java-client:[3.1,3.1.6)"
        ]
      }
    },
    {
      "description": "Couchbase instrumentation is owned by the Couchbase project for versions 3+. This instrumentation automatically configures the instrumentation provided by the Couchbase library.\n",
      "library_link": "https://github.com/couchbase/couchbase-java-client",
      "name": "couchbase-3.1.6",
      "scope": {
        "name": "io.opentelemetry.couchbase-3.1.6"
      },
      "semconv": [],
      "source_path": "instrumentation/couchbase/couchbase-3.1.6",
      "target_versions": {
        "javaagent": [
          "com.couchbase.client:java-client:[3.1.6,3.2.0)"
        ]
      }
    },
    {
      "description": "Couchbase instrumentation is owned by the Couchbase project for versions 3+. This instrumentation automatically configures the instrumentation provided by the Couchbase library.\n",
      "library_link": "https://github.com/couchbase/couchbase-java-client",
      "name": "couchbase-3.2",
      "scope": {
        "name": "io.opentelemetry.couchbase-3.2"
      },
      "semconv": [],
      "source_path": "instrumentation/couchbase/couchbase-3.2",
      "target_versions": {
        "javaagent": [
          "com.couchbase.client:java-client:[3.2.0,)"
        ]
      }
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enables the dropwizard metrics instrumentation.",
          "name": "otel.instrumentation.dropwizard-metrics.enabled",
          "type": "boolean"
        }
      ],
      "description": "The dropwizard-metrics instrumentation for the dropwizard/codahale metrics library produces OpenTelemetry compliant versions of the metrics generated by the Dropwizard MetricRegistry.\nThe Dropwizard metrics API does not have a concept of metric labels/tags/attributes, thus the data produced by this integration might be of very low quality, depending on how the API is used in the instrumented application.\n",
      "disabled_by_default": true,
      "library_link": "https://metrics.dropwizard.io/4.2.0/",
      "name": "dropwizard-metrics-4.0",
      "scope": {
        "name": "io.opentelemetry.dropwizard-metrics-4.0"
      },
      "semconv": [],
      "source_path": "instrumentation/dropwizard/dropwizard-metrics-4.0",
      "target_versions": {
        "javaagent": [
          "io.dropwizard.metrics:metrics-core:[4.0.0,)"
        ]
      }
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enables the creation of experimental view (INTERNAL) spans.",
          "name": "otel.instrumentation.common.experimental.view-telemetry.enabled",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables the creation of spans for Dropwizard views.",
      "library_link": "https://www.dropwizard.io/en/latest/manual/views.html",
      "name": "dropwizard-views-0.7",
      "scope": {
        "name": "io.opentelemetry.dropwizard-views-0.7"
      },
      "semconv": [],
      "source_path": "instrumentation/dropwizard/dropwizard-views-0.7",
      "target_versions": {
        "javaagent": [
          "io.dropwizard:dropwizard-views:(,3.0.0)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [],
              "span_kind": "INTERNAL"
            }
          ],
          "when": "otel.instrumentation.common.experimental.view-telemetry.enabled=true"
        }
      ]
    },
    {
      "description": "This instrumentation extends the elasticsearch-rest-7.0 instrumentation by adding additional `db.elasticsearch.path_parts.id` and `db.elasticsearch.path_parts.index` attributes to Elasticsearch database client spans. Versions 8.10 and later of the client have native support for OpenTelemetry.\n",
      "library_link": "https://www.elastic.co/docs/reference/elasticsearch/clients/java",
      "name": "elasticsearch-api-client-7.16",
      "scope": {
        "name": "io.opentelemetry.elasticsearch-api-client-7.16"
      },
      "semconv": [
        "Database Client"
      ],
      "source_path": "instrumentation/elasticsearch/elasticsearch-api-client-7.16",
      "target_versions": {
        "javaagent": [
          "co.elastic.clients:elasticsearch-java:[7.16,7.17.20)",
          "co.elastic.clients:elasticsearch-java:[8.0.0,8.10)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.elasticsearch.path_parts.id",
                  "type": "STRING"
                },
                {
                  "name": "db.elasticsearch.path_parts.index",
                  "type": "STRING"
                },
                {
                  "name": "db.operation",
                  "type": "STRING"
                },
                {
                  "name": "db.system",
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        },
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of database client operations.",
              "name": "db.client.operation.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.elasticsearch.path_parts.id",
                  "type": "STRING"
                },
                {
                  "name": "db.elasticsearch.path_parts.index",
                  "type": "STRING"
                },
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "otel.semconv-stability.opt-in=database"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enable the capture of search query bodies. It is important to note that Elasticsearch queries may contain personal or sensitive information.\n",
          "name": "otel.instrumentation.elasticsearch.capture-search-query",
          "type": "boolean"
        },
        {
          "default": "CONNECT,DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT,TRACE",
          "description": "Configures the instrumentation to recognize an alternative set of HTTP request methods. All other methods will be treated as `_OTHER`.\n",
          "name": "otel.instrumentation.http.known-methods",
          "type": "list"
        }
      ],
      "description": "This instrumentation enables database client spans and database client metrics for Elasticsearch REST clients.",
      "library_link": "https://www.elastic.co/guide/en/elasticsearch/client/java-rest",
      "name": "elasticsearch-rest-5.0",
      "scope": {
        "name": "io.opentelemetry.elasticsearch-rest-5.0"
      },
      "semconv": [
        "Database Client"
      ],
      "source_path": "instrumentation/elasticsearch/elasticsearch-rest-5.0",
      "target_versions": {
        "javaagent": [
          "org.elasticsearch.client:elasticsearch-rest-client:[5.0,6.4)",
          "org.elasticsearch.client:rest:[5.0,6.4)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.system",
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        },
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of database client operations.",
              "name": "db.client.operation.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "otel.semconv-stability.opt-in=database"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enable the capture of search query bodies. It is important to note that Elasticsearch queries may contain personal or sensitive information.\n",
          "name": "otel.instrumentation.elasticsearch.capture-search-query",
          "type": "boolean"
        },
        {
          "default": "CONNECT,DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT,TRACE",
          "description": "Configures the instrumentation to recognize an alternative set of HTTP request methods. All other methods will be treated as `_OTHER`.\n",
          "name": "otel.instrumentation.http.known-methods",
          "type": "list"
        }
      ],
      "description": "This instrumentation enables database client spans and database client metrics for Elasticsearch REST clients.",
      "library_link": "https://www.elastic.co/guide/en/elasticsearch/client/java-rest",
      "name": "elasticsearch-rest-6.4",
      "scope": {
        "name": "io.opentelemetry.elasticsearch-rest-6.4"
      },
      "semconv": [
        "Database Client"
      ],
      "source_path": "instrumentation/elasticsearch/elasticsearch-rest-6.4",
      "target_versions": {
        "javaagent": [
          "org.elasticsearch.client:elasticsearch-rest-client:[6.4,7.0)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.system",
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        },
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of database client operations.",
              "name": "db.client.operation.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "otel.semconv-stability.opt-in=database"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enable the capture of search query bodies. It is important to note that Elasticsearch queries may contain personal or sensitive information.\n",
          "name": "otel.instrumentation.elasticsearch.capture-search-query",
          "type": "boolean"
        },
        {
          "default": "CONNECT,DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT,TRACE",
          "description": "Configures the instrumentation to recognize an alternative set of HTTP request methods. All other methods will be treated as `_OTHER`.\n",
          "name": "otel.instrumentation.http.known-methods",
          "type": "list"
        }
      ],
      "description": "This instrumentation enables database client spans and database client metrics for Elasticsearch REST clients.",
      "library_link": "https://www.elastic.co/guide/en/elasticsearch/client/java-rest",
      "name": "elasticsearch-rest-7.0",
      "scope": {
        "name": "io.opentelemetry.elasticsearch-rest-7.0"
      },
      "semconv": [
        "Database Client"
      ],
      "source_path": "instrumentation/elasticsearch/elasticsearch-rest-7.0",
      "target_versions": {
        "javaagent": [
          "org.elasticsearch.client:elasticsearch-rest-client:[7.0,)"
        ],
        "library": [
          "org.elasticsearch.client:elasticsearch-rest-client:7.0.0"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.system",
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        },
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of database client operations.",
              "name": "db.client.operation.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "otel.semconv-stability.opt-in=database"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enable the capture of the experimental span attributes `elasticsearch.action`, `elasticsearch.id`, `elasticsearch.request`, `elasticsearch.request.indices`, `elasticsearch.request.write.routing`, `elasticsearch.request.write.type`, `elasticsearch.response.status`, `elasticsearch.shard.replication.failed`, `elasticsearch.shard.replication.successful`, `elasticsearch.shard.replication.total`, `elasticsearch.type`, and `elasticsearch.version`.\n",
          "name": "otel.instrumentation.elasticsearch.experimental-span-attributes",
          "type": "boolean"
        },
        {
          "default": "CONNECT,DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT,TRACE",
          "description": "Configures the instrumentation to recognize an alternative set of HTTP request methods. All other methods will be treated as `_OTHER`.\n",
          "name": "otel.instrumentation.http.known-methods",
          "type": "list"
        }
      ],
      "description": "This instrumentation enables database client spans and database client metrics for Elasticsearch transport client requests. Each call produces a span named after the Elasticsearch action, enriched with transport-specific attributes.\n",
      "library_link": "https://www.elastic.co/guide/en/elasticsearch/client/java-api/",
      "name": "elasticsearch-transport-5.0",
      "scope": {
        "name": "io.opentelemetry.elasticsearch-transport-5.0"
      },
      "semconv": [
        "Database Client"
      ],
      "source_path": "instrumentation/elasticsearch/elasticsearch-transport-5.0",
      "target_versions": {
        "javaagent": [
          "org.elasticsearch.client:transport:[5.0.0,5.3.0)",
          "org.elasticsearch:elasticsearch:[5.0.0,5.3.0)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.operation",
                  "type": "STRING"
                },
                {
                  "name": "db.system",
                  "type": "STRING"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        },
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.operation",
                  "type": "STRING"
                },
                {
                  "name": "db.system",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.action",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.id",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.request",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.request.indices",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.request.write.type",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.response.status",
                  "type": "LONG"
                },
                {
                  "name": "elasticsearch.shard.replication.failed",
                  "type": "LONG"
                },
                {
                  "name": "elasticsearch.shard.replication.successful",
                  "type": "LONG"
                },
                {
                  "name": "elasticsearch.shard.replication.total",
                  "type": "LONG"
                },
                {
                  "name": "elasticsearch.type",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.version",
                  "type": "LONG"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "otel.instrumentation.elasticsearch.experimental-span-attributes=true"
        },
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "Duration of database client operations.",
              "name": "db.client.operation.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "otel.semconv-stability.opt-in=database"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enable the capture of `elasticsearch.action`, `elasticsearch.id`, `elasticsearch.request`, `elasticsearch.request.indices`, `elasticsearch.request.search.types`, `elasticsearch.request.write.type`, `elasticsearch.request.write.version`, `elasticsearch.response.status`, `elasticsearch.shard.broadcast.failed`, `elasticsearch.shard.broadcast.successful`, `elasticsearch.shard.broadcast.total`, `elasticsearch.shard.replication.failed`, `elasticsearch.shard.replication.successful`, `elasticsearch.shard.replication.total`, `elasticsearch.type`, and `elasticsearch.version` experimental span attributes.\n",
          "name": "otel.instrumentation.elasticsearch.experimental-span-attributes",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables database client spans and database client metrics for Elasticsearch transport client requests. Each call produces a span named after the Elasticsearch action, enriched with transport-specific attributes.\n",
      "library_link": "https://www.elastic.co/guide/en/elasticsearch/client/java-api/",
      "name": "elasticsearch-transport-5.3",
      "scope": {
        "name": "io.opentelemetry.elasticsearch-transport-5.3"
      },
      "semconv": [
        "Database Client"
      ],
      "source_path": "instrumentation/elasticsearch/elasticsearch-transport-5.3",
      "target_versions": {
        "javaagent": [
          "org.elasticsearch.client:transport:[5.3.0,6.0.0)",
          "org.elasticsearch:elasticsearch:[5.3.0,6.0.0)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.operation",
                  "type": "STRING"
                },
                {
                  "name": "db.system",
                  "type": "STRING"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        },
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.operation",
                  "type": "STRING"
                },
                {
                  "name": "db.system",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.action",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.id",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.request",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.request.indices",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.request.search.types",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.request.write.type",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.request.write.version",
                  "type": "LONG"
                },
                {
                  "name": "elasticsearch.response.status",
                  "type": "LONG"
                },
                {
                  "name": "elasticsearch.shard.broadcast.failed",
                  "type": "LONG"
                },
                {
                  "name": "elasticsearch.shard.broadcast.successful",
                  "type": "LONG"
                },
                {
                  "name": "elasticsearch.shard.broadcast.total",
                  "type": "LONG"
                },
                {
                  "name": "elasticsearch.shard.replication.failed",
                  "type": "LONG"
                },
                {
                  "name": "elasticsearch.shard.replication.successful",
                  "type": "LONG"
                },
                {
                  "name": "elasticsearch.shard.replication.total",
                  "type": "LONG"
                },
                {
                  "name": "elasticsearch.type",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.version",
                  "type": "LONG"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "otel.instrumentation.elasticsearch.experimental-span-attributes=true"
        },
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "Duration of database client operations.",
              "name": "db.client.operation.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "otel.semconv-stability.opt-in=database"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enable the capture of `elasticsearch.action`, `elasticsearch.id`, `elasticsearch.request`, `elasticsearch.request.indices`, `elasticsearch.request.write.type`, `elasticsearch.request.write.version`, `elasticsearch.response.status`, `elasticsearch.shard.replication.failed`, `elasticsearch.shard.replication.successful`, `elasticsearch.shard.replication.total`, `elasticsearch.type`, and `elasticsearch.version` experimental span attributes.\n",
          "name": "otel.instrumentation.elasticsearch.experimental-span-attributes",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables database client spans and database client metrics for Elasticsearch transport client requests. Each call produces a span named after the Elasticsearch action, enriched with transport-specific attributes.\n",
      "library_link": "https://www.elastic.co/guide/en/elasticsearch/client/java-api/",
      "name": "elasticsearch-transport-6.0",
      "scope": {
        "name": "io.opentelemetry.elasticsearch-transport-6.0"
      },
      "semconv": [
        "Database Client",
        "Network"
      ],
      "source_path": "instrumentation/elasticsearch/elasticsearch-transport-6.0",
      "target_versions": {
        "javaagent": [
          "org.elasticsearch.client:transport:[6.0.0,)",
          "org.elasticsearch:elasticsearch:[6.0.0,8.0.0)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.operation",
                  "type": "STRING"
                },
                {
                  "name": "db.system",
                  "type": "STRING"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.type",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        },
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.operation",
                  "type": "STRING"
                },
                {
                  "name": "db.system",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.action",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.id",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.request",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.request.indices",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.request.write.type",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.request.write.version",
                  "type": "LONG"
                },
                {
                  "name": "elasticsearch.response.status",
                  "type": "LONG"
                },
                {
                  "name": "elasticsearch.shard.replication.failed",
                  "type": "LONG"
                },
                {
                  "name": "elasticsearch.shard.replication.successful",
                  "type": "LONG"
                },
                {
                  "name": "elasticsearch.shard.replication.total",
                  "type": "LONG"
                },
                {
                  "name": "elasticsearch.type",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.version",
                  "type": "LONG"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.type",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "otel.instrumentation.elasticsearch.experimental-span-attributes=true"
        },
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "Duration of database client operations.",
              "name": "db.client.operation.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.type",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "otel.semconv-stability.opt-in=database"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": "",
          "description": "List of Executor subclasses to be instrumented.",
          "name": "otel.instrumentation.executors.include",
          "type": "list"
        },
        {
          "default": false,
          "description": "Whether to instrument all classes that implement the Executor interface.",
          "name": "otel.instrumentation.executors.include-all",
          "type": "boolean"
        }
      ],
      "description": "The executor instrumentation ensures that context is automatically propagated when using common Java executors (e.g., ThreadPoolExecutor, ScheduledThreadPoolExecutor, ForkJoinPool). When a task is submitted, the current context is captured and bound to the task. Then, when the task eventually runs, even if it\u2019s on a different thread, the instrumentation reactivates that context, enabling consistent correlation across concurrent and asynchronous workflows.\n",
      "name": "executors",
      "scope": {
        "name": "io.opentelemetry.executors"
      },
      "semconv": [],
      "source_path": "instrumentation/executors",
      "target_versions": {
        "javaagent": [
          "Java 8+"
        ]
      }
    },
    {
      "description": "This instrumentation for Finagle HTTP clients and servers ensures that telemetry is correctly generated by the underlying Netty instrumentation. It augments existing telemetry by bridging the gap between Finagle's abstractions and Netty's pipeline, primarily for context propagation.\n",
      "name": "finagle-http-23.11",
      "scope": {
        "name": "io.opentelemetry.finagle-http-23.11"
      },
      "semconv": [],
      "source_path": "instrumentation/finagle-http-23.11",
      "target_versions": {
        "javaagent": [
          "com.twitter:finagle-http_2.12:[23.11.0,]",
          "com.twitter:finagle-http_2.13:[23.11.0,]"
        ]
      }
    },
    {
      "description": "This instrumentation for the Finatra web framework augments the telemetry generated by the underlying Netty instrumentation. It provides more specific, high-level context, such as route information, to the spans generated by Netty.",
      "name": "finatra-2.9",
      "scope": {
        "name": "io.opentelemetry.finatra-2.9"
      },
      "semconv": [
        "Code"
      ],
      "source_path": "instrumentation/finatra-2.9",
      "target_versions": {
        "javaagent": [
          "com.twitter:finatra-http_2.11:[2.9.0,]",
          "com.twitter:finatra-http_2.12:[2.9.0,]"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "code.function",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "code.namespace",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "INTERNAL"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": true,
          "description": "Enables statement sanitization for database queries.",
          "name": "otel.instrumentation.common.db-statement-sanitizer.enabled",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables database client spans and database client metrics for Apache Geode cache operations.",
      "name": "geode-1.4",
      "scope": {
        "name": "io.opentelemetry.geode-1.4"
      },
      "semconv": [
        "Database Client"
      ],
      "source_path": "instrumentation/geode-1.4",
      "target_versions": {
        "javaagent": [
          "org.apache.geode:geode-core:[1.4.0,)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.name",
                  "type": "STRING"
                },
                {
                  "name": "db.operation",
                  "type": "STRING"
                },
                {
                  "name": "db.statement",
                  "type": "STRING"
                },
                {
                  "name": "db.system",
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        },
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "db.namespace",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "Duration of database client operations.",
              "name": "db.client.operation.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.namespace",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.query.text",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "otel.semconv-stability.opt-in=database"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": "",
          "description": "Used to specify a mapping from host names or IP addresses to peer services.",
          "name": "otel.instrumentation.common.peer-service-mapping",
          "type": "map"
        },
        {
          "default": "",
          "description": "List of HTTP request headers to capture in HTTP client telemetry.",
          "name": "otel.instrumentation.http.client.capture-request-headers",
          "type": "list"
        },
        {
          "default": "",
          "description": "List of HTTP response headers to capture in HTTP client telemetry.",
          "name": "otel.instrumentation.http.client.capture-response-headers",
          "type": "list"
        },
        {
          "default": false,
          "description": "Enable the capture of experimental HTTP client telemetry. Adds the `http.request.body.size` and `http.response.body.size` attributes to spans, and records `http.client.request.size` and `http.client.response.size` metrics.\n",
          "name": "otel.instrumentation.http.client.emit-experimental-telemetry",
          "type": "boolean"
        },
        {
          "default": true,
          "description": "Redact sensitive URL parameters. See https://opentelemetry.io/docs/specs/semconv/http/http-spans.",
          "name": "otel.instrumentation.http.client.experimental.redact-query-parameters",
          "type": "boolean"
        },
        {
          "default": "CONNECT,DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT,TRACE",
          "description": "Configures the instrumentation to recognize an alternative set of HTTP request methods. All other methods will be treated as `_OTHER`.\n",
          "name": "otel.instrumentation.http.known-methods",
          "type": "list"
        }
      ],
      "description": "This instrumentation enables HTTP client spans and HTTP client metrics for Google HTTP Client requests.",
      "library_link": "https://github.com/googleapis/google-http-java-client",
      "name": "google-http-client-1.19",
      "scope": {
        "name": "io.opentelemetry.google-http-client-1.19"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/google-http-client-1.19",
      "target_versions": {
        "javaagent": [
          "com.google.http-client:google-http-client:[1.19.0,)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enables the creation of experimental controller (INTERNAL) spans.",
          "name": "otel.instrumentation.common.experimental.controller-telemetry.enabled",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enriches existing HTTP server spans with HTTP route information, and optionally enables experimental controller (INTERNAL) spans for Grails applications.\n",
      "name": "grails-3.0",
      "scope": {
        "name": "io.opentelemetry.grails-3.0"
      },
      "semconv": [],
      "source_path": "instrumentation/grails-3.0",
      "target_versions": {
        "javaagent": [
          "org.grails:grails-web-url-mappings:[3.0,)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [],
              "span_kind": "INTERNAL"
            }
          ],
          "when": "otel.instrumentation.common.experimental.controller-telemetry.enabled=true"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Whether GraphQL operation name is added to the span name. WARNING: The GraphQL operation name is provided by the client and can have high cardinality. Use only when the server is not exposed to malicious clients.\n",
          "name": "otel.instrumentation.graphql.add-operation-name-to-span-name.enabled",
          "type": "boolean"
        },
        {
          "default": true,
          "description": "Enables sanitization of sensitive information from queries so they aren't added as span attributes.",
          "name": "otel.instrumentation.graphql.query-sanitizer.enabled",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables spans for GraphQL Java operations.",
      "library_link": "https://www.graphql-java.com/",
      "name": "graphql-java-12.0",
      "scope": {
        "name": "io.opentelemetry.graphql-java-12.0"
      },
      "semconv": [
        "Graphql"
      ],
      "source_path": "instrumentation/graphql-java/graphql-java-12.0",
      "target_versions": {
        "javaagent": [
          "com.graphql-java:graphql-java:[12,20)"
        ],
        "library": [
          "com.graphql-java:graphql-java:[12.0,19.+)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "graphql.document",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "graphql.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "graphql.operation.type",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "INTERNAL"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Whether GraphQL operation name is added to the span name. WARNING: The GraphQL operation name is provided by the client and can have high cardinality. Use only when the server is not exposed to malicious clients.\n",
          "name": "otel.instrumentation.graphql.add-operation-name-to-span-name.enabled",
          "type": "boolean"
        },
        {
          "default": false,
          "description": "Enables span generation for data fetchers.",
          "name": "otel.instrumentation.graphql.data-fetcher.enabled",
          "type": "boolean"
        },
        {
          "default": true,
          "description": "Enables sanitization of sensitive information from queries so they aren't added as span attributes.",
          "name": "otel.instrumentation.graphql.query-sanitizer.enabled",
          "type": "boolean"
        },
        {
          "default": false,
          "description": "Whether to create spans for trivial data fetchers. A trivial data fetcher is one that simply maps data from an object to a field.",
          "name": "otel.instrumentation.graphql.trivial-data-fetcher.enabled",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables spans for GraphQL Java operations.",
      "minimum_java_version": 11,
      "name": "graphql-java-20.0",
      "scope": {
        "name": "io.opentelemetry.graphql-java-20.0"
      },
      "semconv": [
        "Graphql"
      ],
      "source_path": "instrumentation/graphql-java/graphql-java-20.0",
      "target_versions": {
        "javaagent": [
          "com.graphql-java:graphql-java:[20,)"
        ],
        "library": [
          "com.graphql-java:graphql-java:20.0"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "graphql.document",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "graphql.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "graphql.operation.type",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "INTERNAL"
            }
          ],
          "when": "default"
        },
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "graphql.document",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "graphql.field.name",
                  "type": "STRING"
                },
                {
                  "name": "graphql.field.path",
                  "type": "STRING"
                },
                {
                  "name": "graphql.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "graphql.operation.type",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "INTERNAL"
            }
          ],
          "when": "otel.instrumentation.graphql.data-fetcher.enabled=true"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": "",
          "description": "Used to specify a mapping from host names or IP addresses to peer services.",
          "name": "otel.instrumentation.common.peer-service-mapping",
          "type": "map"
        },
        {
          "default": "CONNECT,DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT,TRACE",
          "description": "Configures the instrumentation to recognize an alternative set of HTTP request methods. All other methods will be treated as `_OTHER`.\n",
          "name": "otel.instrumentation.http.known-methods",
          "type": "list"
        },
        {
          "default": "",
          "description": "List of HTTP request headers to capture in HTTP server telemetry.",
          "name": "otel.instrumentation.http.server.capture-request-headers",
          "type": "list"
        },
        {
          "default": "",
          "description": "List of HTTP response headers to capture in HTTP server telemetry.",
          "name": "otel.instrumentation.http.server.capture-response-headers",
          "type": "list"
        },
        {
          "default": false,
          "description": "Enable the capture of experimental HTTP server telemetry. Adds the `http.request.body.size` and `http.response.body.size` attributes to spans, and records `http.server.request.body.size` and `http.server.response.body.size` metrics.\n",
          "name": "otel.instrumentation.http.server.emit-experimental-telemetry",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables HTTP server spans and HTTP server metrics for Grizzly applications.",
      "name": "grizzly-2.3",
      "scope": {
        "name": "io.opentelemetry.grizzly-2.3"
      },
      "semconv": [
        "Client",
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/grizzly-2.3",
      "target_versions": {
        "javaagent": [
          "org.glassfish.grizzly:grizzly-http:[2.3,)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.scheme",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "Duration of HTTP server requests.",
              "name": "http.server.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "client.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.path",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.query",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.scheme",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "user_agent.original",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "SERVER"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": "",
          "description": "A comma-separated list of request metadata keys. gRPC client instrumentation will capture metadata values corresponding to configured keys as span attributes.\n",
          "name": "otel.instrumentation.grpc.capture-metadata.client.request",
          "type": "list"
        },
        {
          "default": "",
          "description": "A comma-separated list of request metadata keys. gRPC server instrumentation will capture metadata values corresponding to configured keys as span attributes.\n",
          "name": "otel.instrumentation.grpc.capture-metadata.server.request",
          "type": "list"
        },
        {
          "default": true,
          "description": "Determines whether to emit a span event for each individual message received and sent.",
          "name": "otel.instrumentation.grpc.emit-message-events",
          "type": "boolean"
        },
        {
          "default": false,
          "description": "Enable the capture of experimental span attributes `grpc.received.message_count`, `grpc.sent.message_count` and `grpc.canceled`.\n",
          "name": "otel.instrumentation.grpc.experimental-span-attributes",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables RPC client spans and metrics, and RPC server spans and metrics for gRPC version 1.6 and above.",
      "name": "grpc-1.6",
      "scope": {
        "name": "io.opentelemetry.grpc-1.6"
      },
      "semconv": [
        "Aws",
        "Database Client",
        "Network",
        "Rpc"
      ],
      "source_path": "instrumentation/grpc-1.6",
      "target_versions": {
        "javaagent": [
          "io.grpc:grpc-core:[1.6.0,)"
        ],
        "library": [
          "io.grpc:grpc-core:1.6.0"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "rpc.grpc.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "rpc.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.service",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.system",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "The duration of an outbound RPC invocation.",
              "name": "rpc.client.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "ms"
            },
            {
              "attributes": [
                {
                  "name": "network.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.grpc.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "rpc.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.service",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.system",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "The duration of an inbound RPC invocation.",
              "name": "rpc.server.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "ms"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "rpc.grpc.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "rpc.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.service",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.system",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "CLIENT"
            },
            {
              "attributes": [
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.grpc.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "rpc.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.service",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.system",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "SERVER"
            }
          ],
          "when": "default"
        },
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "rpc.grpc.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "rpc.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.service",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.system",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "The duration of an outbound RPC invocation.",
              "name": "rpc.client.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "ms"
            },
            {
              "attributes": [
                {
                  "name": "network.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.grpc.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "rpc.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.service",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.system",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "The duration of an inbound RPC invocation.",
              "name": "rpc.server.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "ms"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "grpc.received.message_count",
                  "type": "LONG"
                },
                {
                  "name": "grpc.sent.message_count",
                  "type": "LONG"
                },
                {
                  "name": "rpc.grpc.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "rpc.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.service",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.system",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "CLIENT"
            },
            {
              "attributes": [
                {
                  "name": "grpc.received.message_count",
                  "type": "LONG"
                },
                {
                  "name": "grpc.sent.message_count",
                  "type": "LONG"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.grpc.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "rpc.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.service",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.system",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "SERVER"
            }
          ],
          "when": "otel.instrumentation.grpc.experimental-span-attributes=true"
        }
      ]
    },
    {
      "name": "guava-10.0",
      "scope": {
        "name": "io.opentelemetry.guava-10.0"
      },
      "semconv": [],
      "source_path": "instrumentation/guava-10.0",
      "target_versions": {
        "javaagent": [
          "com.google.guava:guava:[10.0,]"
        ],
        "library": [
          "com.google.guava:guava:10.0"
        ]
      }
    },
    {
      "description": "This instrumentation enables RPC server spans for GWT RPC requests.",
      "name": "gwt-2.0",
      "scope": {
        "name": "io.opentelemetry.gwt-2.0"
      },
      "semconv": [
        "Aws"
      ],
      "source_path": "instrumentation/gwt-2.0",
      "target_versions": {
        "javaagent": [
          "com.google.gwt:gwt-servlet:[2.0.0,)",
          "org.gwtproject:gwt-servlet:[2.10.0,)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "rpc.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.service",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.system",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "SERVER"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enables the addition of the experimental `hibernate.session_id` span attribute.",
          "name": "otel.instrumentation.hibernate.experimental-span-attributes",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables the generation of INTERNAL spans for Hibernate operations, including session methods (e.g., `save`, `update`, `delete`), transaction commits, and query executions.\n",
      "name": "hibernate-3.3",
      "scope": {
        "name": "io.opentelemetry.hibernate-3.3"
      },
      "semconv": [],
      "source_path": "instrumentation/hibernate/hibernate-3.3",
      "target_versions": {
        "javaagent": [
          "org.hibernate:hibernate-core:[3.3.0.GA,4.0.0.Final)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [],
              "span_kind": "INTERNAL"
            }
          ],
          "when": "default"
        },
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "hibernate.session_id",
                  "type": "STRING"
                }
              ],
              "span_kind": "INTERNAL"
            }
          ],
          "when": "otel.instrumentation.hibernate.experimental-span-attributes=true"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enables the addition of the experimental `hibernate.session_id` span attribute.",
          "name": "otel.instrumentation.hibernate.experimental-span-attributes",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables the generation of INTERNAL spans for Hibernate operations, including session methods (e.g., `save`, `update`, `delete`), transaction commits, and query executions.\n",
      "name": "hibernate-4.0",
      "scope": {
        "name": "io.opentelemetry.hibernate-4.0"
      },
      "semconv": [],
      "source_path": "instrumentation/hibernate/hibernate-4.0",
      "target_versions": {
        "javaagent": [
          "org.hibernate:hibernate-core:[4.0.0.Final,6)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [],
              "span_kind": "INTERNAL"
            }
          ],
          "when": "default"
        },
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "hibernate.session_id",
                  "type": "STRING"
                }
              ],
              "span_kind": "INTERNAL"
            }
          ],
          "when": "otel.instrumentation.hibernate.experimental-span-attributes=true"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enables the addition of the experimental `hibernate.session_id` span attribute.",
          "name": "otel.instrumentation.hibernate.experimental-span-attributes",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables the generation of INTERNAL spans for Hibernate operations, including session methods (e.g., `save`, `update`, `delete`), transaction commits, and query executions.\n",
      "minimum_java_version": 11,
      "name": "hibernate-6.0",
      "scope": {
        "name": "io.opentelemetry.hibernate-6.0"
      },
      "semconv": [],
      "source_path": "instrumentation/hibernate/hibernate-6.0",
      "target_versions": {
        "javaagent": [
          "org.hibernate:hibernate-core:[6.0.0.Final,)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [],
              "span_kind": "INTERNAL"
            }
          ],
          "when": "default"
        },
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "hibernate.session_id",
                  "type": "STRING"
                }
              ],
              "span_kind": "INTERNAL"
            }
          ],
          "when": "otel.instrumentation.hibernate.experimental-span-attributes=true"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enables the addition of the experimental `hibernate.session_id` span attribute.",
          "name": "otel.instrumentation.hibernate.experimental-span-attributes",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables the generation of INTERNAL spans for Hibernate stored procedure calls.",
      "name": "hibernate-procedure-call-4.3",
      "scope": {
        "name": "io.opentelemetry.hibernate-procedure-call-4.3"
      },
      "semconv": [],
      "source_path": "instrumentation/hibernate/hibernate-procedure-call-4.3",
      "target_versions": {
        "javaagent": [
          "org.hibernate:hibernate-core:[4.3.0.Final,)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [],
              "span_kind": "INTERNAL"
            }
          ],
          "when": "default"
        },
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "hibernate.session_id",
                  "type": "STRING"
                }
              ],
              "span_kind": "INTERNAL"
            }
          ],
          "when": "otel.instrumentation.hibernate.experimental-span-attributes=true"
        }
      ]
    },
    {
      "description": "This instrumentation does not emit any telemetry on its own. Instead, it enables context propagation for Hibernate Reactive asynchronous operations.\n",
      "name": "hibernate-reactive-1.0",
      "scope": {
        "name": "io.opentelemetry.hibernate-reactive-1.0"
      },
      "semconv": [],
      "source_path": "instrumentation/hibernate/hibernate-reactive-1.0",
      "target_versions": {
        "javaagent": [
          "org.hibernate.reactive:hibernate-reactive-core:(,)"
        ]
      }
    },
    {
      "name": "hikaricp-3.0",
      "scope": {
        "name": "io.opentelemetry.hikaricp-3.0"
      },
      "semconv": [
        "Database Client"
      ],
      "source_path": "instrumentation/hikaricp-3.0",
      "target_versions": {
        "javaagent": [
          "com.zaxxer:HikariCP:[3.0.0,)"
        ],
        "library": [
          "com.zaxxer:HikariCP:3.0.0"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                }
              ],
              "description": "The time it took to create a new connection.",
              "name": "db.client.connections.create_time",
              "type": "HISTOGRAM",
              "unit": "ms"
            },
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                }
              ],
              "description": "The minimum number of idle open connections allowed.",
              "name": "db.client.connections.idle.min",
              "type": "LONG_SUM",
              "unit": "connections"
            },
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                }
              ],
              "description": "The maximum number of open connections allowed.",
              "name": "db.client.connections.max",
              "type": "LONG_SUM",
              "unit": "connections"
            },
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                }
              ],
              "description": "The number of pending requests for an open connection, cumulative for the entire pool.",
              "name": "db.client.connections.pending_requests",
              "type": "LONG_SUM",
              "unit": "requests"
            },
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                }
              ],
              "description": "The number of connection timeouts that have occurred trying to obtain a connection from the pool.",
              "name": "db.client.connections.timeouts",
              "type": "LONG_SUM",
              "unit": "timeouts"
            },
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                },
                {
                  "name": "state",
                  "type": "STRING"
                }
              ],
              "description": "The number of connections that are currently in state described by the state attribute.",
              "name": "db.client.connections.usage",
              "type": "LONG_SUM",
              "unit": "connections"
            },
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                }
              ],
              "description": "The time between borrowing a connection and returning it to the pool.",
              "name": "db.client.connections.use_time",
              "type": "HISTOGRAM",
              "unit": "ms"
            },
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                }
              ],
              "description": "The time it took to obtain an open connection from the pool.",
              "name": "db.client.connections.wait_time",
              "type": "HISTOGRAM",
              "unit": "ms"
            }
          ],
          "when": "default"
        },
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.client.connection.state",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The number of connections that are currently in state described by the state attribute.",
              "name": "db.client.connection.count",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "connection"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The time it took to create a new connection.",
              "name": "db.client.connection.create_time",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The minimum number of idle open connections allowed.",
              "name": "db.client.connection.idle.min",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "connection"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The maximum number of open connections allowed.",
              "name": "db.client.connection.max",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "connection"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The number of current pending requests for an open connection.",
              "name": "db.client.connection.pending_requests",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "request"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The number of connection timeouts that have occurred trying to obtain a connection from the pool.",
              "name": "db.client.connection.timeouts",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "timeout"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The time between borrowing a connection and returning it to the pool.",
              "name": "db.client.connection.use_time",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The time it took to obtain an open connection from the pool.",
              "name": "db.client.connection.wait_time",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "when": "otel.semconv-stability.opt-in=database"
        }
      ]
    },
    {
      "name": "http-url-connection",
      "scope": {
        "name": "io.opentelemetry.http-url-connection"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/http-url-connection",
      "target_versions": {
        "javaagent": [
          "Java 8+"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enables capturing the experimental `hystrix.command`, `hystrix.circuit_open` and `hystrix.group` span attributes.",
          "name": "otel.instrumentation.hystrix.experimental-span-attributes",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables the generation of INTERNAL spans for Hystrix command executions and fallbacks.",
      "name": "hystrix-1.4",
      "scope": {
        "name": "io.opentelemetry.hystrix-1.4"
      },
      "semconv": [],
      "source_path": "instrumentation/hystrix-1.4",
      "target_versions": {
        "javaagent": [
          "com.netflix.hystrix:hystrix-core:[1.4.0,)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [],
              "span_kind": "INTERNAL"
            }
          ],
          "when": "default"
        },
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "hystrix.circuit_open",
                  "type": "BOOLEAN"
                },
                {
                  "name": "hystrix.command",
                  "type": "STRING"
                },
                {
                  "name": "hystrix.group",
                  "type": "STRING"
                }
              ],
              "span_kind": "INTERNAL"
            }
          ],
          "when": "otel.instrumentation.hystrix.experimental-span-attributes=true"
        }
      ]
    },
    {
      "name": "influxdb-2.4",
      "scope": {
        "name": "io.opentelemetry.influxdb-2.4"
      },
      "semconv": [],
      "source_path": "instrumentation/influxdb-2.4",
      "target_versions": {
        "javaagent": [
          "org.influxdb:influxdb-java:[2.4,)"
        ]
      }
    },
    {
      "minimum_java_version": 11,
      "name": "java-http-client",
      "scope": {
        "name": "io.opentelemetry.java-http-client"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/java-http-client",
      "target_versions": {
        "javaagent": [
          "Java 11+"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "name": "java-http-server",
      "scope": {
        "name": "io.opentelemetry.java-http-server"
      },
      "semconv": [],
      "source_path": "instrumentation/java-http-server",
      "target_versions": {
        "javaagent": [
          "Java 8+"
        ]
      }
    },
    {
      "minimum_java_version": 11,
      "name": "javalin-5.0",
      "scope": {
        "name": "io.opentelemetry.javalin-5.0"
      },
      "semconv": [],
      "source_path": "instrumentation/javalin-5.0",
      "target_versions": {
        "javaagent": [
          "io.javalin:javalin:[5.0.0,)"
        ]
      }
    },
    {
      "disabled_by_default": true,
      "name": "jaxrs-1.0",
      "scope": {
        "name": "io.opentelemetry.jaxrs-1.0"
      },
      "semconv": [],
      "source_path": "instrumentation/jaxrs/jaxrs-1.0",
      "target_versions": {
        "javaagent": [
          "javax.ws.rs:jsr311-api:[0.5,)"
        ]
      }
    },
    {
      "name": "jaxrs-2.0-annotations",
      "scope": {
        "name": "io.opentelemetry.jaxrs-2.0-annotations"
      },
      "semconv": [],
      "source_path": "instrumentation/jaxrs/jaxrs-2.0/jaxrs-2.0-annotations",
      "target_versions": {
        "javaagent": [
          "javax.ws.rs:javax.ws.rs-api:[,]"
        ]
      }
    },
    {
      "name": "jaxrs-2.0-cxf-3.2",
      "scope": {
        "name": "io.opentelemetry.jaxrs-2.0-cxf-3.2"
      },
      "semconv": [],
      "source_path": "instrumentation/jaxrs/jaxrs-2.0/jaxrs-2.0-cxf-3.2",
      "target_versions": {
        "javaagent": [
          "org.apache.cxf:cxf-rt-frontend-jaxrs:[3.2,4)",
          "org.apache.tomee:openejb-cxf-rs:(8,)"
        ]
      }
    },
    {
      "name": "jaxrs-2.0-jersey-2.0",
      "scope": {
        "name": "io.opentelemetry.jaxrs-2.0-jersey-2.0"
      },
      "semconv": [],
      "source_path": "instrumentation/jaxrs/jaxrs-2.0/jaxrs-2.0-jersey-2.0",
      "target_versions": {
        "javaagent": [
          "org.glassfish.jersey.containers:jersey-container-servlet:[2.0,3.0.0)",
          "org.glassfish.jersey.core:jersey-server:[2.0,3.0.0)"
        ]
      }
    },
    {
      "name": "jaxrs-2.0-resteasy-3.0",
      "scope": {
        "name": "io.opentelemetry.jaxrs-2.0-resteasy-3.0"
      },
      "semconv": [],
      "source_path": "instrumentation/jaxrs/jaxrs-2.0/jaxrs-2.0-resteasy-3.0",
      "target_versions": {
        "javaagent": [
          "org.jboss.resteasy:resteasy-jaxrs:[3.0.0.Final,3.1.0.Final)",
          "org.jboss.resteasy:resteasy-jaxrs:[3.5.0.Final,4)"
        ]
      }
    },
    {
      "name": "jaxrs-2.0-resteasy-3.1",
      "scope": {
        "name": "io.opentelemetry.jaxrs-2.0-resteasy-3.1"
      },
      "semconv": [],
      "source_path": "instrumentation/jaxrs/jaxrs-2.0/jaxrs-2.0-resteasy-3.1",
      "target_versions": {
        "javaagent": [
          "org.jboss.resteasy:resteasy-core:[4.0.0.Final,6)",
          "org.jboss.resteasy:resteasy-jaxrs:[3.1.0.Final,3.5.0.Final)"
        ]
      }
    },
    {
      "name": "jaxrs-3.0-annotations",
      "scope": {
        "name": "io.opentelemetry.jaxrs-3.0-annotations"
      },
      "semconv": [],
      "source_path": "instrumentation/jaxrs/jaxrs-3.0/jaxrs-3.0-annotations",
      "target_versions": {
        "javaagent": [
          "jakarta.ws.rs:jakarta.ws.rs-api:[3.0.0,)"
        ]
      }
    },
    {
      "minimum_java_version": 11,
      "name": "jaxrs-3.0-jersey-3.0",
      "scope": {
        "name": "io.opentelemetry.jaxrs-3.0-jersey-3.0"
      },
      "semconv": [],
      "source_path": "instrumentation/jaxrs/jaxrs-3.0/jaxrs-3.0-jersey-3.0",
      "target_versions": {
        "javaagent": [
          "org.glassfish.jersey.core:jersey-server:[3.0.0,)"
        ]
      }
    },
    {
      "minimum_java_version": 11,
      "name": "jaxrs-3.0-resteasy-6.0",
      "scope": {
        "name": "io.opentelemetry.jaxrs-3.0-resteasy-6.0"
      },
      "semconv": [],
      "source_path": "instrumentation/jaxrs/jaxrs-3.0/jaxrs-3.0-resteasy-6.0",
      "target_versions": {
        "javaagent": [
          "org.jboss.resteasy:resteasy-core:[6.0.0.Final,)"
        ]
      }
    },
    {
      "name": "jaxws-2.0",
      "scope": {
        "name": "io.opentelemetry.jaxws-2.0"
      },
      "semconv": [],
      "source_path": "instrumentation/jaxws/jaxws-2.0",
      "target_versions": {
        "javaagent": [
          "javax.xml.ws:jaxws-api:[2.0,]"
        ]
      }
    },
    {
      "name": "jaxws-2.0-axis2-1.6",
      "scope": {
        "name": "io.opentelemetry.jaxws-2.0-axis2-1.6"
      },
      "semconv": [],
      "source_path": "instrumentation/jaxws/jaxws-2.0-axis2-1.6",
      "target_versions": {
        "javaagent": [
          "org.apache.axis2:axis2-jaxws:[1.6.0,)"
        ]
      }
    },
    {
      "name": "jaxws-cxf-3.0",
      "scope": {
        "name": "io.opentelemetry.jaxws-cxf-3.0"
      },
      "semconv": [],
      "source_path": "instrumentation/jaxws/jaxws-cxf-3.0",
      "target_versions": {
        "javaagent": [
          "org.apache.cxf:cxf-rt-frontend-jaxws:[3.0.0,)"
        ]
      }
    },
    {
      "disabled_by_default": true,
      "name": "jaxws-jws-api-1.1",
      "scope": {
        "name": "io.opentelemetry.jaxws-jws-api-1.1"
      },
      "semconv": [],
      "source_path": "instrumentation/jaxws/jaxws-jws-api-1.1",
      "target_versions": {
        "javaagent": [
          "javax.jws:javax.jws-api:[1.1,]"
        ]
      }
    },
    {
      "name": "jaxws-metro-2.2",
      "scope": {
        "name": "io.opentelemetry.jaxws-metro-2.2"
      },
      "semconv": [],
      "source_path": "instrumentation/jaxws/jaxws-metro-2.2",
      "target_versions": {
        "javaagent": [
          "com.sun.xml.ws:jaxws-rt:[2.2.0.1,)"
        ]
      }
    },
    {
      "name": "jboss-logmanager-appender-1.1",
      "scope": {
        "name": "io.opentelemetry.jboss-logmanager-appender-1.1"
      },
      "semconv": [],
      "source_path": "instrumentation/jboss-logmanager/jboss-logmanager-appender-1.1",
      "target_versions": {
        "javaagent": [
          "org.jboss.logmanager:jboss-logmanager:[1.1.0.GA,)"
        ]
      }
    },
    {
      "name": "jboss-logmanager-mdc-1.1",
      "scope": {
        "name": "io.opentelemetry.jboss-logmanager-mdc-1.1"
      },
      "semconv": [],
      "source_path": "instrumentation/jboss-logmanager/jboss-logmanager-mdc-1.1",
      "target_versions": {
        "javaagent": [
          "org.jboss.logmanager:jboss-logmanager:[1.1.0.GA,)"
        ]
      }
    },
    {
      "configurations": [
        {
          "default": true,
          "description": "Enables statement sanitization for database queries.",
          "name": "otel.instrumentation.common.db-statement-sanitizer.enabled",
          "type": "boolean"
        },
        {
          "default": "",
          "description": "Used to specify a mapping from host names or IP addresses to peer services.",
          "name": "otel.instrumentation.common.peer-service-mapping",
          "type": "map"
        },
        {
          "default": false,
          "description": "Enables instrumentation of JDBC datasource connections.",
          "name": "otel.instrumentation.jdbc-datasource.enabled",
          "type": "boolean"
        },
        {
          "default": false,
          "description": "Sets whether the query parameters should be captured as span attributes named <code>db.query.parameter.&lt;key&gt;</code>. Enabling this option disables the statement sanitization.<p>WARNING: captured query parameters may contain sensitive information such as passwords, personally identifiable information or protected health info.\n",
          "name": "otel.instrumentation.jdbc.experimental.capture-query-parameters",
          "type": "boolean"
        },
        {
          "default": false,
          "description": "Enables experimental instrumentation to create spans for COMMIT and ROLLBACK operations.",
          "name": "otel.instrumentation.jdbc.experimental.transaction.enabled",
          "type": "boolean"
        },
        {
          "default": true,
          "description": "Enables statement sanitization for database queries. Takes precedent to otel.instrumentation.common.db-statement-sanitizer.enabled.",
          "name": "otel.instrumentation.jdbc.statement-sanitizer.enabled",
          "type": "boolean"
        }
      ],
      "description": "The JDBC instrumentation provides database client spans and metrics. Each call produces a span named after the SQL verb, enriched with standard DB client attributes (system, database, operation, sanitized statement, peer address) and error details if an exception occurs.\nThere is also a \"jdbc-datasource\" instrumentation that creates spans for datasource connections, but is disabled by default due to the volume of telemetry produced.\n",
      "name": "jdbc",
      "scope": {
        "name": "io.opentelemetry.jdbc"
      },
      "semconv": [],
      "source_path": "instrumentation/jdbc",
      "target_versions": {
        "javaagent": [
          "Java 8+"
        ]
      }
    },
    {
      "name": "jedis-1.4",
      "scope": {
        "name": "io.opentelemetry.jedis-1.4"
      },
      "semconv": [],
      "source_path": "instrumentation/jedis/jedis-1.4",
      "target_versions": {
        "javaagent": [
          "redis.clients:jedis:[1.4.0,3.0.0)"
        ]
      }
    },
    {
      "name": "jedis-3.0",
      "scope": {
        "name": "io.opentelemetry.jedis-3.0"
      },
      "semconv": [],
      "source_path": "instrumentation/jedis/jedis-3.0",
      "target_versions": {
        "javaagent": [
          "redis.clients:jedis:[3.0.0,4)"
        ]
      }
    },
    {
      "name": "jedis-4.0",
      "scope": {
        "name": "io.opentelemetry.jedis-4.0"
      },
      "semconv": [],
      "source_path": "instrumentation/jedis/jedis-4.0",
      "target_versions": {
        "javaagent": [
          "redis.clients:jedis:[4.0.0-beta1,)"
        ]
      }
    },
    {
      "minimum_java_version": 11,
      "name": "jetty-11.0",
      "scope": {
        "name": "io.opentelemetry.jetty-11.0"
      },
      "semconv": [],
      "source_path": "instrumentation/jetty/jetty-11.0",
      "target_versions": {
        "javaagent": [
          "org.eclipse.jetty:jetty-server:[11, 12)"
        ]
      }
    },
    {
      "minimum_java_version": 17,
      "name": "jetty-12.0",
      "scope": {
        "name": "io.opentelemetry.jetty-12.0"
      },
      "semconv": [],
      "source_path": "instrumentation/jetty/jetty-12.0",
      "target_versions": {
        "javaagent": [
          "org.eclipse.jetty:jetty-server:[12,)"
        ]
      }
    },
    {
      "name": "jetty-8.0",
      "scope": {
        "name": "io.opentelemetry.jetty-8.0"
      },
      "semconv": [],
      "source_path": "instrumentation/jetty/jetty-8.0",
      "target_versions": {
        "javaagent": [
          "org.eclipse.jetty:jetty-server:[8.0.0.v20110901,11)"
        ]
      }
    },
    {
      "minimum_java_version": 17,
      "name": "jetty-httpclient-12.0",
      "scope": {
        "name": "io.opentelemetry.jetty-httpclient-12.0"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/jetty-httpclient/jetty-httpclient-12.0",
      "target_versions": {
        "javaagent": [
          "org.eclipse.jetty:jetty-client:[12,)"
        ],
        "library": [
          "org.eclipse.jetty:jetty-client:12.0.0"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "name": "jetty-httpclient-9.2",
      "scope": {
        "name": "io.opentelemetry.jetty-httpclient-9.2"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/jetty-httpclient/jetty-httpclient-9.2",
      "target_versions": {
        "javaagent": [
          "org.eclipse.jetty:jetty-client:[9.2,10)"
        ],
        "library": [
          "org.eclipse.jetty:jetty-client:[9.2.0.v20140526,9.+)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "name": "jms-1.1",
      "scope": {
        "name": "io.opentelemetry.jms-1.1"
      },
      "semconv": [],
      "source_path": "instrumentation/jms/jms-1.1",
      "target_versions": {
        "javaagent": [
          "jakarta.jms:jakarta.jms-api:(,3)",
          "javax.jms:javax.jms-api:(,)",
          "javax.jms:jms-api:(,)"
        ]
      }
    },
    {
      "minimum_java_version": 11,
      "name": "jms-3.0",
      "scope": {
        "name": "io.opentelemetry.jms-3.0"
      },
      "semconv": [],
      "source_path": "instrumentation/jms/jms-3.0",
      "target_versions": {
        "javaagent": [
          "jakarta.jms:jakarta.jms-api:[3.0.0,)"
        ]
      }
    },
    {
      "name": "jodd-http-4.2",
      "scope": {
        "name": "io.opentelemetry.jodd-http-4.2"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/jodd-http-4.2",
      "target_versions": {
        "javaagent": [
          "org.jodd:jodd-http:[4.2.0,)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "name": "jsf-mojarra-1.2",
      "scope": {
        "name": "io.opentelemetry.jsf-mojarra-1.2"
      },
      "semconv": [],
      "source_path": "instrumentation/jsf/jsf-mojarra-1.2",
      "target_versions": {
        "javaagent": [
          "com.sun.faces:jsf-impl:[2.0,2.1)",
          "com.sun.faces:jsf-impl:[2.1,2.2)",
          "javax.faces:jsf-impl:[1.2,2)",
          "org.glassfish:jakarta.faces:[2.3.9,3)",
          "org.glassfish:javax.faces:[2.0.7,3)"
        ]
      }
    },
    {
      "minimum_java_version": 11,
      "name": "jsf-mojarra-3.0",
      "scope": {
        "name": "io.opentelemetry.jsf-mojarra-3.0"
      },
      "semconv": [],
      "source_path": "instrumentation/jsf/jsf-mojarra-3.0",
      "target_versions": {
        "javaagent": [
          "org.glassfish:jakarta.faces:[3,)"
        ]
      }
    },
    {
      "name": "jsf-myfaces-1.2",
      "scope": {
        "name": "io.opentelemetry.jsf-myfaces-1.2"
      },
      "semconv": [],
      "source_path": "instrumentation/jsf/jsf-myfaces-1.2",
      "target_versions": {
        "javaagent": [
          "org.apache.myfaces.core:myfaces-impl:[1.2,3)"
        ]
      }
    },
    {
      "minimum_java_version": 11,
      "name": "jsf-myfaces-3.0",
      "scope": {
        "name": "io.opentelemetry.jsf-myfaces-3.0"
      },
      "semconv": [],
      "source_path": "instrumentation/jsf/jsf-myfaces-3.0",
      "target_versions": {
        "javaagent": [
          "org.apache.myfaces.core:myfaces-impl:[3,)"
        ]
      }
    },
    {
      "name": "jsp-2.3",
      "scope": {
        "name": "io.opentelemetry.jsp-2.3"
      },
      "semconv": [],
      "source_path": "instrumentation/jsp-2.3",
      "target_versions": {
        "javaagent": [
          "org.apache.tomcat:tomcat-jasper:[7.0.19,10)"
        ]
      }
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enables the capture of the experimental consumer attribute \"kafka.record.queue_time_ms\"",
          "name": "otel.instrumentation.kafka.experimental-span-attributes",
          "type": "boolean"
        },
        {
          "default": true,
          "description": "Enable context propagation for kafka message producers.",
          "name": "otel.instrumentation.kafka.producer-propagation.enabled",
          "type": "boolean"
        },
        {
          "default": "",
          "description": "A comma-separated list of header names to capture as span attributes.",
          "name": "otel.instrumentation.messaging.experimental.capture-headers",
          "type": "list"
        },
        {
          "default": false,
          "description": "Enables experimental receive telemetry, which will cause consumers to start a new trace, with only a span link connecting it to the producer trace.\n",
          "name": "otel.instrumentation.messaging.experimental.receive-telemetry.enabled",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables messaging spans and metrics for Apache Kafka 0.11 clients. It automatically traces message production and consumption, propagates context, and emits metrics for production and consumption.\n",
      "name": "kafka-clients-0.11",
      "scope": {
        "name": "io.opentelemetry.kafka-clients-0.11"
      },
      "semconv": [],
      "source_path": "instrumentation/kafka/kafka-clients/kafka-clients-0.11",
      "target_versions": {
        "javaagent": [
          "org.apache.kafka:kafka-clients:[0.11.0.0,)"
        ]
      }
    },
    {
      "configurations": [
        {
          "default": "",
          "description": "A comma-separated list of header names to capture as span attributes.",
          "name": "otel.instrumentation.messaging.experimental.capture-headers",
          "type": "list"
        },
        {
          "default": false,
          "description": "Enables experimental receive telemetry, which will cause consumers to start a new trace, with only a span link connecting it to the producer trace.\n",
          "name": "otel.instrumentation.messaging.experimental.receive-telemetry.enabled",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation provides a library integration that enables messaging spans and metrics for Apache Kafka 2.6+ clients.\n",
      "name": "kafka-clients-2.6",
      "scope": {
        "name": "io.opentelemetry.kafka-clients-2.6"
      },
      "semconv": [],
      "source_path": "instrumentation/kafka/kafka-clients/kafka-clients-2.6",
      "target_versions": {
        "library": [
          "org.apache.kafka:kafka-clients:2.6.0"
        ]
      }
    },
    {
      "name": "kafka-streams-0.11",
      "scope": {
        "name": "io.opentelemetry.kafka-streams-0.11"
      },
      "semconv": [],
      "source_path": "instrumentation/kafka/kafka-streams-0.11",
      "target_versions": {
        "javaagent": [
          "org.apache.kafka:kafka-streams:[0.11.0.0,)"
        ]
      }
    },
    {
      "name": "kotlinx-coroutines-1.0",
      "scope": {
        "name": "io.opentelemetry.kotlinx-coroutines-1.0"
      },
      "semconv": [],
      "source_path": "instrumentation/kotlinx-coroutines/kotlinx-coroutines-1.0",
      "target_versions": {
        "javaagent": [
          "org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm:[1.3.9,)",
          "org.jetbrains.kotlinx:kotlinx-coroutines-core:[1.0.0,1.3.8)"
        ]
      }
    },
    {
      "name": "kotlinx-coroutines-flow-1.3",
      "scope": {
        "name": "io.opentelemetry.kotlinx-coroutines-flow-1.3"
      },
      "semconv": [],
      "source_path": "instrumentation/kotlinx-coroutines/kotlinx-coroutines-flow-1.3",
      "target_versions": {
        "javaagent": [
          "org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm:[1.3.9,)",
          "org.jetbrains.kotlinx:kotlinx-coroutines-core:[1.3.0,1.3.8)"
        ]
      }
    },
    {
      "name": "ktor-1.0",
      "scope": {
        "name": "io.opentelemetry.ktor-1.0"
      },
      "semconv": [],
      "source_path": "instrumentation/ktor/ktor-1.0",
      "target_versions": {
        "library": [
          "io.ktor:ktor-server-core:[1.0.0,1.+)"
        ]
      }
    },
    {
      "name": "ktor-2.0",
      "scope": {
        "name": "io.opentelemetry.ktor-2.0"
      },
      "semconv": [],
      "source_path": "instrumentation/ktor/ktor-2.0",
      "target_versions": {
        "javaagent": [
          "io.ktor:ktor-client-core:[2.0.0,3.0.0)",
          "io.ktor:ktor-server-core:[2.0.0,3.0.0)"
        ],
        "library": [
          "io.ktor:ktor-client-core:[2.0.0,2.+)",
          "io.ktor:ktor-server-core:[2.0.0,2.+)"
        ]
      }
    },
    {
      "name": "ktor-3.0",
      "scope": {
        "name": "io.opentelemetry.ktor-3.0"
      },
      "semconv": [],
      "source_path": "instrumentation/ktor/ktor-3.0",
      "target_versions": {
        "javaagent": [
          "io.ktor:ktor-client-core:[3.0.0,)",
          "io.ktor:ktor-server-core:[3.0.0,)"
        ],
        "library": [
          "io.ktor:ktor-client-core:3.0.0",
          "io.ktor:ktor-server-core:3.0.0"
        ]
      }
    },
    {
      "name": "kubernetes-client-7.0",
      "scope": {
        "name": "io.opentelemetry.kubernetes-client-7.0"
      },
      "semconv": [],
      "source_path": "instrumentation/kubernetes-client-7.0",
      "target_versions": {
        "javaagent": [
          "io.kubernetes:client-java-api:[7.0.0,)"
        ]
      }
    },
    {
      "name": "lettuce-4.0",
      "scope": {
        "name": "io.opentelemetry.lettuce-4.0"
      },
      "semconv": [],
      "source_path": "instrumentation/lettuce/lettuce-4.0",
      "target_versions": {
        "javaagent": [
          "biz.paluch.redis:lettuce:[4.0.Final,)"
        ]
      }
    },
    {
      "name": "lettuce-5.0",
      "scope": {
        "name": "io.opentelemetry.lettuce-5.0"
      },
      "semconv": [],
      "source_path": "instrumentation/lettuce/lettuce-5.0",
      "target_versions": {
        "javaagent": [
          "io.lettuce:lettuce-core:[5.0.0.RELEASE,5.1.0.RELEASE)"
        ]
      }
    },
    {
      "name": "lettuce-5.1",
      "scope": {
        "name": "io.opentelemetry.lettuce-5.1"
      },
      "semconv": [],
      "source_path": "instrumentation/lettuce/lettuce-5.1",
      "target_versions": {
        "javaagent": [
          "io.lettuce:lettuce-core:[5.1.0.RELEASE,)"
        ],
        "library": [
          "io.lettuce:lettuce-core:5.1.0.RELEASE"
        ]
      }
    },
    {
      "name": "liberty-20.0",
      "scope": {
        "name": "io.opentelemetry.liberty-20.0"
      },
      "semconv": [],
      "source_path": "instrumentation/liberty/liberty-20.0"
    },
    {
      "name": "liberty-dispatcher-20.0",
      "scope": {
        "name": "io.opentelemetry.liberty-dispatcher-20.0"
      },
      "semconv": [],
      "source_path": "instrumentation/liberty/liberty-dispatcher-20.0"
    },
    {
      "name": "log4j-appender-1.2",
      "scope": {
        "name": "io.opentelemetry.log4j-appender-1.2"
      },
      "semconv": [],
      "source_path": "instrumentation/log4j/log4j-appender-1.2",
      "target_versions": {
        "javaagent": [
          "log4j:log4j:[1.2,)"
        ]
      }
    },
    {
      "name": "log4j-appender-2.17",
      "scope": {
        "name": "io.opentelemetry.log4j-appender-2.17"
      },
      "semconv": [],
      "source_path": "instrumentation/log4j/log4j-appender-2.17",
      "target_versions": {
        "javaagent": [
          "org.apache.logging.log4j:log4j-core:[2.0,)"
        ],
        "library": [
          "org.apache.logging.log4j:log4j-core:2.17.0"
        ]
      }
    },
    {
      "name": "log4j-context-data-2.17",
      "scope": {
        "name": "io.opentelemetry.log4j-context-data-2.17"
      },
      "semconv": [],
      "source_path": "instrumentation/log4j/log4j-context-data/log4j-context-data-2.17",
      "target_versions": {
        "javaagent": [
          "org.apache.logging.log4j:log4j-core:[2.17.0,)"
        ]
      }
    },
    {
      "name": "log4j-context-data-2.7",
      "scope": {
        "name": "io.opentelemetry.log4j-context-data-2.7"
      },
      "semconv": [],
      "source_path": "instrumentation/log4j/log4j-context-data/log4j-context-data-2.7",
      "target_versions": {
        "javaagent": [
          "org.apache.logging.log4j:log4j-core:[2.7,2.17.0)"
        ]
      }
    },
    {
      "name": "log4j-mdc-1.2",
      "scope": {
        "name": "io.opentelemetry.log4j-mdc-1.2"
      },
      "semconv": [],
      "source_path": "instrumentation/log4j/log4j-mdc-1.2",
      "target_versions": {
        "javaagent": [
          "log4j:log4j:[1.2,)"
        ]
      }
    },
    {
      "name": "logback-appender-1.0",
      "scope": {
        "name": "io.opentelemetry.logback-appender-1.0"
      },
      "semconv": [],
      "source_path": "instrumentation/logback/logback-appender-1.0",
      "target_versions": {
        "javaagent": [
          "ch.qos.logback:logback-classic:[0.9.16,)"
        ],
        "library": [
          "ch.qos.logback:logback-classic:1.3.0",
          "net.logstash.logback:logstash-logback-encoder:3.0",
          "org.slf4j:slf4j-api:2.0.0"
        ]
      }
    },
    {
      "name": "logback-mdc-1.0",
      "scope": {
        "name": "io.opentelemetry.logback-mdc-1.0"
      },
      "semconv": [],
      "source_path": "instrumentation/logback/logback-mdc-1.0",
      "target_versions": {
        "javaagent": [
          "ch.qos.logback:logback-classic:[1.0.0,1.2.3]"
        ],
        "library": [
          "ch.qos.logback:logback-classic:1.0.0",
          "org.slf4j:slf4j-api:1.6.4"
        ]
      }
    },
    {
      "disabled_by_default": true,
      "name": "micrometer-1.5",
      "scope": {
        "name": "io.opentelemetry.micrometer-1.5"
      },
      "semconv": [],
      "source_path": "instrumentation/micrometer/micrometer-1.5",
      "target_versions": {
        "javaagent": [
          "io.micrometer:micrometer-core:[1.5.0,)"
        ],
        "library": [
          "io.micrometer:micrometer-core:1.5.0"
        ]
      }
    },
    {
      "name": "mongo-3.1",
      "scope": {
        "name": "io.opentelemetry.mongo-3.1"
      },
      "semconv": [],
      "source_path": "instrumentation/mongo/mongo-3.1",
      "target_versions": {
        "javaagent": [
          "org.mongodb:mongo-java-driver:[3.1,)"
        ],
        "library": [
          "org.mongodb:mongo-java-driver:3.1.0"
        ]
      }
    },
    {
      "name": "mongo-3.7",
      "scope": {
        "name": "io.opentelemetry.mongo-3.7"
      },
      "semconv": [],
      "source_path": "instrumentation/mongo/mongo-3.7",
      "target_versions": {
        "javaagent": [
          "org.mongodb:mongo-java-driver:[3.7, 4.0)",
          "org.mongodb:mongodb-driver-core:[3.7, 4.0)"
        ]
      }
    },
    {
      "name": "mongo-4.0",
      "scope": {
        "name": "io.opentelemetry.mongo-4.0"
      },
      "semconv": [],
      "source_path": "instrumentation/mongo/mongo-4.0",
      "target_versions": {
        "javaagent": [
          "org.mongodb:mongodb-driver-core:[4.0,)"
        ]
      }
    },
    {
      "name": "mongo-async-3.3",
      "scope": {
        "name": "io.opentelemetry.mongo-async-3.3"
      },
      "semconv": [],
      "source_path": "instrumentation/mongo/mongo-async-3.3",
      "target_versions": {
        "javaagent": [
          "org.mongodb:mongodb-driver-async:[3.3,)"
        ]
      }
    },
    {
      "disabled_by_default": true,
      "name": "mybatis-3.2",
      "scope": {
        "name": "io.opentelemetry.mybatis-3.2"
      },
      "semconv": [],
      "source_path": "instrumentation/mybatis-3.2",
      "target_versions": {
        "javaagent": [
          "org.mybatis:mybatis:[3.2.0,)"
        ]
      }
    },
    {
      "name": "netty-3.8",
      "scope": {
        "name": "io.opentelemetry.netty-3.8"
      },
      "semconv": [
        "Client",
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/netty/netty-3.8",
      "target_versions": {
        "javaagent": [
          "io.netty:netty:[3.8.0.Final,4)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            },
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.scheme",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "Duration of HTTP server requests.",
              "name": "http.server.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            },
            {
              "attributes": [
                {
                  "name": "client.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.path",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.query",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.scheme",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "user_agent.original",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "SERVER"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enable the creation of Connect and DNS spans",
          "name": "otel.instrumentation.netty.connection-telemetry.enabled",
          "type": "boolean"
        },
        {
          "default": false,
          "description": "Enable SSL telemetry",
          "name": "otel.instrumentation.netty.ssl-telemetry.enabled",
          "type": "boolean"
        }
      ],
      "name": "netty-4.0",
      "scope": {
        "name": "io.opentelemetry.netty-4.0"
      },
      "semconv": [
        "Client",
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/netty/netty-4.0",
      "target_versions": {
        "javaagent": [
          "io.netty:netty-all:[4.0.0.Final,4.1.0.Final)",
          "io.netty:netty-codec-http:[4.0.0.Final,4.1.0.Final)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            },
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.scheme",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "Duration of HTTP server requests.",
              "name": "http.server.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            },
            {
              "attributes": [
                {
                  "name": "client.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.path",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.query",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.scheme",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "user_agent.original",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "SERVER"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enable the creation of Connect and DNS spans",
          "name": "otel.instrumentation.netty.connection-telemetry.enabled",
          "type": "boolean"
        },
        {
          "default": false,
          "description": "Enable SSL telemetry",
          "name": "otel.instrumentation.netty.ssl-telemetry.enabled",
          "type": "boolean"
        }
      ],
      "name": "netty-4.1",
      "scope": {
        "name": "io.opentelemetry.netty-4.1"
      },
      "semconv": [
        "Client",
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/netty/netty-4.1",
      "target_versions": {
        "javaagent": [
          "io.netty:netty-all:[4.1.0.Final,5.0.0)",
          "io.netty:netty-codec-http:[4.1.0.Final,5.0.0)"
        ],
        "library": [
          "io.netty:netty-codec-http:4.1.0.Final"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            },
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.scheme",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "Duration of HTTP server requests.",
              "name": "http.server.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            },
            {
              "attributes": [
                {
                  "name": "client.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.path",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.query",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.scheme",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "user_agent.original",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "SERVER"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "name": "okhttp-2.2",
      "scope": {
        "name": "io.opentelemetry.okhttp-2.2"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/okhttp/okhttp-2.2",
      "target_versions": {
        "javaagent": [
          "com.squareup.okhttp:okhttp:[2.2,3)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "name": "okhttp-3.0",
      "scope": {
        "name": "io.opentelemetry.okhttp-3.0"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/okhttp/okhttp-3.0",
      "target_versions": {
        "javaagent": [
          "com.squareup.okhttp3:okhttp:[3.0,)"
        ],
        "library": [
          "com.squareup.okhttp3:okhttp:3.0.0"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.resend_count",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enables including the full content of user and assistant messages in emitted log events. Note that full content can have data privacy and size concerns, and care should be taken when enabling this.\n",
          "name": "otel.instrumentation.genai.capture-message-content",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables Gen AI client spans and metrics for OpenAI Java SDK 1.1+.",
      "name": "openai-java-1.1",
      "scope": {
        "name": "io.opentelemetry.openai-java-1.1"
      },
      "semconv": [
        "Gen Ai"
      ],
      "source_path": "instrumentation/openai/openai-java-1.1",
      "target_versions": {
        "javaagent": [
          "com.openai:openai-java:[1.1.0,3)"
        ],
        "library": [
          "com.openai:openai-java:1.1.0"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "gen_ai.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "gen_ai.provider.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "gen_ai.request.model",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "gen_ai.response.model",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "GenAI operation duration.",
              "name": "gen_ai.client.operation.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            },
            {
              "attributes": [
                {
                  "name": "gen_ai.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "gen_ai.provider.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "gen_ai.request.model",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "gen_ai.response.model",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "gen_ai.token.type",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "Measures number of input and output tokens used.",
              "name": "gen_ai.client.token.usage",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "token"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "gen_ai.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "gen_ai.provider.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "gen_ai.request.encoding_formats",
                  "semconv": true,
                  "type": "STRING_ARRAY"
                },
                {
                  "name": "gen_ai.request.model",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "gen_ai.response.model",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "gen_ai.usage.input_tokens",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "CLIENT"
            },
            {
              "attributes": [
                {
                  "name": "gen_ai.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "gen_ai.provider.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "gen_ai.request.frequency_penalty",
                  "semconv": true,
                  "type": "DOUBLE"
                },
                {
                  "name": "gen_ai.request.max_tokens",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "gen_ai.request.model",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "gen_ai.request.presence_penalty",
                  "semconv": true,
                  "type": "DOUBLE"
                },
                {
                  "name": "gen_ai.request.seed",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "gen_ai.request.stop_sequences",
                  "semconv": true,
                  "type": "STRING_ARRAY"
                },
                {
                  "name": "gen_ai.request.temperature",
                  "semconv": true,
                  "type": "DOUBLE"
                },
                {
                  "name": "gen_ai.request.top_p",
                  "semconv": true,
                  "type": "DOUBLE"
                },
                {
                  "name": "gen_ai.response.finish_reasons",
                  "semconv": true,
                  "type": "STRING_ARRAY"
                },
                {
                  "name": "gen_ai.response.id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "gen_ai.response.model",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "gen_ai.usage.input_tokens",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "gen_ai.usage.output_tokens",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "INTERNAL"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "minimum_java_version": 11,
      "name": "opensearch-rest-1.0",
      "scope": {
        "name": "io.opentelemetry.opensearch-rest-1.0"
      },
      "semconv": [],
      "source_path": "instrumentation/opensearch/opensearch-rest-1.0",
      "target_versions": {
        "javaagent": [
          "org.opensearch.client:opensearch-rest-client:[1.0,3.0)"
        ]
      }
    },
    {
      "minimum_java_version": 11,
      "name": "opensearch-rest-3.0",
      "scope": {
        "name": "io.opentelemetry.opensearch-rest-3.0"
      },
      "semconv": [],
      "source_path": "instrumentation/opensearch/opensearch-rest-3.0",
      "target_versions": {
        "javaagent": [
          "org.opensearch.client:opensearch-rest-client:[3.0,)"
        ]
      }
    },
    {
      "description": "The Oracle Universal Connection Pool (UCP) instrumentation generates connection pool metrics.",
      "name": "oracle-ucp-11.2",
      "scope": {
        "name": "io.opentelemetry.oracle-ucp-11.2"
      },
      "semconv": [
        "Database Client"
      ],
      "source_path": "instrumentation/oracle-ucp-11.2",
      "target_versions": {
        "javaagent": [
          "com.oracle.database.jdbc:ucp:[,)"
        ],
        "library": [
          "com.oracle.database.jdbc:ojdbc8:12.2.0.1",
          "com.oracle.database.jdbc:ucp:11.2.0.4"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                }
              ],
              "description": "The maximum number of open connections allowed.",
              "name": "db.client.connections.max",
              "type": "LONG_SUM",
              "unit": "connections"
            },
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                }
              ],
              "description": "The number of pending requests for an open connection, cumulative for the entire pool.",
              "name": "db.client.connections.pending_requests",
              "type": "LONG_SUM",
              "unit": "requests"
            },
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                },
                {
                  "name": "state",
                  "type": "STRING"
                }
              ],
              "description": "The number of connections that are currently in state described by the state attribute.",
              "name": "db.client.connections.usage",
              "type": "LONG_SUM",
              "unit": "connections"
            }
          ],
          "when": "default"
        },
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.client.connection.state",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The number of connections that are currently in state described by the state attribute.",
              "name": "db.client.connection.count",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "connection"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The maximum number of open connections allowed.",
              "name": "db.client.connection.max",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "connection"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The number of current pending requests for an open connection.",
              "name": "db.client.connection.pending_requests",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "request"
            }
          ],
          "when": "otel.semconv-stability.opt-in=database"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enable the OSHI process runtime metrics.",
          "name": "otel.instrumentation.oshi.experimental-metrics.enabled",
          "type": "boolean"
        }
      ],
      "description": "When the OSHI library is detected on the classpath, this instrumentation will use the system class loader to load classes from the oshi-core jar that are then used to generate system metrics.",
      "name": "oshi",
      "scope": {
        "name": "io.opentelemetry.oshi"
      },
      "semconv": [
        "System"
      ],
      "source_path": "instrumentation/oshi",
      "target_versions": {
        "javaagent": [
          "com.github.oshi:oshi-core:[5.3.1,)"
        ],
        "library": [
          "com.github.oshi:oshi-core:5.3.1"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "device",
                  "type": "STRING"
                },
                {
                  "name": "direction",
                  "type": "STRING"
                }
              ],
              "description": "System disk IO",
              "name": "system.disk.io",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "By"
            },
            {
              "attributes": [
                {
                  "name": "device",
                  "type": "STRING"
                },
                {
                  "name": "direction",
                  "type": "STRING"
                }
              ],
              "description": "System disk operations",
              "name": "system.disk.operations",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "operations"
            },
            {
              "attributes": [
                {
                  "name": "state",
                  "type": "STRING"
                }
              ],
              "description": "System memory usage",
              "name": "system.memory.usage",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "By"
            },
            {
              "attributes": [
                {
                  "name": "state",
                  "type": "STRING"
                }
              ],
              "description": "System memory utilization",
              "name": "system.memory.utilization",
              "semconv": true,
              "type": "DOUBLE_GAUGE",
              "unit": "1"
            },
            {
              "attributes": [
                {
                  "name": "device",
                  "type": "STRING"
                },
                {
                  "name": "direction",
                  "type": "STRING"
                }
              ],
              "description": "System network errors",
              "name": "system.network.errors",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "errors"
            },
            {
              "attributes": [
                {
                  "name": "device",
                  "type": "STRING"
                },
                {
                  "name": "direction",
                  "type": "STRING"
                }
              ],
              "description": "System network IO",
              "name": "system.network.io",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "By"
            },
            {
              "attributes": [
                {
                  "name": "device",
                  "type": "STRING"
                },
                {
                  "name": "direction",
                  "type": "STRING"
                }
              ],
              "description": "System network packets",
              "name": "system.network.packets",
              "type": "LONG_SUM",
              "unit": "packets"
            }
          ],
          "when": "default"
        },
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "type",
                  "type": "STRING"
                }
              ],
              "description": "Runtime Java CPU time",
              "name": "runtime.java.cpu_time",
              "type": "LONG_GAUGE",
              "unit": "ms"
            },
            {
              "attributes": [
                {
                  "name": "type",
                  "type": "STRING"
                }
              ],
              "description": "Runtime Java memory",
              "name": "runtime.java.memory",
              "type": "LONG_SUM",
              "unit": "By"
            },
            {
              "attributes": [
                {
                  "name": "device",
                  "type": "STRING"
                },
                {
                  "name": "direction",
                  "type": "STRING"
                }
              ],
              "description": "System disk IO",
              "name": "system.disk.io",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "By"
            },
            {
              "attributes": [
                {
                  "name": "device",
                  "type": "STRING"
                },
                {
                  "name": "direction",
                  "type": "STRING"
                }
              ],
              "description": "System disk operations",
              "name": "system.disk.operations",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "operations"
            },
            {
              "attributes": [
                {
                  "name": "state",
                  "type": "STRING"
                }
              ],
              "description": "System memory usage",
              "name": "system.memory.usage",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "By"
            },
            {
              "attributes": [
                {
                  "name": "state",
                  "type": "STRING"
                }
              ],
              "description": "System memory utilization",
              "name": "system.memory.utilization",
              "semconv": true,
              "type": "DOUBLE_GAUGE",
              "unit": "1"
            },
            {
              "attributes": [
                {
                  "name": "device",
                  "type": "STRING"
                },
                {
                  "name": "direction",
                  "type": "STRING"
                }
              ],
              "description": "System network errors",
              "name": "system.network.errors",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "errors"
            },
            {
              "attributes": [
                {
                  "name": "device",
                  "type": "STRING"
                },
                {
                  "name": "direction",
                  "type": "STRING"
                }
              ],
              "description": "System network IO",
              "name": "system.network.io",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "By"
            },
            {
              "attributes": [
                {
                  "name": "device",
                  "type": "STRING"
                },
                {
                  "name": "direction",
                  "type": "STRING"
                }
              ],
              "description": "System network packets",
              "name": "system.network.packets",
              "type": "LONG_SUM",
              "unit": "packets"
            }
          ],
          "when": "otel.instrumentation.oshi.experimental-metrics.enabled=true"
        }
      ]
    },
    {
      "name": "payara",
      "scope": {
        "name": "io.opentelemetry.payara"
      },
      "semconv": [],
      "source_path": "instrumentation/payara"
    },
    {
      "name": "pekko-actor-1.0",
      "scope": {
        "name": "io.opentelemetry.pekko-actor-1.0"
      },
      "semconv": [],
      "source_path": "instrumentation/pekko/pekko-actor-1.0",
      "target_versions": {
        "javaagent": [
          "org.apache.pekko:pekko-actor_2.12:[1.0,)",
          "org.apache.pekko:pekko-actor_2.13:[1.0,)",
          "org.apache.pekko:pekko-actor_3:[1.0,)"
        ]
      }
    },
    {
      "name": "pekko-http-1.0",
      "scope": {
        "name": "io.opentelemetry.pekko-http-1.0"
      },
      "semconv": [
        "Client",
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/pekko/pekko-http-1.0",
      "target_versions": {
        "javaagent": [
          "com.softwaremill.sttp.tapir:tapir-pekko-http-server_2.12:[1.7,)",
          "com.softwaremill.sttp.tapir:tapir-pekko-http-server_2.13:[1.7,)",
          "com.softwaremill.sttp.tapir:tapir-pekko-http-server_3:[1.7,)",
          "org.apache.pekko:pekko-http_2.12:[1.0,)",
          "org.apache.pekko:pekko-http_2.13:[1.0,)",
          "org.apache.pekko:pekko-http_3:[1.0,)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            },
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "http.route",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.scheme",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "Duration of HTTP server requests.",
              "name": "http.server.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            },
            {
              "attributes": [
                {
                  "name": "client.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "http.route",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.path",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.query",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.scheme",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "user_agent.original",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "SERVER"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "name": "play-mvc-2.4",
      "scope": {
        "name": "io.opentelemetry.play-mvc-2.4"
      },
      "semconv": [],
      "source_path": "instrumentation/play/play-mvc/play-mvc-2.4",
      "target_versions": {
        "javaagent": [
          "com.typesafe.play:play_2.11:[2.4.0,2.6)"
        ]
      }
    },
    {
      "name": "play-mvc-2.6",
      "scope": {
        "name": "io.opentelemetry.play-mvc-2.6"
      },
      "semconv": [],
      "source_path": "instrumentation/play/play-mvc/play-mvc-2.6",
      "target_versions": {
        "javaagent": [
          "com.typesafe.play:play_$scalaVersion:[2.6.0,)",
          "com.typesafe.play:play_2.12:[2.6.0,)",
          "com.typesafe.play:play_2.13:[2.6.0,)"
        ]
      }
    },
    {
      "name": "play-ws-1.0",
      "scope": {
        "name": "io.opentelemetry.play-ws-1.0"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/play/play-ws/play-ws-1.0",
      "target_versions": {
        "javaagent": [
          "com.typesafe.play:play-ahc-ws-standalone_2.11:[1.0.0,2.0.0)",
          "com.typesafe.play:play-ahc-ws-standalone_2.12:[1.0.0,2.0.0)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "name": "play-ws-2.0",
      "scope": {
        "name": "io.opentelemetry.play-ws-2.0"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/play/play-ws/play-ws-2.0",
      "target_versions": {
        "javaagent": [
          "com.typesafe.play:play-ahc-ws-standalone_2.11:[2.0.0,]",
          "com.typesafe.play:play-ahc-ws-standalone_2.12:[2.0.0,2.1.0)",
          "com.typesafe.play:play-ahc-ws-standalone_2.13:[2.0.6,2.1.0)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "name": "play-ws-2.1",
      "scope": {
        "name": "io.opentelemetry.play-ws-2.1"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/play/play-ws/play-ws-2.1",
      "target_versions": {
        "javaagent": [
          "com.typesafe.play:play-ahc-ws-standalone_2.12:[2.1.0,]",
          "com.typesafe.play:play-ahc-ws-standalone_2.13:[2.1.0,]"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "name": "powerjob-4.0",
      "scope": {
        "name": "io.opentelemetry.powerjob-4.0"
      },
      "semconv": [],
      "source_path": "instrumentation/powerjob-4.0",
      "target_versions": {
        "javaagent": [
          "tech.powerjob:powerjob-worker:[4.0.0,)"
        ]
      }
    },
    {
      "name": "pulsar-2.8",
      "scope": {
        "name": "io.opentelemetry.pulsar-2.8"
      },
      "semconv": [],
      "source_path": "instrumentation/pulsar/pulsar-2.8",
      "target_versions": {
        "javaagent": [
          "org.apache.pulsar:pulsar-client:[2.8.0,)"
        ]
      }
    },
    {
      "name": "quarkus-resteasy-reactive",
      "scope": {
        "name": "io.opentelemetry.quarkus-resteasy-reactive"
      },
      "semconv": [],
      "source_path": "instrumentation/quarkus-resteasy-reactive",
      "target_versions": {
        "javaagent": [
          "io.quarkus:quarkus-resteasy-reactive:(,3.9.0)"
        ]
      }
    },
    {
      "name": "quartz-2.0",
      "scope": {
        "name": "io.opentelemetry.quartz-2.0"
      },
      "semconv": [],
      "source_path": "instrumentation/quartz-2.0",
      "target_versions": {
        "javaagent": [
          "org.quartz-scheduler:quartz:[2.0.0,)"
        ],
        "library": [
          "org.quartz-scheduler:quartz:2.0.0"
        ]
      }
    },
    {
      "name": "r2dbc-1.0",
      "scope": {
        "name": "io.opentelemetry.r2dbc-1.0"
      },
      "semconv": [],
      "source_path": "instrumentation/r2dbc-1.0",
      "target_versions": {
        "javaagent": [
          "io.r2dbc:r2dbc-spi:[1.0.0.RELEASE,)"
        ],
        "library": [
          "io.r2dbc:r2dbc-spi:1.0.0.RELEASE"
        ]
      }
    },
    {
      "name": "rabbitmq-2.7",
      "scope": {
        "name": "io.opentelemetry.rabbitmq-2.7"
      },
      "semconv": [],
      "source_path": "instrumentation/rabbitmq-2.7",
      "target_versions": {
        "javaagent": [
          "com.rabbitmq:amqp-client:[2.7.0,)"
        ]
      }
    },
    {
      "name": "ratpack-1.4",
      "scope": {
        "name": "io.opentelemetry.ratpack-1.4"
      },
      "semconv": [],
      "source_path": "instrumentation/ratpack/ratpack-1.4",
      "target_versions": {
        "javaagent": [
          "io.ratpack:ratpack-core:[1.4.0,)"
        ]
      }
    },
    {
      "name": "ratpack-1.7",
      "scope": {
        "name": "io.opentelemetry.ratpack-1.7"
      },
      "semconv": [],
      "source_path": "instrumentation/ratpack/ratpack-1.7",
      "target_versions": {
        "javaagent": [
          "io.ratpack:ratpack-core:[1.7.0,)"
        ],
        "library": [
          "io.ratpack:ratpack-core:1.7.0"
        ]
      }
    },
    {
      "name": "reactor-3.1",
      "scope": {
        "name": "io.opentelemetry.reactor-3.1"
      },
      "semconv": [],
      "source_path": "instrumentation/reactor/reactor-3.1",
      "target_versions": {
        "javaagent": [
          "io.projectreactor:reactor-core:[3.1.0.RELEASE,)"
        ]
      }
    },
    {
      "name": "reactor-3.4",
      "scope": {
        "name": "io.opentelemetry.reactor-3.4"
      },
      "semconv": [],
      "source_path": "instrumentation/reactor/reactor-3.4",
      "target_versions": {
        "javaagent": [
          "io.projectreactor:reactor-core:[3.4.0,)"
        ]
      }
    },
    {
      "name": "reactor-kafka-1.0",
      "scope": {
        "name": "io.opentelemetry.reactor-kafka-1.0"
      },
      "semconv": [],
      "source_path": "instrumentation/reactor/reactor-kafka-1.0",
      "target_versions": {
        "javaagent": [
          "io.projectreactor.kafka:reactor-kafka:[1.0.0,)"
        ]
      }
    },
    {
      "name": "reactor-netty-0.9",
      "scope": {
        "name": "io.opentelemetry.reactor-netty-0.9"
      },
      "semconv": [],
      "source_path": "instrumentation/reactor/reactor-netty/reactor-netty-0.9",
      "target_versions": {
        "javaagent": [
          "io.projectreactor.netty:reactor-netty:[0.8.2.RELEASE,1.0.0)"
        ]
      }
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enable the creation of Connect and DNS spans.",
          "name": "otel.instrumentation.reactor-netty.connection-telemetry.enabled",
          "type": "boolean"
        }
      ],
      "name": "reactor-netty-1.0",
      "scope": {
        "name": "io.opentelemetry.reactor-netty-1.0"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/reactor/reactor-netty/reactor-netty-1.0",
      "target_versions": {
        "javaagent": [
          "io.projectreactor.netty:reactor-netty-http:[1.0.0,)",
          "io.projectreactor.netty:reactor-netty:[1.0.0,)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.resend_count",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "name": "rediscala-1.8",
      "scope": {
        "name": "io.opentelemetry.rediscala-1.8"
      },
      "semconv": [],
      "source_path": "instrumentation/rediscala-1.8",
      "target_versions": {
        "javaagent": [
          "com.github.Ma27:rediscala_2.11:[1.8.1,)",
          "com.github.Ma27:rediscala_2.12:[1.8.1,)",
          "com.github.Ma27:rediscala_2.13:[1.9.0,)",
          "com.github.etaty:rediscala_2.11:[1.5.0,)",
          "com.github.etaty:rediscala_2.12:[1.8.0,)",
          "com.github.etaty:rediscala_2.13:[1.9.0,)",
          "io.github.rediscala:rediscala_2.13:[1.10.0,)"
        ]
      }
    },
    {
      "name": "redisson-3.0",
      "scope": {
        "name": "io.opentelemetry.redisson-3.0"
      },
      "semconv": [],
      "source_path": "instrumentation/redisson/redisson-3.0",
      "target_versions": {
        "javaagent": [
          "org.redisson:redisson:[3.0.0,3.17.0)"
        ]
      }
    },
    {
      "name": "redisson-3.17",
      "scope": {
        "name": "io.opentelemetry.redisson-3.17"
      },
      "semconv": [],
      "source_path": "instrumentation/redisson/redisson-3.17",
      "target_versions": {
        "javaagent": [
          "org.redisson:redisson:[3.17.0,)"
        ]
      }
    },
    {
      "name": "resources",
      "scope": {
        "name": "io.opentelemetry.resources"
      },
      "semconv": [],
      "source_path": "instrumentation/resources"
    },
    {
      "name": "restlet-1.1",
      "scope": {
        "name": "io.opentelemetry.restlet-1.1"
      },
      "semconv": [],
      "source_path": "instrumentation/restlet/restlet-1.1",
      "target_versions": {
        "javaagent": [
          "org.restlet:org.restlet:[1.1.0, 1.2-M1)"
        ],
        "library": [
          "com.noelios.restlet:com.noelios.restlet:1.1.5",
          "org.restlet:org.restlet:[1.1.5,1.+)"
        ]
      }
    },
    {
      "name": "restlet-2.0",
      "scope": {
        "name": "io.opentelemetry.restlet-2.0"
      },
      "semconv": [],
      "source_path": "instrumentation/restlet/restlet-2.0",
      "target_versions": {
        "javaagent": [
          "org.restlet.jse:org.restlet:[2.0.0,)"
        ],
        "library": [
          "org.restlet.jse:org.restlet:2.0.2"
        ]
      }
    },
    {
      "name": "rmi",
      "scope": {
        "name": "io.opentelemetry.rmi"
      },
      "semconv": [],
      "source_path": "instrumentation/rmi",
      "target_versions": {
        "javaagent": [
          "Java 8+"
        ]
      }
    },
    {
      "name": "rocketmq-client-4.8",
      "scope": {
        "name": "io.opentelemetry.rocketmq-client-4.8"
      },
      "semconv": [],
      "source_path": "instrumentation/rocketmq/rocketmq-client/rocketmq-client-4.8",
      "target_versions": {
        "javaagent": [
          "org.apache.rocketmq:rocketmq-client:[4.0.0,)"
        ],
        "library": [
          "org.apache.rocketmq:rocketmq-client:4.8.0"
        ]
      }
    },
    {
      "name": "rocketmq-client-5.0",
      "scope": {
        "name": "io.opentelemetry.rocketmq-client-5.0"
      },
      "semconv": [],
      "source_path": "instrumentation/rocketmq/rocketmq-client/rocketmq-client-5.0",
      "target_versions": {
        "javaagent": [
          "org.apache.rocketmq:rocketmq-client-java:[5.0.0,)"
        ]
      }
    },
    {
      "minimum_java_version": 17,
      "name": "runtime-telemetry-java17",
      "scope": {
        "name": "io.opentelemetry.runtime-telemetry-java17"
      },
      "semconv": [],
      "source_path": "instrumentation/runtime-telemetry/runtime-telemetry-java17"
    },
    {
      "name": "runtime-telemetry-java8",
      "scope": {
        "name": "io.opentelemetry.runtime-telemetry-java8"
      },
      "semconv": [],
      "source_path": "instrumentation/runtime-telemetry/runtime-telemetry-java8"
    },
    {
      "name": "rxjava-1.0",
      "scope": {
        "name": "io.opentelemetry.rxjava-1.0"
      },
      "semconv": [],
      "source_path": "instrumentation/rxjava/rxjava-1.0",
      "target_versions": {
        "library": [
          "io.reactivex:rxjava:1.0.7"
        ]
      }
    },
    {
      "name": "rxjava-2.0",
      "scope": {
        "name": "io.opentelemetry.rxjava-2.0"
      },
      "semconv": [],
      "source_path": "instrumentation/rxjava/rxjava-2.0",
      "target_versions": {
        "javaagent": [
          "io.reactivex.rxjava2:rxjava:[2.0.6,)"
        ],
        "library": [
          "io.reactivex.rxjava2:rxjava:2.1.3"
        ]
      }
    },
    {
      "name": "rxjava-3.0",
      "scope": {
        "name": "io.opentelemetry.rxjava-3.0"
      },
      "semconv": [],
      "source_path": "instrumentation/rxjava/rxjava-3.0",
      "target_versions": {
        "javaagent": [
          "io.reactivex.rxjava3:rxjava:[3.0.0,3.1.0]"
        ],
        "library": [
          "io.reactivex.rxjava3:rxjava:[3.0.12,3.1.0)"
        ]
      }
    },
    {
      "name": "rxjava-3.1.1",
      "scope": {
        "name": "io.opentelemetry.rxjava-3.1.1"
      },
      "semconv": [],
      "source_path": "instrumentation/rxjava/rxjava-3.1.1",
      "target_versions": {
        "javaagent": [
          "io.reactivex.rxjava3:rxjava:[3.1.1,)"
        ],
        "library": [
          "io.reactivex.rxjava3:rxjava:3.1.1"
        ]
      }
    },
    {
      "name": "scala-fork-join-2.8",
      "scope": {
        "name": "io.opentelemetry.scala-fork-join-2.8"
      },
      "semconv": [],
      "source_path": "instrumentation/scala-fork-join-2.8",
      "target_versions": {
        "javaagent": [
          "org.scala-lang:scala-library:[2.8.0,2.12.0)"
        ]
      }
    },
    {
      "name": "servlet-2.2",
      "scope": {
        "name": "io.opentelemetry.servlet-2.2"
      },
      "semconv": [],
      "source_path": "instrumentation/servlet/servlet-2.2",
      "target_versions": {
        "javaagent": [
          "javax.servlet:servlet-api:[2.2, 3.0)"
        ]
      }
    },
    {
      "name": "servlet-3.0",
      "scope": {
        "name": "io.opentelemetry.servlet-3.0"
      },
      "semconv": [],
      "source_path": "instrumentation/servlet/servlet-3.0",
      "target_versions": {
        "javaagent": [
          "javax.servlet:javax.servlet-api:[3.0,)"
        ]
      }
    },
    {
      "name": "servlet-5.0",
      "scope": {
        "name": "io.opentelemetry.servlet-5.0"
      },
      "semconv": [],
      "source_path": "instrumentation/servlet/servlet-5.0",
      "target_versions": {
        "javaagent": [
          "jakarta.servlet:jakarta.servlet-api:[5.0.0,)"
        ]
      }
    },
    {
      "description": "This instrumentation does not emit telemetry on its own. Instead, it extracts the HTTP route and attaches it to HTTP server spans and HTTP server metrics.\n",
      "name": "spark-2.3",
      "scope": {
        "name": "io.opentelemetry.spark-2.3"
      },
      "semconv": [],
      "source_path": "instrumentation/spark-2.3",
      "target_versions": {
        "javaagent": [
          "com.sparkjava:spark-core:[2.3,)"
        ]
      }
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Adds the experimental attribute `job.system` to spans.",
          "name": "otel.instrumentation.spring-batch.experimental-span-attributes",
          "type": "boolean"
        },
        {
          "default": false,
          "description": "When enabled, a new root span will be created for each chunk processing. Please note that this may lead to a high number of spans being created.",
          "name": "otel.instrumentation.spring-batch.experimental.chunk.new-trace",
          "type": "boolean"
        },
        {
          "default": false,
          "description": "When enabled, spans will be created for each item processed. Please note that this may lead to a high number of spans being created.",
          "name": "otel.instrumentation.spring-batch.item.enabled",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables INTERNAL spans for jobs run by the Spring Batch framework.",
      "disabled_by_default": true,
      "name": "spring-batch-3.0",
      "scope": {
        "name": "io.opentelemetry.spring-batch-3.0"
      },
      "semconv": [],
      "source_path": "instrumentation/spring/spring-batch-3.0",
      "target_versions": {
        "javaagent": [
          "org.springframework.batch:spring-batch-core:[3.0.0.RELEASE,5)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "job.system",
                  "type": "STRING"
                }
              ],
              "span_kind": "INTERNAL"
            }
          ],
          "when": "otel.instrumentation.spring-batch.experimental-span-attributes=true"
        }
      ]
    },
    {
      "description": "This instrumentation configures the OpenTelemetry Micrometer bridge to receive metrics from Spring Boot Actuator. It does not produce telemetry on its own.\n",
      "disabled_by_default": true,
      "name": "spring-boot-actuator-autoconfigure-2.0",
      "scope": {
        "name": "io.opentelemetry.spring-boot-actuator-autoconfigure-2.0"
      },
      "semconv": [],
      "source_path": "instrumentation/spring/spring-boot-actuator-autoconfigure-2.0",
      "target_versions": {
        "javaagent": [
          "org.springframework.boot:spring-boot-actuator-autoconfigure:[2.0.0.RELEASE,)"
        ]
      }
    },
    {
      "description": "This instrumentation automatically detects the `service.name` and `service.version` for Spring Boot applications and sets them as resource attributes.\nIt uses the following strategies (first successful wins):\n  - Check for the SPRING_APPLICATION_NAME environment variable\n  - Check for spring.application.name system property\n  - Check for application.properties file on the classpath\n  - Check for application.properties in the current working dir\n  - Check for application.yml on the classpath\n  - Check for application.yml in the current working dir\n  - Check for --spring.application.name program argument (not jvm arg) via ProcessHandle\n  - Check for --spring.application.name program argument via sun.java.command system property\n",
      "name": "spring-boot-resources",
      "scope": {
        "name": "io.opentelemetry.spring-boot-resources"
      },
      "semconv": [],
      "source_path": "instrumentation/spring/spring-boot-resources"
    },
    {
      "description": "This instrumentation enhances tracing for Spring Cloud AWS. It augments the existing AWS SDK instrumentation by providing higher-level tracing for SQS operations, capturing details specific to Spring Cloud AWS SQS usage and linking them to the underlying AWS SDK traces.\n",
      "minimum_java_version": 17,
      "name": "spring-cloud-aws-3.0",
      "scope": {
        "name": "io.opentelemetry.spring-cloud-aws-3.0"
      },
      "semconv": [],
      "source_path": "instrumentation/spring/spring-cloud-aws-3.0",
      "target_versions": {
        "javaagent": [
          "io.awspring.cloud:spring-cloud-aws-sqs:[3.0.0,)"
        ]
      }
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enables experimental `spring-cloud-gateway.route` attributes (e.g., `spring-cloud-gateway.route.id`, `spring-cloud-gateway.route.uri`, etc.) on spans.\n",
          "name": "otel.instrumentation.spring-cloud-gateway.experimental-span-attributes",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enhances tracing for Spring Cloud Gateway. It does not generate new telemetry on its own, but rather enriches existing traces produced by other instrumentations like Netty and Spring WebFlux with Spring Cloud Gateway-specific attributes.\n",
      "name": "spring-cloud-gateway-2.0",
      "scope": {
        "name": "io.opentelemetry.spring-cloud-gateway-2.0"
      },
      "semconv": [],
      "source_path": "instrumentation/spring/spring-cloud-gateway/spring-cloud-gateway-2.0",
      "target_versions": {
        "javaagent": [
          "org.springframework.cloud:spring-cloud-starter-gateway:[2.0.0.RELEASE,]"
        ]
      }
    },
    {
      "description": "This instrumentation ensures proper context propagation for asynchronous operations within Spring Core. It modifies how tasks are submitted and executed to ensure that spans created by other instrumentations are correctly linked across thread boundaries, rather than generating any new telemetry itself.\n",
      "minimum_java_version": 17,
      "name": "spring-core-2.0",
      "scope": {
        "name": "io.opentelemetry.spring-core-2.0"
      },
      "semconv": [],
      "source_path": "instrumentation/spring/spring-core-2.0",
      "target_versions": {
        "javaagent": [
          "org.springframework:spring-core:[2.0,]"
        ]
      }
    },
    {
      "description": "This instrumentation enhances tracing for Spring Data operations. It works in conjunction with other instrumentations, such as JDBC, to provide additional context and details for database interactions initiated through Spring Data.\n",
      "name": "spring-data-1.8",
      "scope": {
        "name": "io.opentelemetry.spring-data-1.8"
      },
      "semconv": [
        "Code"
      ],
      "source_path": "instrumentation/spring/spring-data/spring-data-1.8",
      "target_versions": {
        "javaagent": [
          "org.springframework.data:spring-data-commons:[1.8.0.RELEASE,]",
          "org.springframework:spring-aop:[1.2,]"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "code.function",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "code.namespace",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "INTERNAL"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": "",
          "description": "Allows configuring headers to capture as span attributes.",
          "name": "otel.instrumentation.messaging.experimental.capture-headers",
          "type": "list"
        },
        {
          "default": "*",
          "description": "An array of Spring channel name patterns that will be intercepted.",
          "name": "otel.instrumentation.spring-integration.global-channel-interceptor-patterns",
          "type": "list"
        },
        {
          "default": false,
          "description": "Create producer spans when messages are sent to an output channel. Enable when you're using a messaging library that doesn't have its own instrumentation for generating producer spans. Note that the detection of output channels only works for Spring Cloud Stream `DirectWithAttributesChannel`.\n",
          "name": "otel.instrumentation.spring-integration.producer.enabled",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables producer and consumer messaging spans for Spring Integration.",
      "name": "spring-integration-4.1",
      "scope": {
        "name": "io.opentelemetry.spring-integration-4.1"
      },
      "semconv": [],
      "source_path": "instrumentation/spring/spring-integration-4.1",
      "target_versions": {
        "javaagent": [
          "org.springframework.integration:spring-integration-core:[4.1.0.RELEASE,)"
        ],
        "library": [
          "org.springframework.integration:spring-integration-core:[4.1.0.RELEASE,5.+)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "messaging.operation",
                  "type": "STRING"
                }
              ],
              "span_kind": "CONSUMER"
            }
          ],
          "when": "default"
        },
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "messaging.operation",
                  "type": "STRING"
                }
              ],
              "span_kind": "CONSUMER"
            },
            {
              "attributes": [
                {
                  "name": "messaging.operation",
                  "type": "STRING"
                }
              ],
              "span_kind": "PRODUCER"
            }
          ],
          "when": "otel.instrumentation.spring-integration.producer.enabled=true"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": "",
          "description": "A comma-separated list of header names to capture as span attributes.",
          "name": "otel.instrumentation.messaging.experimental.capture-headers",
          "type": "list"
        },
        {
          "default": false,
          "description": "Enables experimental receive telemetry, which will cause consumers to start a new trace, with only a span link connecting it to the producer trace.\n",
          "name": "otel.instrumentation.messaging.experimental.receive-telemetry.enabled",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables the generation of consumer messaging spans for Spring JMS.",
      "name": "spring-jms-2.0",
      "scope": {
        "name": "io.opentelemetry.spring-jms-2.0"
      },
      "semconv": [
        "Messaging"
      ],
      "source_path": "instrumentation/spring/spring-jms/spring-jms-2.0",
      "target_versions": {
        "javaagent": [
          "org.springframework:spring-jms:[2.0,6)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "messaging.destination.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.message.id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.operation",
                  "type": "STRING"
                },
                {
                  "name": "messaging.system",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CONSUMER"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": "",
          "description": "A comma-separated list of header names to capture as span attributes.",
          "name": "otel.instrumentation.messaging.experimental.capture-headers",
          "type": "list"
        },
        {
          "default": false,
          "description": "Enables experimental receive telemetry, which will cause consumers to start a new trace, with only a span link connecting it to the producer trace.\n",
          "name": "otel.instrumentation.messaging.experimental.receive-telemetry.enabled",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables the generation of consumer messaging spans for Spring JMS.",
      "minimum_java_version": 17,
      "name": "spring-jms-6.0",
      "scope": {
        "name": "io.opentelemetry.spring-jms-6.0"
      },
      "semconv": [
        "Messaging"
      ],
      "source_path": "instrumentation/spring/spring-jms/spring-jms-6.0",
      "target_versions": {
        "javaagent": [
          "org.springframework:spring-jms:[6.0.0,)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "messaging.destination.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.message.id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.operation",
                  "type": "STRING"
                },
                {
                  "name": "messaging.system",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CONSUMER"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enables capturing experimental span attribute `kafka.record.queue_time_ms`",
          "name": "otel.instrumentation.kafka.experimental-span-attributes",
          "type": "boolean"
        },
        {
          "default": "",
          "description": "A comma-separated list of header names to capture as span attributes.",
          "name": "otel.instrumentation.messaging.experimental.capture-headers",
          "type": "list"
        },
        {
          "default": false,
          "description": "Enables experimental receive telemetry, which will cause consumers to start a new trace, with only a span link connecting it to the producer trace.\n",
          "name": "otel.instrumentation.messaging.experimental.receive-telemetry.enabled",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables consumer messaging spans for Spring Kafka listeners.",
      "name": "spring-kafka-2.7",
      "scope": {
        "name": "io.opentelemetry.spring-kafka-2.7"
      },
      "semconv": [
        "Messaging"
      ],
      "source_path": "instrumentation/spring/spring-kafka-2.7",
      "target_versions": {
        "javaagent": [
          "org.springframework.kafka:spring-kafka:[2.7.0,)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "messaging.batch.message_count",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "messaging.client_id",
                  "type": "STRING"
                },
                {
                  "name": "messaging.destination.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.destination.partition.id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.kafka.consumer.group",
                  "type": "STRING"
                },
                {
                  "name": "messaging.kafka.message.key",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.kafka.message.offset",
                  "type": "LONG"
                },
                {
                  "name": "messaging.message.body.size",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "messaging.operation",
                  "type": "STRING"
                },
                {
                  "name": "messaging.system",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CONSUMER"
            }
          ],
          "when": "default"
        },
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "kafka.record.queue_time_ms",
                  "type": "LONG"
                },
                {
                  "name": "messaging.batch.message_count",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "messaging.client_id",
                  "type": "STRING"
                },
                {
                  "name": "messaging.destination.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.destination.partition.id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.kafka.consumer.group",
                  "type": "STRING"
                },
                {
                  "name": "messaging.kafka.message.key",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.kafka.message.offset",
                  "type": "LONG"
                },
                {
                  "name": "messaging.message.body.size",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "messaging.operation",
                  "type": "STRING"
                },
                {
                  "name": "messaging.system",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CONSUMER"
            }
          ],
          "when": "otel.instrumentation.kafka.experimental-span-attributes=true"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": "",
          "description": "A comma-separated list of header names to capture as span attributes.",
          "name": "otel.instrumentation.messaging.experimental.capture-headers",
          "type": "list"
        },
        {
          "default": false,
          "description": "Enables experimental receive telemetry, which will cause consumers to start a new trace, with only a span link connecting it to the producer trace.\n",
          "name": "otel.instrumentation.messaging.experimental.receive-telemetry.enabled",
          "type": "boolean"
        },
        {
          "default": false,
          "description": "Enables capturing experimental span attribute `messaging.pulsar.message.type` on PRODUCER spans.\n",
          "name": "otel.instrumentation.pulsar.experimental-span-attributes",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables consumer messaging spans for Spring Pulsar listeners.",
      "minimum_java_version": 17,
      "name": "spring-pulsar-1.0",
      "scope": {
        "name": "io.opentelemetry.spring-pulsar-1.0"
      },
      "semconv": [
        "Messaging"
      ],
      "source_path": "instrumentation/spring/spring-pulsar-1.0",
      "target_versions": {
        "javaagent": [
          "org.springframework.pulsar:spring-pulsar:[1.0.0,)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "messaging.destination.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.message.body.size",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "messaging.message.id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.operation",
                  "type": "STRING"
                },
                {
                  "name": "messaging.system",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CONSUMER"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": "",
          "description": "A comma-separated list of header names to capture as span attributes.",
          "name": "otel.instrumentation.messaging.experimental.capture-headers",
          "type": "list"
        }
      ],
      "description": "This instrumentation enables consumer messaging spans for Spring RabbitMQ listeners.",
      "name": "spring-rabbit-1.0",
      "scope": {
        "name": "io.opentelemetry.spring-rabbit-1.0"
      },
      "semconv": [
        "Messaging"
      ],
      "source_path": "instrumentation/spring/spring-rabbit-1.0",
      "target_versions": {
        "javaagent": [
          "org.springframework.amqp:spring-rabbit:(,)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "messaging.destination.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.message.body.size",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "messaging.operation",
                  "type": "STRING"
                },
                {
                  "name": "messaging.system",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CONSUMER"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "description": "This instrumentation enables RPC client and RPC server spans for Spring RMI applications.",
      "name": "spring-rmi-4.0",
      "scope": {
        "name": "io.opentelemetry.spring-rmi-4.0"
      },
      "semconv": [
        "Aws"
      ],
      "source_path": "instrumentation/spring/spring-rmi-4.0",
      "target_versions": {
        "javaagent": [
          "org.springframework:spring-context:[4.0.0.RELEASE,6)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "rpc.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.service",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.system",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            },
            {
              "attributes": [
                {
                  "name": "rpc.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.service",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.system",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "SERVER"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Adds the experimental span attribute `job.system` with the value `spring_scheduling`.",
          "name": "otel.instrumentation.spring-scheduling.experimental-span-attributes",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables tracing for Spring Scheduling tasks.",
      "name": "spring-scheduling-3.1",
      "scope": {
        "name": "io.opentelemetry.spring-scheduling-3.1"
      },
      "semconv": [
        "Code"
      ],
      "source_path": "instrumentation/spring/spring-scheduling-3.1",
      "target_versions": {
        "javaagent": [
          "org.springframework:spring-context:[3.1.0.RELEASE,]"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "code.function",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "code.namespace",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "INTERNAL"
            }
          ],
          "when": "default"
        },
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "code.function",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "code.namespace",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "job.system",
                  "type": "STRING"
                }
              ],
              "span_kind": "INTERNAL"
            }
          ],
          "when": "otel.instrumentation.spring-scheduling.experimental-span-attributes=true"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enables capturing the enduser.id attribute.",
          "name": "otel.instrumentation.common.enduser.id.enabled",
          "type": "boolean"
        },
        {
          "default": false,
          "description": "Enables capturing the enduser.role attribute.",
          "name": "otel.instrumentation.common.enduser.role.enabled",
          "type": "boolean"
        },
        {
          "default": false,
          "description": "Enables capturing the enduser.scope attribute.",
          "name": "otel.instrumentation.common.enduser.scope.enabled",
          "type": "boolean"
        },
        {
          "default": "ROLE_",
          "description": "Prefix of granted authorities identifying roles to capture in the `enduser.role` semantic attribute.",
          "name": "otel.instrumentation.spring-security.enduser.role.granted-authority-prefix",
          "type": "string"
        },
        {
          "default": "SCOPE_",
          "description": "Prefix of granted authorities identifying scopes to capture in the `enduser.scopes` semantic attribute.",
          "name": "otel.instrumentation.spring-security.scope.role.granted-authority-prefix",
          "type": "string"
        }
      ],
      "description": "This instrumentation does not emit any telemetry on its own. Instead, it captures enduser attributes, and is only enabled when at least one of the `enduser` configurations is enabled.\nNOTE: The `enduser` attributes have been deprecated and will be removed in 3.0+ of the java agent.\n",
      "minimum_java_version": 17,
      "name": "spring-security-config-6.0",
      "scope": {
        "name": "io.opentelemetry.spring-security-config-6.0"
      },
      "semconv": [],
      "source_path": "instrumentation/spring/spring-security-config-6.0",
      "target_versions": {
        "javaagent": [
          "org.springframework.security:spring-security-config:[6.0.0,]"
        ],
        "library": [
          "io.projectreactor:reactor-core:3.5.0",
          "jakarta.servlet:jakarta.servlet-api:6.0.0",
          "org.springframework.security:spring-security-config:6.0.0",
          "org.springframework.security:spring-security-web:6.0.0",
          "org.springframework:spring-web:6.0.0"
        ]
      }
    },
    {
      "description": "This instrumentation provides a library integration that enables capturing HTTP client spans and metrics for Spring's RestTemplate. The agent integration enriches HTTP server spans and metrics with route information.\n",
      "name": "spring-web-3.1",
      "scope": {
        "name": "io.opentelemetry.spring-web-3.1"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/spring/spring-web/spring-web-3.1",
      "target_versions": {
        "javaagent": [
          "org.springframework:spring-web:[3.1.0.RELEASE,6)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "description": "This instrumentation enriches HTTP server spans and metrics with route information.",
      "name": "spring-web-6.0",
      "scope": {
        "name": "io.opentelemetry.spring-web-6.0"
      },
      "semconv": [],
      "source_path": "instrumentation/spring/spring-web/spring-web-6.0",
      "target_versions": {
        "javaagent": [
          "org.springframework:spring-web:[6.0.0,)"
        ]
      }
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enables the creation of experimental controller (INTERNAL) spans.",
          "name": "otel.instrumentation.common.experimental.controller-telemetry.enabled",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables HTTP client spans and metrics for Spring WebFlux 5.0. It also optionally enables experimental controller (INTERNAL) spans.\n",
      "name": "spring-webflux-5.0",
      "scope": {
        "name": "io.opentelemetry.spring-webflux-5.0"
      },
      "semconv": [
        "Code",
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/spring/spring-webflux/spring-webflux-5.0",
      "target_versions": {
        "javaagent": [
          "io.projectreactor.ipc:reactor-netty:[0.7.0.RELEASE,)",
          "io.projectreactor.netty:reactor-netty:[0.8.0.RELEASE,)",
          "org.springframework:spring-webflux:[5.0.0.RELEASE,)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            },
            {
              "attributes": [
                {
                  "name": "code.function",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "code.namespace",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "INTERNAL"
            }
          ],
          "when": "otel.instrumentation.common.experimental.controller-telemetry.enabled"
        }
      ]
    },
    {
      "description": "This instrumentation provides a library integration for the Spring WebFlux WebClient and Webflux server versions 5.3+ that enables HTTP client and server spans and metrics.\n",
      "name": "spring-webflux-5.3",
      "scope": {
        "name": "io.opentelemetry.spring-webflux-5.3"
      },
      "semconv": [
        "Client",
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/spring/spring-webflux/spring-webflux-5.3",
      "target_versions": {
        "library": [
          "org.springframework:spring-webflux:5.3.0"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            },
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "http.route",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.scheme",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "Duration of HTTP server requests.",
              "name": "http.server.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            },
            {
              "attributes": [
                {
                  "name": "client.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "http.route",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.path",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.query",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.scheme",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "user_agent.original",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "SERVER"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enables the creation of experimental controller (INTERNAL) spans.",
          "name": "otel.instrumentation.common.experimental.controller-telemetry.enabled",
          "type": "boolean"
        },
        {
          "default": false,
          "description": "Enables the creation of experimental view (INTERNAL) spans.",
          "name": "otel.instrumentation.common.experimental.view-telemetry.enabled",
          "type": "boolean"
        },
        {
          "default": false,
          "description": "Enables the capture of experimental span attributes `spring-webmvc-view-name` and `spring-webmvc.view.type`.\n",
          "name": "otel.instrumentation.spring-webmvc.experimental-span-attributes",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables optional Controller and View (INTERNAL) spans for Spring WebMVC 3.1+.\n",
      "name": "spring-webmvc-3.1",
      "scope": {
        "name": "io.opentelemetry.spring-webmvc-3.1"
      },
      "semconv": [
        "Code"
      ],
      "source_path": "instrumentation/spring/spring-webmvc/spring-webmvc-3.1",
      "target_versions": {
        "javaagent": [
          "org.springframework:spring-webmvc:[3.1.0.RELEASE,6)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "code.function",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "code.namespace",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "INTERNAL"
            }
          ],
          "when": "default"
        },
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "code.function",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "code.namespace",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "spring-webmvc.view.type",
                  "type": "STRING"
                }
              ],
              "span_kind": "INTERNAL"
            }
          ],
          "when": "otel.instrumentation.spring-webmvc.experimental-span-attributes=true"
        }
      ]
    },
    {
      "description": "This instrumentation provides a library integration for Spring WebMVC controllers, that enables the creation of HTTP server spans and metrics for requests processed by the Spring servlet container.\n",
      "name": "spring-webmvc-5.3",
      "scope": {
        "name": "io.opentelemetry.spring-webmvc-5.3"
      },
      "semconv": [
        "Client",
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/spring/spring-webmvc/spring-webmvc-5.3",
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "http.route",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.scheme",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "Duration of HTTP server requests.",
              "name": "http.server.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "client.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "http.route",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.path",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.query",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.scheme",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "user_agent.original",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "SERVER"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enables the creation of experimental controller (INTERNAL) spans.",
          "name": "otel.instrumentation.common.experimental.controller-telemetry.enabled",
          "type": "boolean"
        },
        {
          "default": false,
          "description": "Enables the creation of experimental view (INTERNAL) spans.",
          "name": "otel.instrumentation.common.experimental.view-telemetry.enabled",
          "type": "boolean"
        },
        {
          "default": false,
          "description": "Enables the capture of experimental span attributes `spring-webmvc-view-name` and `spring-webmvc.view.type`.\n",
          "name": "otel.instrumentation.spring-webmvc.experimental-span-attributes",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables optional Controller and View (INTERNAL) spans for Spring WebMVC 6.0+.\n",
      "minimum_java_version": 17,
      "name": "spring-webmvc-6.0",
      "scope": {
        "name": "io.opentelemetry.spring-webmvc-6.0"
      },
      "semconv": [
        "Code"
      ],
      "source_path": "instrumentation/spring/spring-webmvc/spring-webmvc-6.0",
      "target_versions": {
        "javaagent": [
          "org.springframework:spring-webmvc:[6.0.0,)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "code.function",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "code.namespace",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "INTERNAL"
            }
          ],
          "when": "default"
        },
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "code.function",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "code.namespace",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "spring-webmvc.view.type",
                  "type": "STRING"
                }
              ],
              "span_kind": "INTERNAL"
            }
          ],
          "when": "otel.instrumentation.spring-webmvc.experimental-span-attributes=true"
        }
      ]
    },
    {
      "disabled_by_default": true,
      "name": "spring-ws-2.0",
      "scope": {
        "name": "io.opentelemetry.spring-ws-2.0"
      },
      "semconv": [],
      "source_path": "instrumentation/spring/spring-ws-2.0",
      "target_versions": {
        "javaagent": [
          "org.springframework.ws:spring-ws-core:[2.0.0.RELEASE,]"
        ]
      }
    },
    {
      "name": "spymemcached-2.12",
      "scope": {
        "name": "io.opentelemetry.spymemcached-2.12"
      },
      "semconv": [],
      "source_path": "instrumentation/spymemcached-2.12",
      "target_versions": {
        "javaagent": [
          "net.spy:spymemcached:[2.12.0,)"
        ]
      }
    },
    {
      "name": "struts-2.3",
      "scope": {
        "name": "io.opentelemetry.struts-2.3"
      },
      "semconv": [],
      "source_path": "instrumentation/struts/struts-2.3",
      "target_versions": {
        "javaagent": [
          "org.apache.struts:struts2-core:[2.1.0,7)"
        ]
      }
    },
    {
      "minimum_java_version": 17,
      "name": "struts-7.0",
      "scope": {
        "name": "io.opentelemetry.struts-7.0"
      },
      "semconv": [],
      "source_path": "instrumentation/struts/struts-7.0",
      "target_versions": {
        "javaagent": [
          "org.apache.struts:struts2-core:[7.0.0,)"
        ]
      }
    },
    {
      "name": "tapestry-5.4",
      "scope": {
        "name": "io.opentelemetry.tapestry-5.4"
      },
      "semconv": [],
      "source_path": "instrumentation/tapestry-5.4",
      "target_versions": {
        "javaagent": [
          "org.apache.tapestry:tapestry-core:[5.4.0,)"
        ]
      }
    },
    {
      "minimum_java_version": 11,
      "name": "tomcat-10.0",
      "scope": {
        "name": "io.opentelemetry.tomcat-10.0"
      },
      "semconv": [],
      "source_path": "instrumentation/tomcat/tomcat-10.0",
      "target_versions": {
        "javaagent": [
          "org.apache.tomcat.embed:tomcat-embed-core:[10,)"
        ]
      }
    },
    {
      "name": "tomcat-7.0",
      "scope": {
        "name": "io.opentelemetry.tomcat-7.0"
      },
      "semconv": [],
      "source_path": "instrumentation/tomcat/tomcat-7.0",
      "target_versions": {
        "javaagent": [
          "org.apache.tomcat.embed:tomcat-embed-core:[7.0.4, 10)"
        ]
      }
    },
    {
      "name": "tomcat-jdbc",
      "scope": {
        "name": "io.opentelemetry.tomcat-jdbc"
      },
      "semconv": [
        "Database Client"
      ],
      "source_path": "instrumentation/tomcat/tomcat-jdbc",
      "target_versions": {
        "javaagent": [
          "org.apache.tomcat:tomcat-jdbc:[8.5.0,)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                }
              ],
              "description": "The maximum number of idle open connections allowed.",
              "name": "db.client.connections.idle.max",
              "type": "LONG_SUM",
              "unit": "connections"
            },
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                }
              ],
              "description": "The minimum number of idle open connections allowed.",
              "name": "db.client.connections.idle.min",
              "type": "LONG_SUM",
              "unit": "connections"
            },
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                }
              ],
              "description": "The maximum number of open connections allowed.",
              "name": "db.client.connections.max",
              "type": "LONG_SUM",
              "unit": "connections"
            },
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                }
              ],
              "description": "The number of pending requests for an open connection, cumulative for the entire pool.",
              "name": "db.client.connections.pending_requests",
              "type": "LONG_SUM",
              "unit": "requests"
            },
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                },
                {
                  "name": "state",
                  "type": "STRING"
                }
              ],
              "description": "The number of connections that are currently in state described by the state attribute.",
              "name": "db.client.connections.usage",
              "type": "LONG_SUM",
              "unit": "connections"
            }
          ],
          "when": "default"
        },
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.client.connection.state",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The number of connections that are currently in state described by the state attribute.",
              "name": "db.client.connection.count",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "connection"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The maximum number of idle open connections allowed.",
              "name": "db.client.connection.idle.max",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "connection"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The minimum number of idle open connections allowed.",
              "name": "db.client.connection.idle.min",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "connection"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The maximum number of open connections allowed.",
              "name": "db.client.connection.max",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "connection"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The number of current pending requests for an open connection.",
              "name": "db.client.connection.pending_requests",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "request"
            }
          ],
          "when": "otel.semconv-stability.opt-in=database"
        }
      ]
    },
    {
      "name": "twilio-6.6",
      "scope": {
        "name": "io.opentelemetry.twilio-6.6"
      },
      "semconv": [],
      "source_path": "instrumentation/twilio-6.6",
      "target_versions": {
        "javaagent": [
          "com.twilio.sdk:twilio:(,8.0.0)"
        ]
      }
    },
    {
      "name": "undertow-1.4",
      "scope": {
        "name": "io.opentelemetry.undertow-1.4"
      },
      "semconv": [],
      "source_path": "instrumentation/undertow-1.4",
      "target_versions": {
        "javaagent": [
          "io.undertow:undertow-core:[1.4.0.Final,)"
        ]
      }
    },
    {
      "name": "vaadin-14.2",
      "scope": {
        "name": "io.opentelemetry.vaadin-14.2"
      },
      "semconv": [],
      "source_path": "instrumentation/vaadin-14.2",
      "target_versions": {
        "javaagent": [
          "com.vaadin:flow-server:[2.2.0,3)",
          "com.vaadin:flow-server:[3.1.0,)"
        ]
      }
    },
    {
      "name": "vertx-http-client-3.0",
      "scope": {
        "name": "io.opentelemetry.vertx-http-client-3.0"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/vertx/vertx-http-client/vertx-http-client-3.0",
      "target_versions": {
        "javaagent": [
          "io.vertx:vertx-core:[3.0.0,4.0.0)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "name": "vertx-http-client-4.0",
      "scope": {
        "name": "io.opentelemetry.vertx-http-client-4.0"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/vertx/vertx-http-client/vertx-http-client-4.0",
      "target_versions": {
        "javaagent": [
          "io.vertx:vertx-core:[4.0.0,5)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "minimum_java_version": 11,
      "name": "vertx-http-client-5.0",
      "scope": {
        "name": "io.opentelemetry.vertx-http-client-5.0"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/vertx/vertx-http-client/vertx-http-client-5.0",
      "target_versions": {
        "javaagent": [
          "io.vertx:vertx-core:[5.0.0,)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "name": "vertx-kafka-client-3.6",
      "scope": {
        "name": "io.opentelemetry.vertx-kafka-client-3.6"
      },
      "semconv": [],
      "source_path": "instrumentation/vertx/vertx-kafka-client-3.6",
      "target_versions": {
        "javaagent": [
          "io.vertx:vertx-kafka-client:[3.5.1,)"
        ]
      }
    },
    {
      "name": "vertx-redis-client-4.0",
      "scope": {
        "name": "io.opentelemetry.vertx-redis-client-4.0"
      },
      "semconv": [
        "Database Client"
      ],
      "source_path": "instrumentation/vertx/vertx-redis-client-4.0",
      "target_versions": {
        "javaagent": [
          "io.vertx:vertx-redis-client:[4.0.0,)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.operation",
                  "type": "STRING"
                },
                {
                  "name": "db.redis.database_index",
                  "type": "LONG"
                },
                {
                  "name": "db.statement",
                  "type": "STRING"
                },
                {
                  "name": "db.system",
                  "type": "STRING"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        },
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "db.namespace",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of database client operations.",
              "name": "db.client.operation.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.namespace",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.query.text",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "otel.semconv-stability.opt-in=database"
        }
      ]
    },
    {
      "name": "vertx-rx-java-3.5",
      "scope": {
        "name": "io.opentelemetry.vertx-rx-java-3.5"
      },
      "semconv": [],
      "source_path": "instrumentation/vertx/vertx-rx-java-3.5",
      "target_versions": {
        "javaagent": [
          "io.vertx:vertx-rx-java2:[3.5.0,)"
        ]
      }
    },
    {
      "name": "vertx-sql-client-4.0",
      "scope": {
        "name": "io.opentelemetry.vertx-sql-client-4.0"
      },
      "semconv": [
        "Database Client"
      ],
      "source_path": "instrumentation/vertx/vertx-sql-client/vertx-sql-client-4.0",
      "target_versions": {
        "javaagent": [
          "io.vertx:vertx-sql-client:[4.0.0,5)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.name",
                  "type": "STRING"
                },
                {
                  "name": "db.operation",
                  "type": "STRING"
                },
                {
                  "name": "db.sql.table",
                  "type": "STRING"
                },
                {
                  "name": "db.statement",
                  "type": "STRING"
                },
                {
                  "name": "db.user",
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        },
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "db.collection.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.namespace",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of database client operations.",
              "name": "db.client.operation.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.collection.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.namespace",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.query.text",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.response.status_code",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "otel.semconv-stability.opt-in=database"
        }
      ]
    },
    {
      "minimum_java_version": 11,
      "name": "vertx-sql-client-5.0",
      "scope": {
        "name": "io.opentelemetry.vertx-sql-client-5.0"
      },
      "semconv": [
        "Database Client"
      ],
      "source_path": "instrumentation/vertx/vertx-sql-client/vertx-sql-client-5.0",
      "target_versions": {
        "javaagent": [
          "io.vertx:vertx-sql-client:[5.0.0,)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.name",
                  "type": "STRING"
                },
                {
                  "name": "db.operation",
                  "type": "STRING"
                },
                {
                  "name": "db.sql.table",
                  "type": "STRING"
                },
                {
                  "name": "db.statement",
                  "type": "STRING"
                },
                {
                  "name": "db.user",
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        },
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "db.collection.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.namespace",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of database client operations.",
              "name": "db.client.operation.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.collection.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.namespace",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.query.text",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.response.status_code",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "otel.semconv-stability.opt-in=database"
        }
      ]
    },
    {
      "name": "vertx-web-3.0",
      "scope": {
        "name": "io.opentelemetry.vertx-web-3.0"
      },
      "semconv": [],
      "source_path": "instrumentation/vertx/vertx-web-3.0",
      "target_versions": {
        "javaagent": [
          "io.vertx:vertx-web:[3.0.0,)"
        ]
      }
    },
    {
      "description": "Instrumentation for the vibur-dbcp library, which provides connection pool metrics.",
      "name": "vibur-dbcp-11.0",
      "scope": {
        "name": "io.opentelemetry.vibur-dbcp-11.0"
      },
      "semconv": [
        "Database Client"
      ],
      "source_path": "instrumentation/vibur-dbcp-11.0",
      "target_versions": {
        "javaagent": [
          "org.vibur:vibur-dbcp:[11.0,)"
        ],
        "library": [
          "org.vibur:vibur-dbcp:11.0"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                }
              ],
              "description": "The maximum number of open connections allowed.",
              "name": "db.client.connections.max",
              "type": "LONG_SUM",
              "unit": "connections"
            },
            {
              "attributes": [
                {
                  "name": "pool.name",
                  "type": "STRING"
                },
                {
                  "name": "state",
                  "type": "STRING"
                }
              ],
              "description": "The number of connections that are currently in state described by the state attribute.",
              "name": "db.client.connections.usage",
              "type": "LONG_SUM",
              "unit": "connections"
            }
          ],
          "when": "default"
        },
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.client.connection.state",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The number of connections that are currently in state described by the state attribute.",
              "name": "db.client.connection.count",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "connection"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The maximum number of open connections allowed.",
              "name": "db.client.connection.max",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "connection"
            }
          ],
          "when": "otel.semconv-stability.opt-in=database"
        }
      ]
    },
    {
      "name": "wicket-8.0",
      "scope": {
        "name": "io.opentelemetry.wicket-8.0"
      },
      "semconv": [],
      "source_path": "instrumentation/wicket-8.0",
      "target_versions": {
        "javaagent": [
          "org.apache.wicket:wicket:[8.0.0,]"
        ]
      }
    },
    {
      "name": "xxl-job-1.9.2",
      "scope": {
        "name": "io.opentelemetry.xxl-job-1.9.2"
      },
      "semconv": [],
      "source_path": "instrumentation/xxl-job/xxl-job-1.9.2",
      "target_versions": {
        "javaagent": [
          "com.xuxueli:xxl-job-core:[1.9.2, 2.1.2)"
        ]
      }
    },
    {
      "name": "xxl-job-2.1.2",
      "scope": {
        "name": "io.opentelemetry.xxl-job-2.1.2"
      },
      "semconv": [],
      "source_path": "instrumentation/xxl-job/xxl-job-2.1.2",
      "target_versions": {
        "javaagent": [
          "com.xuxueli:xxl-job-core:[2.1.2,2.3.0)"
        ]
      }
    },
    {
      "name": "xxl-job-2.3.0",
      "scope": {
        "name": "io.opentelemetry.xxl-job-2.3.0"
      },
      "semconv": [],
      "source_path": "instrumentation/xxl-job/xxl-job-2.3.0",
      "target_versions": {
        "javaagent": [
          "com.xuxueli:xxl-job-core:[2.3.0,)"
        ]
      }
    },
    {
      "name": "zio-2.0",
      "scope": {
        "name": "io.opentelemetry.zio-2.0"
      },
      "semconv": [],
      "source_path": "instrumentation/zio/zio-2.0",
      "target_versions": {
        "javaagent": [
          "dev.zio:zio_2.12:[2.0.0,)",
          "dev.zio:zio_2.13:[2.0.0,)",
          "dev.zio:zio_3:[2.0.0,)"
        ]
      }
    }
  ],
  "3.0": [
    {
      "description": "This instrumentation enables HTTP server spans and HTTP server metrics for the ActiveJ HTTP server.",
      "library_link": "https://activej.io/",
      "minimum_java_version": 17,
      "name": "activej-http-6.0",
      "scope": {
        "name": "io.opentelemetry.activej-http-6.0"
      },
      "semconv": [
        "Client",
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/activej-http-6.0",
      "target_versions": {
        "javaagent": [
          "io.activej:activej-http:[6.0,)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.scheme",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "Duration of HTTP server requests.",
              "name": "http.server.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "client.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.path",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.query",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.scheme",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "user_agent.original",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "SERVER"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "description": "This instrumentation provides context propagation for Akka actors, it does not emit any telemetry on its own.",
      "library_link": "https://doc.akka.io/libraries/akka-core/current/typed/index.html",
      "name": "akka-actor-2.3",
      "scope": {
        "name": "io.opentelemetry.akka-actor-2.3"
      },
      "semconv": [],
      "source_path": "instrumentation/akka/akka-actor-2.3",
      "target_versions": {
        "javaagent": [
          "com.typesafe.akka:akka-actor_2.11:[2.3,)",
          "com.typesafe.akka:akka-actor_2.12:[2.3,)",
          "com.typesafe.akka:akka-actor_2.13:[2.3,)"
        ]
      }
    },
    {
      "description": "This instrumentation provides context propagation for the Akka Fork-Join Pool, it does not emit any telemetry on its own.",
      "library_link": "https://doc.akka.io/libraries/akka-core/current/typed/index.html",
      "name": "akka-actor-fork-join-2.5",
      "scope": {
        "name": "io.opentelemetry.akka-actor-fork-join-2.5"
      },
      "semconv": [],
      "source_path": "instrumentation/akka/akka-actor-fork-join-2.5",
      "target_versions": {
        "javaagent": [
          "com.typesafe.akka:akka-actor_2.11:[2.5,)",
          "com.typesafe.akka:akka-actor_2.12:[2.5,2.6)",
          "com.typesafe.akka:akka-actor_2.13:[2.5.23,2.6)"
        ]
      }
    },
    {
      "description": "This instrumentation enables HTTP client spans and metrics for the Akka HTTP client, and HTTP server spans and metrics for the Akka HTTP server.\n",
      "library_link": "https://doc.akka.io/docs/akka-http/current/index.html",
      "name": "akka-http-10.0",
      "scope": {
        "name": "io.opentelemetry.akka-http-10.0"
      },
      "semconv": [
        "Client",
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/akka/akka-http-10.0",
      "target_versions": {
        "javaagent": [
          "com.typesafe.akka:akka-http_2.11:[10,)",
          "com.typesafe.akka:akka-http_2.12:[10,)",
          "com.typesafe.akka:akka-http_2.13:[10,)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            },
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "http.route",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.scheme",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "Duration of HTTP server requests.",
              "name": "http.server.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            },
            {
              "attributes": [
                {
                  "name": "client.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "http.route",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.path",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.query",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.scheme",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "user_agent.original",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "SERVER"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "description": "The Alibaba Druid instrumentation generates database connection pool metrics for druid data sources.\n",
      "library_link": "https://github.com/alibaba/druid",
      "name": "alibaba-druid-1.0",
      "scope": {
        "name": "io.opentelemetry.alibaba-druid-1.0"
      },
      "semconv": [
        "Database Client"
      ],
      "source_path": "instrumentation/alibaba-druid-1.0",
      "target_versions": {
        "javaagent": [
          "com.alibaba:druid:(,)"
        ],
        "library": [
          "com.alibaba:druid:1.0.0"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.client.connection.state",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The number of connections that are currently in state described by the state attribute.",
              "name": "db.client.connection.count",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "connection"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The maximum number of idle open connections allowed.",
              "name": "db.client.connection.idle.max",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "connection"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The minimum number of idle open connections allowed.",
              "name": "db.client.connection.idle.min",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "connection"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The maximum number of open connections allowed.",
              "name": "db.client.connection.max",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "connection"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The number of current pending requests for an open connection.",
              "name": "db.client.connection.pending_requests",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "request"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "description": "This instrumentation enables database connection pools metrics for Apache DBCP.\nThe instrumentation uses `MBeanRegistration` methods for lifecycle detection, therefore it only activates if the `BasicDataSource` is registered to an `MBeanServer`. If using Spring Boot, this happens automatically as all Spring beans that support JMX registration are automatically registered by default.\n",
      "library_link": "https://commons.apache.org/proper/commons-dbcp/",
      "name": "apache-dbcp-2.0",
      "scope": {
        "name": "io.opentelemetry.apache-dbcp-2.0"
      },
      "semconv": [
        "Database Client"
      ],
      "source_path": "instrumentation/apache-dbcp-2.0",
      "target_versions": {
        "javaagent": [
          "org.apache.commons:commons-dbcp2:[2,)"
        ],
        "library": [
          "org.apache.commons:commons-dbcp2:2.0"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.client.connection.state",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The number of connections that are currently in state described by the state attribute.",
              "name": "db.client.connection.count",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "connection"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The maximum number of idle open connections allowed.",
              "name": "db.client.connection.idle.max",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "connection"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The minimum number of idle open connections allowed.",
              "name": "db.client.connection.idle.min",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "connection"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The maximum number of open connections allowed.",
              "name": "db.client.connection.max",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "connection"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": "",
          "description": "Used to specify a mapping from host names or IP addresses to peer services.",
          "name": "otel.instrumentation.common.peer-service-mapping",
          "type": "map"
        }
      ],
      "description": "The Apache Dubbo instrumentation provides RPC client spans and RPC server spans for Apache Dubbo RPC calls. Each call produces a span named after the Dubbo method, enriched with standard RPC attributes (system, service, method), network attributes, and error details if an exception occurs.",
      "library_link": "https://github.com/apache/dubbo/",
      "name": "apache-dubbo-2.7",
      "scope": {
        "name": "io.opentelemetry.apache-dubbo-2.7"
      },
      "semconv": [
        "Aws",
        "Database Client"
      ],
      "source_path": "instrumentation/apache-dubbo-2.7",
      "target_versions": {
        "javaagent": [
          "org.apache.dubbo:dubbo:[2.7,)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "rpc.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.service",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.system",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "CLIENT"
            },
            {
              "attributes": [
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "rpc.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.service",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.system",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "SERVER"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "description": "This instrumentation enables HTTP client spans and HTTP client metrics for the Apache HttpAsyncClient.",
      "library_link": "https://hc.apache.org/index.html",
      "name": "apache-httpasyncclient-4.1",
      "scope": {
        "name": "io.opentelemetry.apache-httpasyncclient-4.1"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/apache-httpasyncclient-4.1",
      "target_versions": {
        "javaagent": [
          "org.apache.httpcomponents:httpasyncclient:[4.1,)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "description": "This instrumentation enables HTTP client spans and HTTP client metrics for versions 2 and 3 of the Apache HttpClient.",
      "library_link": "https://hc.apache.org/index.html",
      "name": "apache-httpclient-2.0",
      "scope": {
        "name": "io.opentelemetry.apache-httpclient-2.0"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/apache-httpclient/apache-httpclient-2.0",
      "target_versions": {
        "javaagent": [
          "commons-httpclient:commons-httpclient:[2.0,4.0)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "description": "This instrumentation enables HTTP client spans and HTTP client metrics for version 4 of the Apache HttpClient.",
      "library_link": "https://hc.apache.org/index.html",
      "name": "apache-httpclient-4.0",
      "scope": {
        "name": "io.opentelemetry.apache-httpclient-4.0"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/apache-httpclient/apache-httpclient-4.0",
      "target_versions": {
        "javaagent": [
          "io.dropwizard:dropwizard-client:(,3.0.0)",
          "org.apache.httpcomponents:httpclient:[4.0,)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "description": "This instrumentation provides a library integration that enables HTTP client spans and HTTP client metrics for the Apache HttpClient.",
      "library_link": "https://hc.apache.org/index.html",
      "name": "apache-httpclient-4.3",
      "scope": {
        "name": "io.opentelemetry.apache-httpclient-4.3"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/apache-httpclient/apache-httpclient-4.3",
      "target_versions": {
        "library": [
          "org.apache.httpcomponents:httpclient:[4.3,4.+)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.resend_count",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "description": "This instrumentation enables HTTP client spans and HTTP client metrics for version 5 of the Apache HttpClient.",
      "library_link": "https://hc.apache.org/index.html",
      "name": "apache-httpclient-5.0",
      "scope": {
        "name": "io.opentelemetry.apache-httpclient-5.0"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/apache-httpclient/apache-httpclient-5.0",
      "target_versions": {
        "javaagent": [
          "org.apache.httpcomponents.client5:httpclient5:[5.0,)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "description": "This instrumentation provides a library integration that enables HTTP client spans and HTTP client metrics for the Apache HttpClient.",
      "library_link": "https://hc.apache.org/index.html",
      "name": "apache-httpclient-5.2",
      "scope": {
        "name": "io.opentelemetry.apache-httpclient-5.2"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/apache-httpclient/apache-httpclient-5.2",
      "target_versions": {
        "library": [
          "org.apache.httpcomponents.client5:httpclient5:5.2.1"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.resend_count",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enables experimental `apache-shenyu.meta.` prefixed span attributes `app-name`, `service-name`, `context-path`, `param-types`, `id`, `method-name`, `rpc-type`, `path` and `rpc-ext`.\n",
          "name": "otel.instrumentation.apache-shenyu.experimental-span-attributes",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation does not emit telemetry on its own. Instead, it augments existing HTTP server spans and HTTP server metrics with the HTTP route and Shenyu specific attributes.\n",
      "library_link": "https://shenyu.apache.org/",
      "name": "apache-shenyu-2.4",
      "scope": {
        "name": "io.opentelemetry.apache-shenyu-2.4"
      },
      "semconv": [],
      "source_path": "instrumentation/apache-shenyu-2.4",
      "target_versions": {
        "javaagent": [
          "org.apache.shenyu:shenyu-web:[2.4.0,)"
        ]
      }
    },
    {
      "description": "This instrumentation enables HTTP client spans and metrics for the Armeria HTTP client, and HTTP server spans and metrics for the Armeria HTTP server.\n",
      "library_link": "https://armeria.dev/",
      "name": "armeria-1.3",
      "scope": {
        "name": "io.opentelemetry.armeria-1.3"
      },
      "semconv": [
        "Client",
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/armeria/armeria-1.3",
      "target_versions": {
        "javaagent": [
          "com.linecorp.armeria:armeria:[1.3.0,)"
        ],
        "library": [
          "com.linecorp.armeria:armeria:1.3.0"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            },
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "http.route",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.scheme",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "Duration of HTTP server requests.",
              "name": "http.server.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            },
            {
              "attributes": [
                {
                  "name": "client.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "http.route",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.path",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.query",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.scheme",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "user_agent.original",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "SERVER"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "description": "This instrumentation enables RPC client spans and metrics for the Armeria gRPC client, and RPC server spans and metrics for the Armeria gRPC server.\n",
      "library_link": "https://armeria.dev/",
      "name": "armeria-grpc-1.14",
      "scope": {
        "name": "io.opentelemetry.armeria-grpc-1.14"
      },
      "semconv": [
        "Aws",
        "Database Client",
        "Rpc"
      ],
      "source_path": "instrumentation/armeria/armeria-grpc-1.14",
      "target_versions": {
        "javaagent": [
          "com.linecorp.armeria:armeria-grpc:[1.14.0,)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "rpc.grpc.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "rpc.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.service",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.system",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "CLIENT"
            },
            {
              "attributes": [
                {
                  "name": "rpc.grpc.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "rpc.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.service",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.system",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "SERVER"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "description": "This instrumentation enables HTTP client spans and HTTP client metrics for version 1 of the AsyncHttpClient (AHC) HTTP client.",
      "library_link": "https://github.com/AsyncHttpClient/async-http-client",
      "name": "async-http-client-1.9",
      "scope": {
        "name": "io.opentelemetry.async-http-client-1.9"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/async-http-client/async-http-client-1.9",
      "target_versions": {
        "javaagent": [
          "com.ning:async-http-client:[1.9.0,)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "description": "This instrumentation enables HTTP client spans and HTTP client metrics for version 2 of the AsyncHttpClient (AHC) HTTP client.",
      "library_link": "https://github.com/AsyncHttpClient/async-http-client",
      "name": "async-http-client-2.0",
      "scope": {
        "name": "io.opentelemetry.async-http-client-2.0"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/async-http-client/async-http-client-2.0",
      "target_versions": {
        "javaagent": [
          "org.asynchttpclient:async-http-client:[2.0.0,)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "description": "This instrumentation does not emit telemetry on its own. Instead, it hooks into the Avaje Jex Context to extract the HTTP route and attach it to existing HTTP server spans and HTTP server metrics.\n",
      "library_link": "https://avaje.io/jex/",
      "minimum_java_version": 21,
      "name": "avaje-jex-3.0",
      "scope": {
        "name": "io.opentelemetry.avaje-jex-3.0"
      },
      "semconv": [],
      "source_path": "instrumentation/avaje-jex-3.0",
      "target_versions": {
        "javaagent": [
          "io.avaje:avaje-jex:[3.0,)"
        ]
      }
    },
    {
      "configurations": [
        {
          "default": 10000,
          "description": "Flush timeout in milliseconds.",
          "name": "otel.instrumentation.aws-lambda.flush-timeout",
          "type": "int"
        }
      ],
      "description": "Provides lightweight instrumentation of the Lambda core library, supporting all versions. It generates FaaS server spans with the `faas.invocation_id` attribute. Use this package if you only use `RequestStreamHandler` or know you don't use any event classes from `aws-lambda-java-events`. This also includes when you are using `aws-serverless-java-container` to run e.g., a Spring Boot application on Lambda.\nFor custom wrappers when using library instrumentation, you can configure the `OTEL_INSTRUMENTATION_AWS_LAMBDA_HANDLER` environment variable to contain your lambda handler method (in the format `package.ClassName::methodName`) and use one of wrappers as your lambda `Handler`.\n",
      "library_link": "https://docs.aws.amazon.com/lambda/latest/dg/java-handler.html",
      "name": "aws-lambda-core-1.0",
      "scope": {
        "name": "io.opentelemetry.aws-lambda-core-1.0"
      },
      "semconv": [],
      "source_path": "instrumentation/aws-lambda/aws-lambda-core-1.0",
      "target_versions": {
        "javaagent": [
          "com.amazonaws:aws-lambda-java-core:[1.0.0,)"
        ],
        "library": [
          "com.amazonaws:aws-lambda-java-core:1.0.0"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "faas.invocation_id",
                  "type": "STRING"
                }
              ],
              "span_kind": "SERVER"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": 10000,
          "description": "Flush timeout in milliseconds.",
          "name": "otel.instrumentation.aws-lambda.flush-timeout",
          "type": "int"
        },
        {
          "default": "CONNECT,DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT,TRACE",
          "description": "Configures the instrumentation to recognize an alternative set of HTTP request methods. All other methods will be treated as `_OTHER`.\n",
          "name": "otel.instrumentation.http.known-methods",
          "type": "list"
        }
      ],
      "description": "This version of the library instrumentation is deprecated, please use the `aws-lambda-events-3.11` library instrumentation instead. This instrumentation builds on top of the `aws-lambda-core-1.0` instrumentation, expanding support to cover the Lambda library, including standard and custom event types.\n",
      "library_link": "https://docs.aws.amazon.com/lambda/latest/dg/java-handler.html",
      "name": "aws-lambda-events-2.2",
      "scope": {
        "name": "io.opentelemetry.aws-lambda-events-2.2"
      },
      "semconv": [
        "Database Client",
        "HTTP",
        "Messaging"
      ],
      "source_path": "instrumentation/aws-lambda/aws-lambda-events-2.2",
      "target_versions": {
        "javaagent": [
          "com.amazonaws:aws-lambda-java-core:[1.0.0,)"
        ],
        "library": [
          "com.amazonaws:aws-lambda-java-core:1.0.0",
          "com.amazonaws:aws-lambda-java-events:2.2.1"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "messaging.operation",
                  "type": "STRING"
                },
                {
                  "name": "messaging.system",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CONSUMER"
            },
            {
              "attributes": [
                {
                  "name": "faas.invocation_id",
                  "type": "STRING"
                },
                {
                  "name": "faas.trigger",
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "user_agent.original",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "SERVER"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": 10000,
          "description": "Flush timeout in milliseconds.",
          "name": "otel.instrumentation.aws-lambda.flush-timeout",
          "type": "int"
        }
      ],
      "description": "This instrumentation builds on top of the `aws-lambda-core-1.0` instrumentation, expanding support to cover the Lambda library, including standard and custom event types.\n",
      "library_link": "https://docs.aws.amazon.com/lambda/latest/dg/java-handler.html",
      "name": "aws-lambda-events-3.11",
      "scope": {
        "name": "io.opentelemetry.aws-lambda-events-3.11"
      },
      "semconv": [
        "Cloud",
        "Database Client",
        "HTTP",
        "Messaging"
      ],
      "source_path": "instrumentation/aws-lambda/aws-lambda-events-3.11",
      "target_versions": {
        "library": [
          "com.amazonaws:aws-lambda-java-core:1.0.0",
          "com.amazonaws:aws-lambda-java-events:3.11.0"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "messaging.destination.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.message.id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.operation",
                  "type": "STRING"
                },
                {
                  "name": "messaging.system",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CONSUMER"
            },
            {
              "attributes": [
                {
                  "name": "cloud.account.id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "cloud.resource_id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "faas.invocation_id",
                  "type": "STRING"
                },
                {
                  "name": "faas.trigger",
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "user_agent.original",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "SERVER"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enables the experimental span attributes `aws.agent`, `aws.bucket.name`, `aws.queue.url`, `aws.queue.name`, `aws.stream.name`, `aws.table.name`, `aws.lambda.function.arn` and `aws.lambda.function.name` for AWS SDK instrumentation.\n",
          "name": "otel.instrumentation.aws-sdk.experimental-span-attributes",
          "type": "boolean"
        },
        {
          "default": "",
          "description": "Allows configuring headers to capture as span attributes.",
          "name": "otel.instrumentation.messaging.experimental.capture-headers",
          "type": "list"
        },
        {
          "default": false,
          "description": "Enables experimental receive telemetry, which will cause consumers to start a new trace, with only a span link connecting it to the producer trace.\n",
          "name": "otel.instrumentation.messaging.experimental.receive-telemetry.enabled",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation covers the AWS SDK 1.11+ client library, enabling messaging and client spans and metrics for calls to AWS services including DynamoDB, EC2, Kinesis, Lambda, RDS, S3, secrets manager, SNS/SQS and step functions.\n",
      "library_link": "https://aws.amazon.com/sdk-for-java/",
      "name": "aws-sdk-1.11",
      "scope": {
        "name": "io.opentelemetry.aws-sdk-1.11"
      },
      "semconv": [
        "Aws",
        "Database Client",
        "HTTP",
        "Messaging"
      ],
      "source_path": "instrumentation/aws-sdk/aws-sdk-1.11",
      "target_versions": {
        "javaagent": [
          "com.amazonaws:aws-java-sdk-core:[1.10.33,)",
          "com.amazonaws:aws-java-sdk-sqs:[1.10.33,)"
        ],
        "library": [
          "com.amazonaws:aws-java-sdk-core:1.11.0",
          "com.amazonaws:aws-java-sdk-sqs:[1.11.106,1.12.583)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of database client operations.",
              "name": "db.client.operation.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "aws.agent",
                  "type": "STRING"
                },
                {
                  "name": "aws.bucket.name",
                  "type": "STRING"
                },
                {
                  "name": "aws.dynamodb.table_names",
                  "semconv": true,
                  "type": "STRING_ARRAY"
                },
                {
                  "name": "aws.lambda.function.arn",
                  "type": "STRING"
                },
                {
                  "name": "aws.lambda.function.name",
                  "type": "STRING"
                },
                {
                  "name": "aws.lambda.resource_mapping.id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "aws.queue.name",
                  "type": "STRING"
                },
                {
                  "name": "aws.queue.url",
                  "type": "STRING"
                },
                {
                  "name": "aws.request_id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "aws.sns.topic.arn",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "aws.step_functions.activity.arn",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "aws.step_functions.state_machine.arn",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "aws.stream.name",
                  "type": "STRING"
                },
                {
                  "name": "aws.table.name",
                  "type": "STRING"
                },
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "messaging.destination.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.service",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.system",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            },
            {
              "attributes": [
                {
                  "name": "aws.agent",
                  "type": "STRING"
                },
                {
                  "name": "aws.queue.url",
                  "type": "STRING"
                },
                {
                  "name": "aws.request_id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "messaging.destination.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.message.id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.operation",
                  "type": "STRING"
                },
                {
                  "name": "messaging.system",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.service",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.system",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CONSUMER"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Determines whether errors returned by each individual HTTP request should be recorded as events for the SDK span.",
          "name": "otel.instrumentation.aws-sdk.experimental-record-individual-http-error",
          "type": "boolean"
        },
        {
          "default": false,
          "description": "Enables experimental span attributes `aws.agent`, `aws.lambda.function.arn` and `aws.lambda.function.name` for AWS SDK instrumentation.\n",
          "name": "otel.instrumentation.aws-sdk.experimental-span-attributes",
          "type": "boolean"
        },
        {
          "default": false,
          "description": "Determines whether the configured TextMapPropagator should be used to inject into supported messaging attributes (for SQS).",
          "name": "otel.instrumentation.aws-sdk.experimental-use-propagator-for-messaging",
          "type": "boolean"
        },
        {
          "default": false,
          "description": "Determines whether Generative AI events include full content of user and assistant messages. Note that full content can have data privacy and size concerns and care should be taken when enabling this\n",
          "name": "otel.instrumentation.genai.capture-message-content",
          "type": "boolean"
        },
        {
          "default": "",
          "description": "Allows configuring headers to capture as span attributes.",
          "name": "otel.instrumentation.messaging.experimental.capture-headers",
          "type": "list"
        },
        {
          "default": false,
          "description": "Enables experimental receive telemetry, which will cause consumers to start a new trace, with only a span link connecting it to the producer trace.\n",
          "name": "otel.instrumentation.messaging.experimental.receive-telemetry.enabled",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation covers the AWS SDK 2.2+ client library, enabling messaging and client spans and metrics for calls to AWS services including DynamoDB, EC2, Kinesis, Lambda, RDS, S3, SNS/SQS and Bedrock.\n",
      "library_link": "https://aws.amazon.com/sdk-for-java/",
      "name": "aws-sdk-2.2",
      "scope": {
        "name": "io.opentelemetry.aws-sdk-2.2"
      },
      "semconv": [
        "Aws",
        "Database Client",
        "HTTP",
        "Messaging"
      ],
      "source_path": "instrumentation/aws-sdk/aws-sdk-2.2",
      "target_versions": {
        "javaagent": [
          "software.amazon.awssdk:aws-core:[2.2.0,)",
          "software.amazon.awssdk:bedrock-runtime:[2.25.63,)",
          "software.amazon.awssdk:lambda:[2.17.0,)",
          "software.amazon.awssdk:sns:[2.2.0,)",
          "software.amazon.awssdk:sqs:[2.2.0,)"
        ],
        "library": [
          "software.amazon.awssdk:aws-core:2.2.0",
          "software.amazon.awssdk:aws-json-protocol:2.2.0",
          "software.amazon.awssdk:lambda:2.2.0",
          "software.amazon.awssdk:sns:2.2.0",
          "software.amazon.awssdk:sqs:2.2.0"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "Duration of database client operations.",
              "name": "db.client.operation.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "aws.agent",
                  "type": "STRING"
                },
                {
                  "name": "aws.bucket.name",
                  "type": "STRING"
                },
                {
                  "name": "aws.dynamodb.global_secondary_indexes",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "aws.dynamodb.limit",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "aws.dynamodb.provisioned_throughput.read_capacity_units",
                  "type": "STRING"
                },
                {
                  "name": "aws.dynamodb.provisioned_throughput.write_capacity_units",
                  "type": "STRING"
                },
                {
                  "name": "aws.dynamodb.select",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "aws.lambda.function.arn",
                  "type": "STRING"
                },
                {
                  "name": "aws.lambda.function.name",
                  "type": "STRING"
                },
                {
                  "name": "aws.lambda.resource_mapping.id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "aws.queue.name",
                  "type": "STRING"
                },
                {
                  "name": "aws.queue.url",
                  "type": "STRING"
                },
                {
                  "name": "aws.request_id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "aws.secretsmanager.secret.arn",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "aws.sns.topic.arn",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "aws.step_functions.activity.arn",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "aws.step_functions.state_machine.arn",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "aws.stream.name",
                  "type": "STRING"
                },
                {
                  "name": "aws.table.name",
                  "type": "STRING"
                },
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "messaging.destination.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.service",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.system",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            },
            {
              "attributes": [
                {
                  "name": "aws.agent",
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "messaging.batch.message_count",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "messaging.destination.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.message.id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.operation",
                  "type": "STRING"
                },
                {
                  "name": "messaging.system",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.service",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.system",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CONSUMER"
            },
            {
              "attributes": [
                {
                  "name": "aws.agent",
                  "type": "STRING"
                },
                {
                  "name": "aws.queue.url",
                  "type": "STRING"
                },
                {
                  "name": "aws.request_id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "messaging.destination.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.message.id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.operation",
                  "type": "STRING"
                },
                {
                  "name": "messaging.system",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.service",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.system",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "PRODUCER"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "description": "This instrumentation enables context propagation for the Azure Core library, it does not emit any telemetry on its own.",
      "library_link": "https://learn.microsoft.com/en-us/java/api/overview/azure/core-readme?view=azure-java-stable",
      "name": "azure-core-1.14",
      "scope": {
        "name": "io.opentelemetry.azure-core-1.14"
      },
      "semconv": [],
      "source_path": "instrumentation/azure-core/azure-core-1.14",
      "target_versions": {
        "javaagent": [
          "com.azure:azure-core:[1.14.0,1.19.0)"
        ]
      }
    },
    {
      "description": "This instrumentation enables context propagation for the Azure Core library, it does not emit any telemetry on its own.",
      "library_link": "https://learn.microsoft.com/en-us/java/api/overview/azure/core-readme?view=azure-java-stable",
      "name": "azure-core-1.19",
      "scope": {
        "name": "io.opentelemetry.azure-core-1.19"
      },
      "semconv": [],
      "source_path": "instrumentation/azure-core/azure-core-1.19",
      "target_versions": {
        "javaagent": [
          "com.azure:azure-core:[1.19.0,1.36.0)"
        ]
      }
    },
    {
      "description": "This instrumentation enables context propagation for the Azure Core library, it does not emit any telemetry on its own.",
      "library_link": "https://learn.microsoft.com/en-us/java/api/overview/azure/core-readme?view=azure-java-stable",
      "name": "azure-core-1.36",
      "scope": {
        "name": "io.opentelemetry.azure-core-1.36"
      },
      "semconv": [],
      "source_path": "instrumentation/azure-core/azure-core-1.36",
      "target_versions": {
        "javaagent": [
          "com.azure:azure-core:[1.36.0,)"
        ]
      }
    },
    {
      "description": "The c3p0 instrumentation provides connection pool metrics for c3p0 data sources.",
      "library_link": "https://github.com/swaldman/c3p0",
      "name": "c3p0-0.9",
      "scope": {
        "name": "io.opentelemetry.c3p0-0.9"
      },
      "semconv": [
        "Database Client"
      ],
      "source_path": "instrumentation/c3p0-0.9",
      "target_versions": {
        "javaagent": [
          "com.mchange:c3p0:(,)"
        ],
        "library": [
          "com.mchange:c3p0:0.9.2"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.client.connection.state",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The number of connections that are currently in state described by the state attribute.",
              "name": "db.client.connection.count",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "connection"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The number of current pending requests for an open connection.",
              "name": "db.client.connection.pending_requests",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "request"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enable the capture of experimental `camel.uri`, `camel.kafka.partitionKey`, `camel.kafka.key` and `camel.kafka.offset` span attributes.\n",
          "name": "otel.instrumentation.camel.experimental-span-attributes",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables tracing for Apache Camel 2.x applications by generating spans for each route execution. For Camel versions 3.5 and newer, users should instead use the native 'camel-opentelemetry' component provided directly by the Camel project.\n",
      "library_link": "https://camel.apache.org/",
      "name": "camel-2.20",
      "scope": {
        "name": "io.opentelemetry.camel-2.20"
      },
      "semconv": [
        "Database Client",
        "HTTP",
        "Messaging"
      ],
      "source_path": "instrumentation/camel-2.20",
      "target_versions": {
        "javaagent": [
          "org.apache.camel:camel-core:[2.19,3)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.namespace",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.query.text",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            },
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.destination.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.message.id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "INTERNAL"
            },
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "SERVER"
            }
          ],
          "when": "default"
        },
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "camel.uri",
                  "type": "STRING"
                },
                {
                  "name": "db.name",
                  "type": "STRING"
                },
                {
                  "name": "db.statement",
                  "type": "STRING"
                },
                {
                  "name": "db.system",
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            },
            {
              "attributes": [
                {
                  "name": "camel.uri",
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.destination.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.message.id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "INTERNAL"
            },
            {
              "attributes": [
                {
                  "name": "camel.uri",
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "SERVER"
            }
          ],
          "when": "otel.instrumentation.camel.experimental-span-attributes=true"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": true,
          "description": "Enables statement sanitization for database queries.",
          "name": "otel.instrumentation.common.db-statement-sanitizer.enabled",
          "type": "boolean"
        }
      ],
      "description": "Instruments the Cassandra database client, providing database client spans and metrics for Cassandra queries.\n",
      "library_link": "https://github.com/apache/cassandra-java-driver",
      "name": "cassandra-3.0",
      "scope": {
        "name": "io.opentelemetry.cassandra-3.0"
      },
      "semconv": [
        "Database Client",
        "Network"
      ],
      "source_path": "instrumentation/cassandra/cassandra-3.0",
      "target_versions": {
        "javaagent": [
          "com.datastax.cassandra:cassandra-driver-core:[3.0,4.0)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.collection.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.namespace",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.query.text",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": true,
          "description": "Enables statement sanitization for database queries.",
          "name": "otel.instrumentation.common.db-statement-sanitizer.enabled",
          "type": "boolean"
        }
      ],
      "description": "Instruments the Cassandra database client, providing database client spans and metrics for Cassandra queries.\n",
      "library_link": "https://github.com/apache/cassandra-java-driver",
      "name": "cassandra-4.0",
      "scope": {
        "name": "io.opentelemetry.cassandra-4.0"
      },
      "semconv": [
        "Cassandra",
        "Database Client",
        "Network"
      ],
      "source_path": "instrumentation/cassandra/cassandra-4.0",
      "target_versions": {
        "javaagent": [
          "com.datastax.oss:java-driver-core:[4.0,4.4)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "cassandra.consistency.level",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "cassandra.coordinator.dc",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "cassandra.coordinator.id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "cassandra.page.size",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "cassandra.query.idempotent",
                  "semconv": true,
                  "type": "BOOLEAN"
                },
                {
                  "name": "cassandra.speculative_execution.count",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "db.collection.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.namespace",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.query.text",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": true,
          "description": "Enables statement sanitization for database queries.",
          "name": "otel.instrumentation.common.db-statement-sanitizer.enabled",
          "type": "boolean"
        }
      ],
      "description": "Instruments the Cassandra database client, providing database client spans and metrics for Cassandra queries.\n",
      "library_link": "https://github.com/apache/cassandra-java-driver",
      "name": "cassandra-4.4",
      "scope": {
        "name": "io.opentelemetry.cassandra-4.4"
      },
      "semconv": [
        "Cassandra",
        "Database Client",
        "Network"
      ],
      "source_path": "instrumentation/cassandra/cassandra-4.4",
      "target_versions": {
        "javaagent": [
          "com.datastax.oss:java-driver-core:[4.4,]"
        ],
        "library": [
          "com.datastax.oss:java-driver-core:4.4.0"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "cassandra.consistency.level",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "cassandra.coordinator.dc",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "cassandra.coordinator.id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "cassandra.page.size",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "cassandra.query.idempotent",
                  "semconv": true,
                  "type": "BOOLEAN"
                },
                {
                  "name": "cassandra.speculative_execution.count",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "db.collection.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.namespace",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.query.text",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": true,
          "description": "Enables statement sanitization for database queries.",
          "name": "otel.instrumentation.common.db-statement-sanitizer.enabled",
          "type": "boolean"
        }
      ],
      "description": "Instruments the V1 ClickHouseClient, providing database client spans and metrics.",
      "library_link": "https://github.com/ClickHouse/clickhouse-java",
      "name": "clickhouse-client-0.5",
      "scope": {
        "name": "io.opentelemetry.clickhouse-client-0.5"
      },
      "semconv": [
        "Database Client"
      ],
      "source_path": "instrumentation/clickhouse-client-0.5",
      "target_versions": {
        "javaagent": [
          "com.clickhouse.client:clickhouse-client:[0.5.0,)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "db.namespace",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of database client operations.",
              "name": "db.client.operation.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.namespace",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.query.text",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.response.status_code",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "description": "This instrumentation enables database client spans and database client metrics for Couchbase 2.0 operations. It automatically traces key-value operations (get, upsert, replace, remove), view queries, N1QL queries, and cluster management operations.\n",
      "library_link": "https://github.com/couchbase/couchbase-java-client",
      "name": "couchbase-2.0",
      "scope": {
        "name": "io.opentelemetry.couchbase-2.0"
      },
      "semconv": [
        "Database Client"
      ],
      "source_path": "instrumentation/couchbase/couchbase-2.0",
      "target_versions": {
        "javaagent": [
          "com.couchbase.client:java-client:[2,3)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "Duration of database client operations.",
              "name": "db.client.operation.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.namespace",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.query.text",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enables experimental span attributes `couchbase.operation_id` and `couchbase.local.address`. Different operation types receive different experimental attributes.\n",
          "name": "otel.instrumentation.couchbase.experimental-span-attributes",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables database client spans and database client metrics for Couchbase 2.6 operations. It automatically traces key-value operations (get, upsert, replace, remove), view queries, N1QL queries, and cluster management operations.\n",
      "library_link": "https://github.com/couchbase/couchbase-java-client",
      "name": "couchbase-2.6",
      "scope": {
        "name": "io.opentelemetry.couchbase-2.6"
      },
      "semconv": [
        "Database Client",
        "Network"
      ],
      "source_path": "instrumentation/couchbase/couchbase-2.6",
      "target_versions": {
        "javaagent": [
          "com.couchbase.client:java-client:[2.6.0,3)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of database client operations.",
              "name": "db.client.operation.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.namespace",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.query.text",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.type",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        },
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "couchbase.local.address",
                  "type": "STRING"
                },
                {
                  "name": "couchbase.operation_id",
                  "type": "STRING"
                },
                {
                  "name": "db.name",
                  "type": "STRING"
                },
                {
                  "name": "db.operation",
                  "type": "STRING"
                },
                {
                  "name": "db.statement",
                  "type": "STRING"
                },
                {
                  "name": "db.system",
                  "type": "STRING"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.type",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "otel.instrumentation.couchbase.experimental-span-attributes=true"
        }
      ]
    },
    {
      "description": "Couchbase instrumentation is owned by the Couchbase project for versions 3+. This instrumentation automatically configures the instrumentation provided by the Couchbase library.\n",
      "library_link": "https://github.com/couchbase/couchbase-java-client",
      "name": "couchbase-3.1",
      "scope": {
        "name": "io.opentelemetry.couchbase-3.1"
      },
      "semconv": [],
      "source_path": "instrumentation/couchbase/couchbase-3.1",
      "target_versions": {
        "javaagent": [
          "com.couchbase.client:java-client:[3.1,3.1.6)"
        ]
      }
    },
    {
      "description": "Couchbase instrumentation is owned by the Couchbase project for versions 3+. This instrumentation automatically configures the instrumentation provided by the Couchbase library.\n",
      "library_link": "https://github.com/couchbase/couchbase-java-client",
      "name": "couchbase-3.1.6",
      "scope": {
        "name": "io.opentelemetry.couchbase-3.1.6"
      },
      "semconv": [],
      "source_path": "instrumentation/couchbase/couchbase-3.1.6",
      "target_versions": {
        "javaagent": [
          "com.couchbase.client:java-client:[3.1.6,3.2.0)"
        ]
      }
    },
    {
      "description": "Couchbase instrumentation is owned by the Couchbase project for versions 3+. This instrumentation automatically configures the instrumentation provided by the Couchbase library.\n",
      "library_link": "https://github.com/couchbase/couchbase-java-client",
      "name": "couchbase-3.2",
      "scope": {
        "name": "io.opentelemetry.couchbase-3.2"
      },
      "semconv": [],
      "source_path": "instrumentation/couchbase/couchbase-3.2",
      "target_versions": {
        "javaagent": [
          "com.couchbase.client:java-client:[3.2.0,)"
        ]
      }
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enables the dropwizard metrics instrumentation.",
          "name": "otel.instrumentation.dropwizard-metrics.enabled",
          "type": "boolean"
        }
      ],
      "description": "The dropwizard-metrics instrumentation for the dropwizard/codahale metrics library produces OpenTelemetry compliant versions of the metrics generated by the Dropwizard MetricRegistry.\nThe Dropwizard metrics API does not have a concept of metric labels/tags/attributes, thus the data produced by this integration might be of very low quality, depending on how the API is used in the instrumented application.\n",
      "disabled_by_default": true,
      "library_link": "https://metrics.dropwizard.io/4.2.0/",
      "name": "dropwizard-metrics-4.0",
      "scope": {
        "name": "io.opentelemetry.dropwizard-metrics-4.0"
      },
      "semconv": [],
      "source_path": "instrumentation/dropwizard/dropwizard-metrics-4.0",
      "target_versions": {
        "javaagent": [
          "io.dropwizard.metrics:metrics-core:[4.0.0,)"
        ]
      }
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enables the creation of experimental view (INTERNAL) spans.",
          "name": "otel.instrumentation.common.experimental.view-telemetry.enabled",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables the creation of spans for Dropwizard views.",
      "library_link": "https://www.dropwizard.io/en/latest/manual/views.html",
      "name": "dropwizard-views-0.7",
      "scope": {
        "name": "io.opentelemetry.dropwizard-views-0.7"
      },
      "semconv": [],
      "source_path": "instrumentation/dropwizard/dropwizard-views-0.7",
      "target_versions": {
        "javaagent": [
          "io.dropwizard:dropwizard-views:(,3.0.0)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [],
              "span_kind": "INTERNAL"
            }
          ],
          "when": "otel.instrumentation.common.experimental.view-telemetry.enabled=true"
        }
      ]
    },
    {
      "description": "This instrumentation extends the elasticsearch-rest-7.0 instrumentation by adding additional `db.elasticsearch.path_parts.id` and `db.elasticsearch.path_parts.index` attributes to Elasticsearch database client spans. Versions 8.10 and later of the client have native support for OpenTelemetry.\n",
      "library_link": "https://www.elastic.co/docs/reference/elasticsearch/clients/java",
      "name": "elasticsearch-api-client-7.16",
      "scope": {
        "name": "io.opentelemetry.elasticsearch-api-client-7.16"
      },
      "semconv": [
        "Database Client"
      ],
      "source_path": "instrumentation/elasticsearch/elasticsearch-api-client-7.16",
      "target_versions": {
        "javaagent": [
          "co.elastic.clients:elasticsearch-java:[7.16,7.17.20)",
          "co.elastic.clients:elasticsearch-java:[8.0.0,8.10)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of database client operations.",
              "name": "db.client.operation.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.elasticsearch.path_parts.id",
                  "type": "STRING"
                },
                {
                  "name": "db.elasticsearch.path_parts.index",
                  "type": "STRING"
                },
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enable the capture of search query bodies. It is important to note that Elasticsearch queries may contain personal or sensitive information.\n",
          "name": "otel.instrumentation.elasticsearch.capture-search-query",
          "type": "boolean"
        },
        {
          "default": "CONNECT,DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT,TRACE",
          "description": "Configures the instrumentation to recognize an alternative set of HTTP request methods. All other methods will be treated as `_OTHER`.\n",
          "name": "otel.instrumentation.http.known-methods",
          "type": "list"
        }
      ],
      "description": "This instrumentation enables database client spans and database client metrics for Elasticsearch REST clients.",
      "library_link": "https://www.elastic.co/guide/en/elasticsearch/client/java-rest",
      "name": "elasticsearch-rest-5.0",
      "scope": {
        "name": "io.opentelemetry.elasticsearch-rest-5.0"
      },
      "semconv": [
        "Database Client"
      ],
      "source_path": "instrumentation/elasticsearch/elasticsearch-rest-5.0",
      "target_versions": {
        "javaagent": [
          "org.elasticsearch.client:elasticsearch-rest-client:[5.0,6.4)",
          "org.elasticsearch.client:rest:[5.0,6.4)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of database client operations.",
              "name": "db.client.operation.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enable the capture of search query bodies. It is important to note that Elasticsearch queries may contain personal or sensitive information.\n",
          "name": "otel.instrumentation.elasticsearch.capture-search-query",
          "type": "boolean"
        },
        {
          "default": "CONNECT,DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT,TRACE",
          "description": "Configures the instrumentation to recognize an alternative set of HTTP request methods. All other methods will be treated as `_OTHER`.\n",
          "name": "otel.instrumentation.http.known-methods",
          "type": "list"
        }
      ],
      "description": "This instrumentation enables database client spans and database client metrics for Elasticsearch REST clients.",
      "library_link": "https://www.elastic.co/guide/en/elasticsearch/client/java-rest",
      "name": "elasticsearch-rest-6.4",
      "scope": {
        "name": "io.opentelemetry.elasticsearch-rest-6.4"
      },
      "semconv": [
        "Database Client"
      ],
      "source_path": "instrumentation/elasticsearch/elasticsearch-rest-6.4",
      "target_versions": {
        "javaagent": [
          "org.elasticsearch.client:elasticsearch-rest-client:[6.4,7.0)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of database client operations.",
              "name": "db.client.operation.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enable the capture of search query bodies. It is important to note that Elasticsearch queries may contain personal or sensitive information.\n",
          "name": "otel.instrumentation.elasticsearch.capture-search-query",
          "type": "boolean"
        },
        {
          "default": "CONNECT,DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT,TRACE",
          "description": "Configures the instrumentation to recognize an alternative set of HTTP request methods. All other methods will be treated as `_OTHER`.\n",
          "name": "otel.instrumentation.http.known-methods",
          "type": "list"
        }
      ],
      "description": "This instrumentation enables database client spans and database client metrics for Elasticsearch REST clients.",
      "library_link": "https://www.elastic.co/guide/en/elasticsearch/client/java-rest",
      "name": "elasticsearch-rest-7.0",
      "scope": {
        "name": "io.opentelemetry.elasticsearch-rest-7.0"
      },
      "semconv": [
        "Database Client"
      ],
      "source_path": "instrumentation/elasticsearch/elasticsearch-rest-7.0",
      "target_versions": {
        "javaagent": [
          "org.elasticsearch.client:elasticsearch-rest-client:[7.0,)"
        ],
        "library": [
          "org.elasticsearch.client:elasticsearch-rest-client:7.0.0"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of database client operations.",
              "name": "db.client.operation.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enable the capture of the experimental span attributes `elasticsearch.action`, `elasticsearch.id`, `elasticsearch.request`, `elasticsearch.request.indices`, `elasticsearch.request.write.routing`, `elasticsearch.request.write.type`, `elasticsearch.response.status`, `elasticsearch.shard.replication.failed`, `elasticsearch.shard.replication.successful`, `elasticsearch.shard.replication.total`, `elasticsearch.type`, and `elasticsearch.version`.\n",
          "name": "otel.instrumentation.elasticsearch.experimental-span-attributes",
          "type": "boolean"
        },
        {
          "default": "CONNECT,DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT,TRACE",
          "description": "Configures the instrumentation to recognize an alternative set of HTTP request methods. All other methods will be treated as `_OTHER`.\n",
          "name": "otel.instrumentation.http.known-methods",
          "type": "list"
        }
      ],
      "description": "This instrumentation enables database client spans and database client metrics for Elasticsearch transport client requests. Each call produces a span named after the Elasticsearch action, enriched with transport-specific attributes.\n",
      "library_link": "https://www.elastic.co/guide/en/elasticsearch/client/java-api/",
      "name": "elasticsearch-transport-5.0",
      "scope": {
        "name": "io.opentelemetry.elasticsearch-transport-5.0"
      },
      "semconv": [
        "Database Client"
      ],
      "source_path": "instrumentation/elasticsearch/elasticsearch-transport-5.0",
      "target_versions": {
        "javaagent": [
          "org.elasticsearch.client:transport:[5.0.0,5.3.0)",
          "org.elasticsearch:elasticsearch:[5.0.0,5.3.0)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "Duration of database client operations.",
              "name": "db.client.operation.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        },
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.operation",
                  "type": "STRING"
                },
                {
                  "name": "db.system",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.action",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.id",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.request",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.request.indices",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.request.write.type",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.response.status",
                  "type": "LONG"
                },
                {
                  "name": "elasticsearch.shard.replication.failed",
                  "type": "LONG"
                },
                {
                  "name": "elasticsearch.shard.replication.successful",
                  "type": "LONG"
                },
                {
                  "name": "elasticsearch.shard.replication.total",
                  "type": "LONG"
                },
                {
                  "name": "elasticsearch.type",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.version",
                  "type": "LONG"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "otel.instrumentation.elasticsearch.experimental-span-attributes=true"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enable the capture of `elasticsearch.action`, `elasticsearch.id`, `elasticsearch.request`, `elasticsearch.request.indices`, `elasticsearch.request.search.types`, `elasticsearch.request.write.type`, `elasticsearch.request.write.version`, `elasticsearch.response.status`, `elasticsearch.shard.broadcast.failed`, `elasticsearch.shard.broadcast.successful`, `elasticsearch.shard.broadcast.total`, `elasticsearch.shard.replication.failed`, `elasticsearch.shard.replication.successful`, `elasticsearch.shard.replication.total`, `elasticsearch.type`, and `elasticsearch.version` experimental span attributes.\n",
          "name": "otel.instrumentation.elasticsearch.experimental-span-attributes",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables database client spans and database client metrics for Elasticsearch transport client requests. Each call produces a span named after the Elasticsearch action, enriched with transport-specific attributes.\n",
      "library_link": "https://www.elastic.co/guide/en/elasticsearch/client/java-api/",
      "name": "elasticsearch-transport-5.3",
      "scope": {
        "name": "io.opentelemetry.elasticsearch-transport-5.3"
      },
      "semconv": [
        "Database Client"
      ],
      "source_path": "instrumentation/elasticsearch/elasticsearch-transport-5.3",
      "target_versions": {
        "javaagent": [
          "org.elasticsearch.client:transport:[5.3.0,6.0.0)",
          "org.elasticsearch:elasticsearch:[5.3.0,6.0.0)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "Duration of database client operations.",
              "name": "db.client.operation.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        },
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.operation",
                  "type": "STRING"
                },
                {
                  "name": "db.system",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.action",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.id",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.request",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.request.indices",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.request.search.types",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.request.write.type",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.request.write.version",
                  "type": "LONG"
                },
                {
                  "name": "elasticsearch.response.status",
                  "type": "LONG"
                },
                {
                  "name": "elasticsearch.shard.broadcast.failed",
                  "type": "LONG"
                },
                {
                  "name": "elasticsearch.shard.broadcast.successful",
                  "type": "LONG"
                },
                {
                  "name": "elasticsearch.shard.broadcast.total",
                  "type": "LONG"
                },
                {
                  "name": "elasticsearch.shard.replication.failed",
                  "type": "LONG"
                },
                {
                  "name": "elasticsearch.shard.replication.successful",
                  "type": "LONG"
                },
                {
                  "name": "elasticsearch.shard.replication.total",
                  "type": "LONG"
                },
                {
                  "name": "elasticsearch.type",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.version",
                  "type": "LONG"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "otel.instrumentation.elasticsearch.experimental-span-attributes=true"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enable the capture of `elasticsearch.action`, `elasticsearch.id`, `elasticsearch.request`, `elasticsearch.request.indices`, `elasticsearch.request.write.type`, `elasticsearch.request.write.version`, `elasticsearch.response.status`, `elasticsearch.shard.replication.failed`, `elasticsearch.shard.replication.successful`, `elasticsearch.shard.replication.total`, `elasticsearch.type`, and `elasticsearch.version` experimental span attributes.\n",
          "name": "otel.instrumentation.elasticsearch.experimental-span-attributes",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables database client spans and database client metrics for Elasticsearch transport client requests. Each call produces a span named after the Elasticsearch action, enriched with transport-specific attributes.\n",
      "library_link": "https://www.elastic.co/guide/en/elasticsearch/client/java-api/",
      "name": "elasticsearch-transport-6.0",
      "scope": {
        "name": "io.opentelemetry.elasticsearch-transport-6.0"
      },
      "semconv": [
        "Database Client",
        "Network"
      ],
      "source_path": "instrumentation/elasticsearch/elasticsearch-transport-6.0",
      "target_versions": {
        "javaagent": [
          "org.elasticsearch.client:transport:[6.0.0,)",
          "org.elasticsearch:elasticsearch:[6.0.0,8.0.0)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "Duration of database client operations.",
              "name": "db.client.operation.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.type",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        },
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.operation",
                  "type": "STRING"
                },
                {
                  "name": "db.system",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.action",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.id",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.request",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.request.indices",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.request.write.type",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.request.write.version",
                  "type": "LONG"
                },
                {
                  "name": "elasticsearch.response.status",
                  "type": "LONG"
                },
                {
                  "name": "elasticsearch.shard.replication.failed",
                  "type": "LONG"
                },
                {
                  "name": "elasticsearch.shard.replication.successful",
                  "type": "LONG"
                },
                {
                  "name": "elasticsearch.shard.replication.total",
                  "type": "LONG"
                },
                {
                  "name": "elasticsearch.type",
                  "type": "STRING"
                },
                {
                  "name": "elasticsearch.version",
                  "type": "LONG"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.type",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "otel.instrumentation.elasticsearch.experimental-span-attributes=true"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": "",
          "description": "List of Executor subclasses to be instrumented.",
          "name": "otel.instrumentation.executors.include",
          "type": "list"
        },
        {
          "default": false,
          "description": "Whether to instrument all classes that implement the Executor interface.",
          "name": "otel.instrumentation.executors.include-all",
          "type": "boolean"
        }
      ],
      "description": "The executor instrumentation ensures that context is automatically propagated when using common Java executors (e.g., ThreadPoolExecutor, ScheduledThreadPoolExecutor, ForkJoinPool). When a task is submitted, the current context is captured and bound to the task. Then, when the task eventually runs, even if it\u2019s on a different thread, the instrumentation reactivates that context, enabling consistent correlation across concurrent and asynchronous workflows.\n",
      "name": "executors",
      "scope": {
        "name": "io.opentelemetry.executors"
      },
      "semconv": [],
      "source_path": "instrumentation/executors",
      "target_versions": {
        "javaagent": [
          "Java 8+"
        ]
      }
    },
    {
      "description": "This instrumentation for Finagle HTTP clients and servers ensures that telemetry is correctly generated by the underlying Netty instrumentation. It augments existing telemetry by bridging the gap between Finagle's abstractions and Netty's pipeline, primarily for context propagation.\n",
      "name": "finagle-http-23.11",
      "scope": {
        "name": "io.opentelemetry.finagle-http-23.11"
      },
      "semconv": [],
      "source_path": "instrumentation/finagle-http-23.11",
      "target_versions": {
        "javaagent": [
          "com.twitter:finagle-http_2.12:[23.11.0,]",
          "com.twitter:finagle-http_2.13:[23.11.0,]"
        ]
      }
    },
    {
      "description": "This instrumentation for the Finatra web framework augments the telemetry generated by the underlying Netty instrumentation. It provides more specific, high-level context, such as route information, to the spans generated by Netty.",
      "name": "finatra-2.9",
      "scope": {
        "name": "io.opentelemetry.finatra-2.9"
      },
      "semconv": [
        "Code"
      ],
      "source_path": "instrumentation/finatra-2.9",
      "target_versions": {
        "javaagent": [
          "com.twitter:finatra-http_2.11:[2.9.0,]",
          "com.twitter:finatra-http_2.12:[2.9.0,]"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "code.function",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "code.namespace",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "INTERNAL"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": true,
          "description": "Enables statement sanitization for database queries.",
          "name": "otel.instrumentation.common.db-statement-sanitizer.enabled",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables database client spans and database client metrics for Apache Geode cache operations.",
      "name": "geode-1.4",
      "scope": {
        "name": "io.opentelemetry.geode-1.4"
      },
      "semconv": [
        "Database Client"
      ],
      "source_path": "instrumentation/geode-1.4",
      "target_versions": {
        "javaagent": [
          "org.apache.geode:geode-core:[1.4.0,)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "db.namespace",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "Duration of database client operations.",
              "name": "db.client.operation.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.namespace",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.query.text",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": "",
          "description": "Used to specify a mapping from host names or IP addresses to peer services.",
          "name": "otel.instrumentation.common.peer-service-mapping",
          "type": "map"
        },
        {
          "default": "",
          "description": "List of HTTP request headers to capture in HTTP client telemetry.",
          "name": "otel.instrumentation.http.client.capture-request-headers",
          "type": "list"
        },
        {
          "default": "",
          "description": "List of HTTP response headers to capture in HTTP client telemetry.",
          "name": "otel.instrumentation.http.client.capture-response-headers",
          "type": "list"
        },
        {
          "default": false,
          "description": "Enable the capture of experimental HTTP client telemetry. Adds the `http.request.body.size` and `http.response.body.size` attributes to spans, and records `http.client.request.size` and `http.client.response.size` metrics.\n",
          "name": "otel.instrumentation.http.client.emit-experimental-telemetry",
          "type": "boolean"
        },
        {
          "default": true,
          "description": "Redact sensitive URL parameters. See https://opentelemetry.io/docs/specs/semconv/http/http-spans.",
          "name": "otel.instrumentation.http.client.experimental.redact-query-parameters",
          "type": "boolean"
        },
        {
          "default": "CONNECT,DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT,TRACE",
          "description": "Configures the instrumentation to recognize an alternative set of HTTP request methods. All other methods will be treated as `_OTHER`.\n",
          "name": "otel.instrumentation.http.known-methods",
          "type": "list"
        }
      ],
      "description": "This instrumentation enables HTTP client spans and HTTP client metrics for Google HTTP Client requests.",
      "library_link": "https://github.com/googleapis/google-http-java-client",
      "name": "google-http-client-1.19",
      "scope": {
        "name": "io.opentelemetry.google-http-client-1.19"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/google-http-client-1.19",
      "target_versions": {
        "javaagent": [
          "com.google.http-client:google-http-client:[1.19.0,)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enables the creation of experimental controller (INTERNAL) spans.",
          "name": "otel.instrumentation.common.experimental.controller-telemetry.enabled",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enriches existing HTTP server spans with HTTP route information, and optionally enables experimental controller (INTERNAL) spans for Grails applications.\n",
      "name": "grails-3.0",
      "scope": {
        "name": "io.opentelemetry.grails-3.0"
      },
      "semconv": [],
      "source_path": "instrumentation/grails-3.0",
      "target_versions": {
        "javaagent": [
          "org.grails:grails-web-url-mappings:[3.0,)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [],
              "span_kind": "INTERNAL"
            }
          ],
          "when": "otel.instrumentation.common.experimental.controller-telemetry.enabled=true"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Whether GraphQL operation name is added to the span name. WARNING: The GraphQL operation name is provided by the client and can have high cardinality. Use only when the server is not exposed to malicious clients.\n",
          "name": "otel.instrumentation.graphql.add-operation-name-to-span-name.enabled",
          "type": "boolean"
        },
        {
          "default": true,
          "description": "Enables sanitization of sensitive information from queries so they aren't added as span attributes.",
          "name": "otel.instrumentation.graphql.query-sanitizer.enabled",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables spans for GraphQL Java operations.",
      "library_link": "https://www.graphql-java.com/",
      "name": "graphql-java-12.0",
      "scope": {
        "name": "io.opentelemetry.graphql-java-12.0"
      },
      "semconv": [
        "Graphql"
      ],
      "source_path": "instrumentation/graphql-java/graphql-java-12.0",
      "target_versions": {
        "javaagent": [
          "com.graphql-java:graphql-java:[12,20)"
        ],
        "library": [
          "com.graphql-java:graphql-java:[12.0,19.+)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "graphql.document",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "graphql.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "graphql.operation.type",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "INTERNAL"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Whether GraphQL operation name is added to the span name. WARNING: The GraphQL operation name is provided by the client and can have high cardinality. Use only when the server is not exposed to malicious clients.\n",
          "name": "otel.instrumentation.graphql.add-operation-name-to-span-name.enabled",
          "type": "boolean"
        },
        {
          "default": false,
          "description": "Enables span generation for data fetchers.",
          "name": "otel.instrumentation.graphql.data-fetcher.enabled",
          "type": "boolean"
        },
        {
          "default": true,
          "description": "Enables sanitization of sensitive information from queries so they aren't added as span attributes.",
          "name": "otel.instrumentation.graphql.query-sanitizer.enabled",
          "type": "boolean"
        },
        {
          "default": false,
          "description": "Whether to create spans for trivial data fetchers. A trivial data fetcher is one that simply maps data from an object to a field.",
          "name": "otel.instrumentation.graphql.trivial-data-fetcher.enabled",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables spans for GraphQL Java operations.",
      "minimum_java_version": 11,
      "name": "graphql-java-20.0",
      "scope": {
        "name": "io.opentelemetry.graphql-java-20.0"
      },
      "semconv": [
        "Graphql"
      ],
      "source_path": "instrumentation/graphql-java/graphql-java-20.0",
      "target_versions": {
        "javaagent": [
          "com.graphql-java:graphql-java:[20,)"
        ],
        "library": [
          "com.graphql-java:graphql-java:20.0"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "graphql.document",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "graphql.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "graphql.operation.type",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "INTERNAL"
            }
          ],
          "when": "default"
        },
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "graphql.document",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "graphql.field.name",
                  "type": "STRING"
                },
                {
                  "name": "graphql.field.path",
                  "type": "STRING"
                },
                {
                  "name": "graphql.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "graphql.operation.type",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "INTERNAL"
            }
          ],
          "when": "otel.instrumentation.graphql.data-fetcher.enabled=true"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": "",
          "description": "Used to specify a mapping from host names or IP addresses to peer services.",
          "name": "otel.instrumentation.common.peer-service-mapping",
          "type": "map"
        },
        {
          "default": "CONNECT,DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT,TRACE",
          "description": "Configures the instrumentation to recognize an alternative set of HTTP request methods. All other methods will be treated as `_OTHER`.\n",
          "name": "otel.instrumentation.http.known-methods",
          "type": "list"
        },
        {
          "default": "",
          "description": "List of HTTP request headers to capture in HTTP server telemetry.",
          "name": "otel.instrumentation.http.server.capture-request-headers",
          "type": "list"
        },
        {
          "default": "",
          "description": "List of HTTP response headers to capture in HTTP server telemetry.",
          "name": "otel.instrumentation.http.server.capture-response-headers",
          "type": "list"
        },
        {
          "default": false,
          "description": "Enable the capture of experimental HTTP server telemetry. Adds the `http.request.body.size` and `http.response.body.size` attributes to spans, and records `http.server.request.body.size` and `http.server.response.body.size` metrics.\n",
          "name": "otel.instrumentation.http.server.emit-experimental-telemetry",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables HTTP server spans and HTTP server metrics for Grizzly applications.",
      "name": "grizzly-2.3",
      "scope": {
        "name": "io.opentelemetry.grizzly-2.3"
      },
      "semconv": [
        "Client",
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/grizzly-2.3",
      "target_versions": {
        "javaagent": [
          "org.glassfish.grizzly:grizzly-http:[2.3,)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.scheme",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "Duration of HTTP server requests.",
              "name": "http.server.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "client.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.path",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.query",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.scheme",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "user_agent.original",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "SERVER"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": "",
          "description": "A comma-separated list of request metadata keys. gRPC client instrumentation will capture metadata values corresponding to configured keys as span attributes.\n",
          "name": "otel.instrumentation.grpc.capture-metadata.client.request",
          "type": "list"
        },
        {
          "default": "",
          "description": "A comma-separated list of request metadata keys. gRPC server instrumentation will capture metadata values corresponding to configured keys as span attributes.\n",
          "name": "otel.instrumentation.grpc.capture-metadata.server.request",
          "type": "list"
        },
        {
          "default": true,
          "description": "Determines whether to emit a span event for each individual message received and sent.",
          "name": "otel.instrumentation.grpc.emit-message-events",
          "type": "boolean"
        },
        {
          "default": false,
          "description": "Enable the capture of experimental span attributes `grpc.received.message_count`, `grpc.sent.message_count` and `grpc.canceled`.\n",
          "name": "otel.instrumentation.grpc.experimental-span-attributes",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables RPC client spans and metrics, and RPC server spans and metrics for gRPC version 1.6 and above.",
      "name": "grpc-1.6",
      "scope": {
        "name": "io.opentelemetry.grpc-1.6"
      },
      "semconv": [
        "Aws",
        "Database Client",
        "Network",
        "Rpc"
      ],
      "source_path": "instrumentation/grpc-1.6",
      "target_versions": {
        "javaagent": [
          "io.grpc:grpc-core:[1.6.0,)"
        ],
        "library": [
          "io.grpc:grpc-core:1.6.0"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "rpc.grpc.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "rpc.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.service",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.system",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "The duration of an outbound RPC invocation.",
              "name": "rpc.client.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "ms"
            },
            {
              "attributes": [
                {
                  "name": "network.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.grpc.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "rpc.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.service",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.system",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "The duration of an inbound RPC invocation.",
              "name": "rpc.server.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "ms"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "rpc.grpc.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "rpc.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.service",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.system",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "CLIENT"
            },
            {
              "attributes": [
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.grpc.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "rpc.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.service",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.system",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "SERVER"
            }
          ],
          "when": "default"
        },
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "rpc.grpc.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "rpc.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.service",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.system",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "The duration of an outbound RPC invocation.",
              "name": "rpc.client.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "ms"
            },
            {
              "attributes": [
                {
                  "name": "network.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.grpc.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "rpc.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.service",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.system",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "The duration of an inbound RPC invocation.",
              "name": "rpc.server.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "ms"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "grpc.received.message_count",
                  "type": "LONG"
                },
                {
                  "name": "grpc.sent.message_count",
                  "type": "LONG"
                },
                {
                  "name": "rpc.grpc.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "rpc.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.service",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.system",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "CLIENT"
            },
            {
              "attributes": [
                {
                  "name": "grpc.received.message_count",
                  "type": "LONG"
                },
                {
                  "name": "grpc.sent.message_count",
                  "type": "LONG"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.grpc.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "rpc.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.service",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.system",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "SERVER"
            }
          ],
          "when": "otel.instrumentation.grpc.experimental-span-attributes=true"
        }
      ]
    },
    {
      "name": "guava-10.0",
      "scope": {
        "name": "io.opentelemetry.guava-10.0"
      },
      "semconv": [],
      "source_path": "instrumentation/guava-10.0",
      "target_versions": {
        "javaagent": [
          "com.google.guava:guava:[10.0,]"
        ],
        "library": [
          "com.google.guava:guava:10.0"
        ]
      }
    },
    {
      "description": "This instrumentation enables RPC server spans for GWT RPC requests.",
      "name": "gwt-2.0",
      "scope": {
        "name": "io.opentelemetry.gwt-2.0"
      },
      "semconv": [
        "Aws"
      ],
      "source_path": "instrumentation/gwt-2.0",
      "target_versions": {
        "javaagent": [
          "com.google.gwt:gwt-servlet:[2.0.0,)",
          "org.gwtproject:gwt-servlet:[2.10.0,)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "rpc.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.service",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.system",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "SERVER"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enables the addition of the experimental `hibernate.session_id` span attribute.",
          "name": "otel.instrumentation.hibernate.experimental-span-attributes",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables the generation of INTERNAL spans for Hibernate operations, including session methods (e.g., `save`, `update`, `delete`), transaction commits, and query executions.\n",
      "name": "hibernate-3.3",
      "scope": {
        "name": "io.opentelemetry.hibernate-3.3"
      },
      "semconv": [],
      "source_path": "instrumentation/hibernate/hibernate-3.3",
      "target_versions": {
        "javaagent": [
          "org.hibernate:hibernate-core:[3.3.0.GA,4.0.0.Final)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [],
              "span_kind": "INTERNAL"
            }
          ],
          "when": "default"
        },
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "hibernate.session_id",
                  "type": "STRING"
                }
              ],
              "span_kind": "INTERNAL"
            }
          ],
          "when": "otel.instrumentation.hibernate.experimental-span-attributes=true"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enables the addition of the experimental `hibernate.session_id` span attribute.",
          "name": "otel.instrumentation.hibernate.experimental-span-attributes",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables the generation of INTERNAL spans for Hibernate operations, including session methods (e.g., `save`, `update`, `delete`), transaction commits, and query executions.\n",
      "name": "hibernate-4.0",
      "scope": {
        "name": "io.opentelemetry.hibernate-4.0"
      },
      "semconv": [],
      "source_path": "instrumentation/hibernate/hibernate-4.0",
      "target_versions": {
        "javaagent": [
          "org.hibernate:hibernate-core:[4.0.0.Final,6)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [],
              "span_kind": "INTERNAL"
            }
          ],
          "when": "default"
        },
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "hibernate.session_id",
                  "type": "STRING"
                }
              ],
              "span_kind": "INTERNAL"
            }
          ],
          "when": "otel.instrumentation.hibernate.experimental-span-attributes=true"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enables the addition of the experimental `hibernate.session_id` span attribute.",
          "name": "otel.instrumentation.hibernate.experimental-span-attributes",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables the generation of INTERNAL spans for Hibernate operations, including session methods (e.g., `save`, `update`, `delete`), transaction commits, and query executions.\n",
      "minimum_java_version": 11,
      "name": "hibernate-6.0",
      "scope": {
        "name": "io.opentelemetry.hibernate-6.0"
      },
      "semconv": [],
      "source_path": "instrumentation/hibernate/hibernate-6.0",
      "target_versions": {
        "javaagent": [
          "org.hibernate:hibernate-core:[6.0.0.Final,)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [],
              "span_kind": "INTERNAL"
            }
          ],
          "when": "default"
        },
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "hibernate.session_id",
                  "type": "STRING"
                }
              ],
              "span_kind": "INTERNAL"
            }
          ],
          "when": "otel.instrumentation.hibernate.experimental-span-attributes=true"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enables the addition of the experimental `hibernate.session_id` span attribute.",
          "name": "otel.instrumentation.hibernate.experimental-span-attributes",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables the generation of INTERNAL spans for Hibernate stored procedure calls.",
      "name": "hibernate-procedure-call-4.3",
      "scope": {
        "name": "io.opentelemetry.hibernate-procedure-call-4.3"
      },
      "semconv": [],
      "source_path": "instrumentation/hibernate/hibernate-procedure-call-4.3",
      "target_versions": {
        "javaagent": [
          "org.hibernate:hibernate-core:[4.3.0.Final,)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [],
              "span_kind": "INTERNAL"
            }
          ],
          "when": "default"
        },
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "hibernate.session_id",
                  "type": "STRING"
                }
              ],
              "span_kind": "INTERNAL"
            }
          ],
          "when": "otel.instrumentation.hibernate.experimental-span-attributes=true"
        }
      ]
    },
    {
      "description": "This instrumentation does not emit any telemetry on its own. Instead, it enables context propagation for Hibernate Reactive asynchronous operations.\n",
      "name": "hibernate-reactive-1.0",
      "scope": {
        "name": "io.opentelemetry.hibernate-reactive-1.0"
      },
      "semconv": [],
      "source_path": "instrumentation/hibernate/hibernate-reactive-1.0",
      "target_versions": {
        "javaagent": [
          "org.hibernate.reactive:hibernate-reactive-core:(,)"
        ]
      }
    },
    {
      "name": "hikaricp-3.0",
      "scope": {
        "name": "io.opentelemetry.hikaricp-3.0"
      },
      "semconv": [
        "Database Client"
      ],
      "source_path": "instrumentation/hikaricp-3.0",
      "target_versions": {
        "javaagent": [
          "com.zaxxer:HikariCP:[3.0.0,)"
        ],
        "library": [
          "com.zaxxer:HikariCP:3.0.0"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.client.connection.state",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The number of connections that are currently in state described by the state attribute.",
              "name": "db.client.connection.count",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "connection"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The time it took to create a new connection.",
              "name": "db.client.connection.create_time",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The minimum number of idle open connections allowed.",
              "name": "db.client.connection.idle.min",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "connection"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The maximum number of open connections allowed.",
              "name": "db.client.connection.max",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "connection"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The number of current pending requests for an open connection.",
              "name": "db.client.connection.pending_requests",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "request"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The number of connection timeouts that have occurred trying to obtain a connection from the pool.",
              "name": "db.client.connection.timeouts",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "timeout"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The time between borrowing a connection and returning it to the pool.",
              "name": "db.client.connection.use_time",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The time it took to obtain an open connection from the pool.",
              "name": "db.client.connection.wait_time",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "name": "http-url-connection",
      "scope": {
        "name": "io.opentelemetry.http-url-connection"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/http-url-connection",
      "target_versions": {
        "javaagent": [
          "Java 8+"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enables capturing the experimental `hystrix.command`, `hystrix.circuit_open` and `hystrix.group` span attributes.",
          "name": "otel.instrumentation.hystrix.experimental-span-attributes",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables the generation of INTERNAL spans for Hystrix command executions and fallbacks.",
      "name": "hystrix-1.4",
      "scope": {
        "name": "io.opentelemetry.hystrix-1.4"
      },
      "semconv": [],
      "source_path": "instrumentation/hystrix-1.4",
      "target_versions": {
        "javaagent": [
          "com.netflix.hystrix:hystrix-core:[1.4.0,)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [],
              "span_kind": "INTERNAL"
            }
          ],
          "when": "default"
        },
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "hystrix.circuit_open",
                  "type": "BOOLEAN"
                },
                {
                  "name": "hystrix.command",
                  "type": "STRING"
                },
                {
                  "name": "hystrix.group",
                  "type": "STRING"
                }
              ],
              "span_kind": "INTERNAL"
            }
          ],
          "when": "otel.instrumentation.hystrix.experimental-span-attributes=true"
        }
      ]
    },
    {
      "name": "influxdb-2.4",
      "scope": {
        "name": "io.opentelemetry.influxdb-2.4"
      },
      "semconv": [],
      "source_path": "instrumentation/influxdb-2.4",
      "target_versions": {
        "javaagent": [
          "org.influxdb:influxdb-java:[2.4,)"
        ]
      }
    },
    {
      "minimum_java_version": 11,
      "name": "java-http-client",
      "scope": {
        "name": "io.opentelemetry.java-http-client"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/java-http-client",
      "target_versions": {
        "javaagent": [
          "Java 11+"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "name": "java-http-server",
      "scope": {
        "name": "io.opentelemetry.java-http-server"
      },
      "semconv": [],
      "source_path": "instrumentation/java-http-server",
      "target_versions": {
        "javaagent": [
          "Java 8+"
        ]
      }
    },
    {
      "minimum_java_version": 11,
      "name": "javalin-5.0",
      "scope": {
        "name": "io.opentelemetry.javalin-5.0"
      },
      "semconv": [],
      "source_path": "instrumentation/javalin-5.0",
      "target_versions": {
        "javaagent": [
          "io.javalin:javalin:[5.0.0,)"
        ]
      }
    },
    {
      "disabled_by_default": true,
      "name": "jaxrs-1.0",
      "scope": {
        "name": "io.opentelemetry.jaxrs-1.0"
      },
      "semconv": [],
      "source_path": "instrumentation/jaxrs/jaxrs-1.0",
      "target_versions": {
        "javaagent": [
          "javax.ws.rs:jsr311-api:[0.5,)"
        ]
      }
    },
    {
      "name": "jaxrs-2.0-annotations",
      "scope": {
        "name": "io.opentelemetry.jaxrs-2.0-annotations"
      },
      "semconv": [],
      "source_path": "instrumentation/jaxrs/jaxrs-2.0/jaxrs-2.0-annotations",
      "target_versions": {
        "javaagent": [
          "javax.ws.rs:javax.ws.rs-api:[,]"
        ]
      }
    },
    {
      "name": "jaxrs-2.0-cxf-3.2",
      "scope": {
        "name": "io.opentelemetry.jaxrs-2.0-cxf-3.2"
      },
      "semconv": [],
      "source_path": "instrumentation/jaxrs/jaxrs-2.0/jaxrs-2.0-cxf-3.2",
      "target_versions": {
        "javaagent": [
          "org.apache.cxf:cxf-rt-frontend-jaxrs:[3.2,4)",
          "org.apache.tomee:openejb-cxf-rs:(8,)"
        ]
      }
    },
    {
      "name": "jaxrs-2.0-jersey-2.0",
      "scope": {
        "name": "io.opentelemetry.jaxrs-2.0-jersey-2.0"
      },
      "semconv": [],
      "source_path": "instrumentation/jaxrs/jaxrs-2.0/jaxrs-2.0-jersey-2.0",
      "target_versions": {
        "javaagent": [
          "org.glassfish.jersey.containers:jersey-container-servlet:[2.0,3.0.0)",
          "org.glassfish.jersey.core:jersey-server:[2.0,3.0.0)"
        ]
      }
    },
    {
      "name": "jaxrs-2.0-resteasy-3.0",
      "scope": {
        "name": "io.opentelemetry.jaxrs-2.0-resteasy-3.0"
      },
      "semconv": [],
      "source_path": "instrumentation/jaxrs/jaxrs-2.0/jaxrs-2.0-resteasy-3.0",
      "target_versions": {
        "javaagent": [
          "org.jboss.resteasy:resteasy-jaxrs:[3.0.0.Final,3.1.0.Final)",
          "org.jboss.resteasy:resteasy-jaxrs:[3.5.0.Final,4)"
        ]
      }
    },
    {
      "name": "jaxrs-2.0-resteasy-3.1",
      "scope": {
        "name": "io.opentelemetry.jaxrs-2.0-resteasy-3.1"
      },
      "semconv": [],
      "source_path": "instrumentation/jaxrs/jaxrs-2.0/jaxrs-2.0-resteasy-3.1",
      "target_versions": {
        "javaagent": [
          "org.jboss.resteasy:resteasy-core:[4.0.0.Final,6)",
          "org.jboss.resteasy:resteasy-jaxrs:[3.1.0.Final,3.5.0.Final)"
        ]
      }
    },
    {
      "name": "jaxrs-3.0-annotations",
      "scope": {
        "name": "io.opentelemetry.jaxrs-3.0-annotations"
      },
      "semconv": [],
      "source_path": "instrumentation/jaxrs/jaxrs-3.0/jaxrs-3.0-annotations",
      "target_versions": {
        "javaagent": [
          "jakarta.ws.rs:jakarta.ws.rs-api:[3.0.0,)"
        ]
      }
    },
    {
      "minimum_java_version": 11,
      "name": "jaxrs-3.0-jersey-3.0",
      "scope": {
        "name": "io.opentelemetry.jaxrs-3.0-jersey-3.0"
      },
      "semconv": [],
      "source_path": "instrumentation/jaxrs/jaxrs-3.0/jaxrs-3.0-jersey-3.0",
      "target_versions": {
        "javaagent": [
          "org.glassfish.jersey.core:jersey-server:[3.0.0,)"
        ]
      }
    },
    {
      "minimum_java_version": 11,
      "name": "jaxrs-3.0-resteasy-6.0",
      "scope": {
        "name": "io.opentelemetry.jaxrs-3.0-resteasy-6.0"
      },
      "semconv": [],
      "source_path": "instrumentation/jaxrs/jaxrs-3.0/jaxrs-3.0-resteasy-6.0",
      "target_versions": {
        "javaagent": [
          "org.jboss.resteasy:resteasy-core:[6.0.0.Final,)"
        ]
      }
    },
    {
      "name": "jaxws-2.0",
      "scope": {
        "name": "io.opentelemetry.jaxws-2.0"
      },
      "semconv": [],
      "source_path": "instrumentation/jaxws/jaxws-2.0",
      "target_versions": {
        "javaagent": [
          "javax.xml.ws:jaxws-api:[2.0,]"
        ]
      }
    },
    {
      "name": "jaxws-2.0-axis2-1.6",
      "scope": {
        "name": "io.opentelemetry.jaxws-2.0-axis2-1.6"
      },
      "semconv": [],
      "source_path": "instrumentation/jaxws/jaxws-2.0-axis2-1.6",
      "target_versions": {
        "javaagent": [
          "org.apache.axis2:axis2-jaxws:[1.6.0,)"
        ]
      }
    },
    {
      "name": "jaxws-cxf-3.0",
      "scope": {
        "name": "io.opentelemetry.jaxws-cxf-3.0"
      },
      "semconv": [],
      "source_path": "instrumentation/jaxws/jaxws-cxf-3.0",
      "target_versions": {
        "javaagent": [
          "org.apache.cxf:cxf-rt-frontend-jaxws:[3.0.0,)"
        ]
      }
    },
    {
      "disabled_by_default": true,
      "name": "jaxws-jws-api-1.1",
      "scope": {
        "name": "io.opentelemetry.jaxws-jws-api-1.1"
      },
      "semconv": [],
      "source_path": "instrumentation/jaxws/jaxws-jws-api-1.1",
      "target_versions": {
        "javaagent": [
          "javax.jws:javax.jws-api:[1.1,]"
        ]
      }
    },
    {
      "name": "jaxws-metro-2.2",
      "scope": {
        "name": "io.opentelemetry.jaxws-metro-2.2"
      },
      "semconv": [],
      "source_path": "instrumentation/jaxws/jaxws-metro-2.2",
      "target_versions": {
        "javaagent": [
          "com.sun.xml.ws:jaxws-rt:[2.2.0.1,)"
        ]
      }
    },
    {
      "name": "jboss-logmanager-appender-1.1",
      "scope": {
        "name": "io.opentelemetry.jboss-logmanager-appender-1.1"
      },
      "semconv": [],
      "source_path": "instrumentation/jboss-logmanager/jboss-logmanager-appender-1.1",
      "target_versions": {
        "javaagent": [
          "org.jboss.logmanager:jboss-logmanager:[1.1.0.GA,)"
        ]
      }
    },
    {
      "name": "jboss-logmanager-mdc-1.1",
      "scope": {
        "name": "io.opentelemetry.jboss-logmanager-mdc-1.1"
      },
      "semconv": [],
      "source_path": "instrumentation/jboss-logmanager/jboss-logmanager-mdc-1.1",
      "target_versions": {
        "javaagent": [
          "org.jboss.logmanager:jboss-logmanager:[1.1.0.GA,)"
        ]
      }
    },
    {
      "configurations": [
        {
          "default": true,
          "description": "Enables statement sanitization for database queries.",
          "name": "otel.instrumentation.common.db-statement-sanitizer.enabled",
          "type": "boolean"
        },
        {
          "default": "",
          "description": "Used to specify a mapping from host names or IP addresses to peer services.",
          "name": "otel.instrumentation.common.peer-service-mapping",
          "type": "map"
        },
        {
          "default": false,
          "description": "Enables instrumentation of JDBC datasource connections.",
          "name": "otel.instrumentation.jdbc-datasource.enabled",
          "type": "boolean"
        },
        {
          "default": false,
          "description": "Sets whether the query parameters should be captured as span attributes named <code>db.query.parameter.&lt;key&gt;</code>. Enabling this option disables the statement sanitization.<p>WARNING: captured query parameters may contain sensitive information such as passwords, personally identifiable information or protected health info.\n",
          "name": "otel.instrumentation.jdbc.experimental.capture-query-parameters",
          "type": "boolean"
        },
        {
          "default": false,
          "description": "Enables experimental instrumentation to create spans for COMMIT and ROLLBACK operations.",
          "name": "otel.instrumentation.jdbc.experimental.transaction.enabled",
          "type": "boolean"
        },
        {
          "default": true,
          "description": "Enables statement sanitization for database queries. Takes precedent to otel.instrumentation.common.db-statement-sanitizer.enabled.",
          "name": "otel.instrumentation.jdbc.statement-sanitizer.enabled",
          "type": "boolean"
        }
      ],
      "description": "The JDBC instrumentation provides database client spans and metrics. Each call produces a span named after the SQL verb, enriched with standard DB client attributes (system, database, operation, sanitized statement, peer address) and error details if an exception occurs.\nThere is also a \"jdbc-datasource\" instrumentation that creates spans for datasource connections, but is disabled by default due to the volume of telemetry produced.\n",
      "name": "jdbc",
      "scope": {
        "name": "io.opentelemetry.jdbc"
      },
      "semconv": [],
      "source_path": "instrumentation/jdbc",
      "target_versions": {
        "javaagent": [
          "Java 8+"
        ]
      }
    },
    {
      "name": "jedis-1.4",
      "scope": {
        "name": "io.opentelemetry.jedis-1.4"
      },
      "semconv": [],
      "source_path": "instrumentation/jedis/jedis-1.4",
      "target_versions": {
        "javaagent": [
          "redis.clients:jedis:[1.4.0,3.0.0)"
        ]
      }
    },
    {
      "name": "jedis-3.0",
      "scope": {
        "name": "io.opentelemetry.jedis-3.0"
      },
      "semconv": [],
      "source_path": "instrumentation/jedis/jedis-3.0",
      "target_versions": {
        "javaagent": [
          "redis.clients:jedis:[3.0.0,4)"
        ]
      }
    },
    {
      "name": "jedis-4.0",
      "scope": {
        "name": "io.opentelemetry.jedis-4.0"
      },
      "semconv": [],
      "source_path": "instrumentation/jedis/jedis-4.0",
      "target_versions": {
        "javaagent": [
          "redis.clients:jedis:[4.0.0-beta1,)"
        ]
      }
    },
    {
      "minimum_java_version": 11,
      "name": "jetty-11.0",
      "scope": {
        "name": "io.opentelemetry.jetty-11.0"
      },
      "semconv": [],
      "source_path": "instrumentation/jetty/jetty-11.0",
      "target_versions": {
        "javaagent": [
          "org.eclipse.jetty:jetty-server:[11, 12)"
        ]
      }
    },
    {
      "minimum_java_version": 17,
      "name": "jetty-12.0",
      "scope": {
        "name": "io.opentelemetry.jetty-12.0"
      },
      "semconv": [],
      "source_path": "instrumentation/jetty/jetty-12.0",
      "target_versions": {
        "javaagent": [
          "org.eclipse.jetty:jetty-server:[12,)"
        ]
      }
    },
    {
      "name": "jetty-8.0",
      "scope": {
        "name": "io.opentelemetry.jetty-8.0"
      },
      "semconv": [],
      "source_path": "instrumentation/jetty/jetty-8.0",
      "target_versions": {
        "javaagent": [
          "org.eclipse.jetty:jetty-server:[8.0.0.v20110901,11)"
        ]
      }
    },
    {
      "minimum_java_version": 17,
      "name": "jetty-httpclient-12.0",
      "scope": {
        "name": "io.opentelemetry.jetty-httpclient-12.0"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/jetty-httpclient/jetty-httpclient-12.0",
      "target_versions": {
        "javaagent": [
          "org.eclipse.jetty:jetty-client:[12,)"
        ],
        "library": [
          "org.eclipse.jetty:jetty-client:12.0.0"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "name": "jetty-httpclient-9.2",
      "scope": {
        "name": "io.opentelemetry.jetty-httpclient-9.2"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/jetty-httpclient/jetty-httpclient-9.2",
      "target_versions": {
        "javaagent": [
          "org.eclipse.jetty:jetty-client:[9.2,10)"
        ],
        "library": [
          "org.eclipse.jetty:jetty-client:[9.2.0.v20140526,9.+)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "name": "jms-1.1",
      "scope": {
        "name": "io.opentelemetry.jms-1.1"
      },
      "semconv": [],
      "source_path": "instrumentation/jms/jms-1.1",
      "target_versions": {
        "javaagent": [
          "jakarta.jms:jakarta.jms-api:(,3)",
          "javax.jms:javax.jms-api:(,)",
          "javax.jms:jms-api:(,)"
        ]
      }
    },
    {
      "minimum_java_version": 11,
      "name": "jms-3.0",
      "scope": {
        "name": "io.opentelemetry.jms-3.0"
      },
      "semconv": [],
      "source_path": "instrumentation/jms/jms-3.0",
      "target_versions": {
        "javaagent": [
          "jakarta.jms:jakarta.jms-api:[3.0.0,)"
        ]
      }
    },
    {
      "name": "jodd-http-4.2",
      "scope": {
        "name": "io.opentelemetry.jodd-http-4.2"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/jodd-http-4.2",
      "target_versions": {
        "javaagent": [
          "org.jodd:jodd-http:[4.2.0,)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "name": "jsf-mojarra-1.2",
      "scope": {
        "name": "io.opentelemetry.jsf-mojarra-1.2"
      },
      "semconv": [],
      "source_path": "instrumentation/jsf/jsf-mojarra-1.2",
      "target_versions": {
        "javaagent": [
          "com.sun.faces:jsf-impl:[2.0,2.1)",
          "com.sun.faces:jsf-impl:[2.1,2.2)",
          "javax.faces:jsf-impl:[1.2,2)",
          "org.glassfish:jakarta.faces:[2.3.9,3)",
          "org.glassfish:javax.faces:[2.0.7,3)"
        ]
      }
    },
    {
      "minimum_java_version": 11,
      "name": "jsf-mojarra-3.0",
      "scope": {
        "name": "io.opentelemetry.jsf-mojarra-3.0"
      },
      "semconv": [],
      "source_path": "instrumentation/jsf/jsf-mojarra-3.0",
      "target_versions": {
        "javaagent": [
          "org.glassfish:jakarta.faces:[3,)"
        ]
      }
    },
    {
      "name": "jsf-myfaces-1.2",
      "scope": {
        "name": "io.opentelemetry.jsf-myfaces-1.2"
      },
      "semconv": [],
      "source_path": "instrumentation/jsf/jsf-myfaces-1.2",
      "target_versions": {
        "javaagent": [
          "org.apache.myfaces.core:myfaces-impl:[1.2,3)"
        ]
      }
    },
    {
      "minimum_java_version": 11,
      "name": "jsf-myfaces-3.0",
      "scope": {
        "name": "io.opentelemetry.jsf-myfaces-3.0"
      },
      "semconv": [],
      "source_path": "instrumentation/jsf/jsf-myfaces-3.0",
      "target_versions": {
        "javaagent": [
          "org.apache.myfaces.core:myfaces-impl:[3,)"
        ]
      }
    },
    {
      "name": "jsp-2.3",
      "scope": {
        "name": "io.opentelemetry.jsp-2.3"
      },
      "semconv": [],
      "source_path": "instrumentation/jsp-2.3",
      "target_versions": {
        "javaagent": [
          "org.apache.tomcat:tomcat-jasper:[7.0.19,10)"
        ]
      }
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enables the capture of the experimental consumer attribute \"kafka.record.queue_time_ms\"",
          "name": "otel.instrumentation.kafka.experimental-span-attributes",
          "type": "boolean"
        },
        {
          "default": true,
          "description": "Enable context propagation for kafka message producers.",
          "name": "otel.instrumentation.kafka.producer-propagation.enabled",
          "type": "boolean"
        },
        {
          "default": "",
          "description": "A comma-separated list of header names to capture as span attributes.",
          "name": "otel.instrumentation.messaging.experimental.capture-headers",
          "type": "list"
        },
        {
          "default": false,
          "description": "Enables experimental receive telemetry, which will cause consumers to start a new trace, with only a span link connecting it to the producer trace.\n",
          "name": "otel.instrumentation.messaging.experimental.receive-telemetry.enabled",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables messaging spans and metrics for Apache Kafka 0.11 clients. It automatically traces message production and consumption, propagates context, and emits metrics for production and consumption.\n",
      "name": "kafka-clients-0.11",
      "scope": {
        "name": "io.opentelemetry.kafka-clients-0.11"
      },
      "semconv": [],
      "source_path": "instrumentation/kafka/kafka-clients/kafka-clients-0.11",
      "target_versions": {
        "javaagent": [
          "org.apache.kafka:kafka-clients:[0.11.0.0,)"
        ]
      }
    },
    {
      "configurations": [
        {
          "default": "",
          "description": "A comma-separated list of header names to capture as span attributes.",
          "name": "otel.instrumentation.messaging.experimental.capture-headers",
          "type": "list"
        },
        {
          "default": false,
          "description": "Enables experimental receive telemetry, which will cause consumers to start a new trace, with only a span link connecting it to the producer trace.\n",
          "name": "otel.instrumentation.messaging.experimental.receive-telemetry.enabled",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation provides a library integration that enables messaging spans and metrics for Apache Kafka 2.6+ clients.\n",
      "name": "kafka-clients-2.6",
      "scope": {
        "name": "io.opentelemetry.kafka-clients-2.6"
      },
      "semconv": [],
      "source_path": "instrumentation/kafka/kafka-clients/kafka-clients-2.6",
      "target_versions": {
        "library": [
          "org.apache.kafka:kafka-clients:2.6.0"
        ]
      }
    },
    {
      "name": "kafka-streams-0.11",
      "scope": {
        "name": "io.opentelemetry.kafka-streams-0.11"
      },
      "semconv": [],
      "source_path": "instrumentation/kafka/kafka-streams-0.11",
      "target_versions": {
        "javaagent": [
          "org.apache.kafka:kafka-streams:[0.11.0.0,)"
        ]
      }
    },
    {
      "name": "kotlinx-coroutines-1.0",
      "scope": {
        "name": "io.opentelemetry.kotlinx-coroutines-1.0"
      },
      "semconv": [],
      "source_path": "instrumentation/kotlinx-coroutines/kotlinx-coroutines-1.0",
      "target_versions": {
        "javaagent": [
          "org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm:[1.3.9,)",
          "org.jetbrains.kotlinx:kotlinx-coroutines-core:[1.0.0,1.3.8)"
        ]
      }
    },
    {
      "name": "kotlinx-coroutines-flow-1.3",
      "scope": {
        "name": "io.opentelemetry.kotlinx-coroutines-flow-1.3"
      },
      "semconv": [],
      "source_path": "instrumentation/kotlinx-coroutines/kotlinx-coroutines-flow-1.3",
      "target_versions": {
        "javaagent": [
          "org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm:[1.3.9,)",
          "org.jetbrains.kotlinx:kotlinx-coroutines-core:[1.3.0,1.3.8)"
        ]
      }
    },
    {
      "name": "ktor-1.0",
      "scope": {
        "name": "io.opentelemetry.ktor-1.0"
      },
      "semconv": [],
      "source_path": "instrumentation/ktor/ktor-1.0",
      "target_versions": {
        "library": [
          "io.ktor:ktor-server-core:[1.0.0,1.+)"
        ]
      }
    },
    {
      "name": "ktor-2.0",
      "scope": {
        "name": "io.opentelemetry.ktor-2.0"
      },
      "semconv": [],
      "source_path": "instrumentation/ktor/ktor-2.0",
      "target_versions": {
        "javaagent": [
          "io.ktor:ktor-client-core:[2.0.0,3.0.0)",
          "io.ktor:ktor-server-core:[2.0.0,3.0.0)"
        ],
        "library": [
          "io.ktor:ktor-client-core:[2.0.0,2.+)",
          "io.ktor:ktor-server-core:[2.0.0,2.+)"
        ]
      }
    },
    {
      "name": "ktor-3.0",
      "scope": {
        "name": "io.opentelemetry.ktor-3.0"
      },
      "semconv": [],
      "source_path": "instrumentation/ktor/ktor-3.0",
      "target_versions": {
        "javaagent": [
          "io.ktor:ktor-client-core:[3.0.0,)",
          "io.ktor:ktor-server-core:[3.0.0,)"
        ],
        "library": [
          "io.ktor:ktor-client-core:3.0.0",
          "io.ktor:ktor-server-core:3.0.0"
        ]
      }
    },
    {
      "name": "kubernetes-client-7.0",
      "scope": {
        "name": "io.opentelemetry.kubernetes-client-7.0"
      },
      "semconv": [],
      "source_path": "instrumentation/kubernetes-client-7.0",
      "target_versions": {
        "javaagent": [
          "io.kubernetes:client-java-api:[7.0.0,)"
        ]
      }
    },
    {
      "name": "lettuce-4.0",
      "scope": {
        "name": "io.opentelemetry.lettuce-4.0"
      },
      "semconv": [],
      "source_path": "instrumentation/lettuce/lettuce-4.0",
      "target_versions": {
        "javaagent": [
          "biz.paluch.redis:lettuce:[4.0.Final,)"
        ]
      }
    },
    {
      "name": "lettuce-5.0",
      "scope": {
        "name": "io.opentelemetry.lettuce-5.0"
      },
      "semconv": [],
      "source_path": "instrumentation/lettuce/lettuce-5.0",
      "target_versions": {
        "javaagent": [
          "io.lettuce:lettuce-core:[5.0.0.RELEASE,5.1.0.RELEASE)"
        ]
      }
    },
    {
      "name": "lettuce-5.1",
      "scope": {
        "name": "io.opentelemetry.lettuce-5.1"
      },
      "semconv": [],
      "source_path": "instrumentation/lettuce/lettuce-5.1",
      "target_versions": {
        "javaagent": [
          "io.lettuce:lettuce-core:[5.1.0.RELEASE,)"
        ],
        "library": [
          "io.lettuce:lettuce-core:5.1.0.RELEASE"
        ]
      }
    },
    {
      "name": "liberty-20.0",
      "scope": {
        "name": "io.opentelemetry.liberty-20.0"
      },
      "semconv": [],
      "source_path": "instrumentation/liberty/liberty-20.0"
    },
    {
      "name": "liberty-dispatcher-20.0",
      "scope": {
        "name": "io.opentelemetry.liberty-dispatcher-20.0"
      },
      "semconv": [],
      "source_path": "instrumentation/liberty/liberty-dispatcher-20.0"
    },
    {
      "name": "log4j-appender-1.2",
      "scope": {
        "name": "io.opentelemetry.log4j-appender-1.2"
      },
      "semconv": [],
      "source_path": "instrumentation/log4j/log4j-appender-1.2",
      "target_versions": {
        "javaagent": [
          "log4j:log4j:[1.2,)"
        ]
      }
    },
    {
      "name": "log4j-appender-2.17",
      "scope": {
        "name": "io.opentelemetry.log4j-appender-2.17"
      },
      "semconv": [],
      "source_path": "instrumentation/log4j/log4j-appender-2.17",
      "target_versions": {
        "javaagent": [
          "org.apache.logging.log4j:log4j-core:[2.0,)"
        ],
        "library": [
          "org.apache.logging.log4j:log4j-core:2.17.0"
        ]
      }
    },
    {
      "name": "log4j-context-data-2.17",
      "scope": {
        "name": "io.opentelemetry.log4j-context-data-2.17"
      },
      "semconv": [],
      "source_path": "instrumentation/log4j/log4j-context-data/log4j-context-data-2.17",
      "target_versions": {
        "javaagent": [
          "org.apache.logging.log4j:log4j-core:[2.17.0,)"
        ]
      }
    },
    {
      "name": "log4j-context-data-2.7",
      "scope": {
        "name": "io.opentelemetry.log4j-context-data-2.7"
      },
      "semconv": [],
      "source_path": "instrumentation/log4j/log4j-context-data/log4j-context-data-2.7",
      "target_versions": {
        "javaagent": [
          "org.apache.logging.log4j:log4j-core:[2.7,2.17.0)"
        ]
      }
    },
    {
      "name": "log4j-mdc-1.2",
      "scope": {
        "name": "io.opentelemetry.log4j-mdc-1.2"
      },
      "semconv": [],
      "source_path": "instrumentation/log4j/log4j-mdc-1.2",
      "target_versions": {
        "javaagent": [
          "log4j:log4j:[1.2,)"
        ]
      }
    },
    {
      "name": "logback-appender-1.0",
      "scope": {
        "name": "io.opentelemetry.logback-appender-1.0"
      },
      "semconv": [],
      "source_path": "instrumentation/logback/logback-appender-1.0",
      "target_versions": {
        "javaagent": [
          "ch.qos.logback:logback-classic:[0.9.16,)"
        ],
        "library": [
          "ch.qos.logback:logback-classic:1.3.0",
          "net.logstash.logback:logstash-logback-encoder:3.0",
          "org.slf4j:slf4j-api:2.0.0"
        ]
      }
    },
    {
      "name": "logback-mdc-1.0",
      "scope": {
        "name": "io.opentelemetry.logback-mdc-1.0"
      },
      "semconv": [],
      "source_path": "instrumentation/logback/logback-mdc-1.0",
      "target_versions": {
        "javaagent": [
          "ch.qos.logback:logback-classic:[1.0.0,1.2.3]"
        ],
        "library": [
          "ch.qos.logback:logback-classic:1.0.0",
          "org.slf4j:slf4j-api:1.6.4"
        ]
      }
    },
    {
      "disabled_by_default": true,
      "name": "micrometer-1.5",
      "scope": {
        "name": "io.opentelemetry.micrometer-1.5"
      },
      "semconv": [],
      "source_path": "instrumentation/micrometer/micrometer-1.5",
      "target_versions": {
        "javaagent": [
          "io.micrometer:micrometer-core:[1.5.0,)"
        ],
        "library": [
          "io.micrometer:micrometer-core:1.5.0"
        ]
      }
    },
    {
      "name": "mongo-3.1",
      "scope": {
        "name": "io.opentelemetry.mongo-3.1"
      },
      "semconv": [],
      "source_path": "instrumentation/mongo/mongo-3.1",
      "target_versions": {
        "javaagent": [
          "org.mongodb:mongo-java-driver:[3.1,)"
        ],
        "library": [
          "org.mongodb:mongo-java-driver:3.1.0"
        ]
      }
    },
    {
      "name": "mongo-3.7",
      "scope": {
        "name": "io.opentelemetry.mongo-3.7"
      },
      "semconv": [],
      "source_path": "instrumentation/mongo/mongo-3.7",
      "target_versions": {
        "javaagent": [
          "org.mongodb:mongo-java-driver:[3.7, 4.0)",
          "org.mongodb:mongodb-driver-core:[3.7, 4.0)"
        ]
      }
    },
    {
      "name": "mongo-4.0",
      "scope": {
        "name": "io.opentelemetry.mongo-4.0"
      },
      "semconv": [],
      "source_path": "instrumentation/mongo/mongo-4.0",
      "target_versions": {
        "javaagent": [
          "org.mongodb:mongodb-driver-core:[4.0,)"
        ]
      }
    },
    {
      "name": "mongo-async-3.3",
      "scope": {
        "name": "io.opentelemetry.mongo-async-3.3"
      },
      "semconv": [],
      "source_path": "instrumentation/mongo/mongo-async-3.3",
      "target_versions": {
        "javaagent": [
          "org.mongodb:mongodb-driver-async:[3.3,)"
        ]
      }
    },
    {
      "disabled_by_default": true,
      "name": "mybatis-3.2",
      "scope": {
        "name": "io.opentelemetry.mybatis-3.2"
      },
      "semconv": [],
      "source_path": "instrumentation/mybatis-3.2",
      "target_versions": {
        "javaagent": [
          "org.mybatis:mybatis:[3.2.0,)"
        ]
      }
    },
    {
      "name": "netty-3.8",
      "scope": {
        "name": "io.opentelemetry.netty-3.8"
      },
      "semconv": [
        "Client",
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/netty/netty-3.8",
      "target_versions": {
        "javaagent": [
          "io.netty:netty:[3.8.0.Final,4)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            },
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.scheme",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "Duration of HTTP server requests.",
              "name": "http.server.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            },
            {
              "attributes": [
                {
                  "name": "client.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.path",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.query",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.scheme",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "user_agent.original",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "SERVER"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enable the creation of Connect and DNS spans",
          "name": "otel.instrumentation.netty.connection-telemetry.enabled",
          "type": "boolean"
        },
        {
          "default": false,
          "description": "Enable SSL telemetry",
          "name": "otel.instrumentation.netty.ssl-telemetry.enabled",
          "type": "boolean"
        }
      ],
      "name": "netty-4.0",
      "scope": {
        "name": "io.opentelemetry.netty-4.0"
      },
      "semconv": [
        "Client",
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/netty/netty-4.0",
      "target_versions": {
        "javaagent": [
          "io.netty:netty-all:[4.0.0.Final,4.1.0.Final)",
          "io.netty:netty-codec-http:[4.0.0.Final,4.1.0.Final)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            },
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.scheme",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "Duration of HTTP server requests.",
              "name": "http.server.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            },
            {
              "attributes": [
                {
                  "name": "client.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.path",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.query",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.scheme",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "user_agent.original",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "SERVER"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enable the creation of Connect and DNS spans",
          "name": "otel.instrumentation.netty.connection-telemetry.enabled",
          "type": "boolean"
        },
        {
          "default": false,
          "description": "Enable SSL telemetry",
          "name": "otel.instrumentation.netty.ssl-telemetry.enabled",
          "type": "boolean"
        }
      ],
      "name": "netty-4.1",
      "scope": {
        "name": "io.opentelemetry.netty-4.1"
      },
      "semconv": [
        "Client",
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/netty/netty-4.1",
      "target_versions": {
        "javaagent": [
          "io.netty:netty-all:[4.1.0.Final,5.0.0)",
          "io.netty:netty-codec-http:[4.1.0.Final,5.0.0)"
        ],
        "library": [
          "io.netty:netty-codec-http:4.1.0.Final"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            },
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.scheme",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "Duration of HTTP server requests.",
              "name": "http.server.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            },
            {
              "attributes": [
                {
                  "name": "client.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.path",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.query",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.scheme",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "user_agent.original",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "SERVER"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "name": "okhttp-2.2",
      "scope": {
        "name": "io.opentelemetry.okhttp-2.2"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/okhttp/okhttp-2.2",
      "target_versions": {
        "javaagent": [
          "com.squareup.okhttp:okhttp:[2.2,3)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "name": "okhttp-3.0",
      "scope": {
        "name": "io.opentelemetry.okhttp-3.0"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/okhttp/okhttp-3.0",
      "target_versions": {
        "javaagent": [
          "com.squareup.okhttp3:okhttp:[3.0,)"
        ],
        "library": [
          "com.squareup.okhttp3:okhttp:3.0.0"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.resend_count",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enables including the full content of user and assistant messages in emitted log events. Note that full content can have data privacy and size concerns, and care should be taken when enabling this.\n",
          "name": "otel.instrumentation.genai.capture-message-content",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables Gen AI client spans and metrics for OpenAI Java SDK 1.1+.",
      "name": "openai-java-1.1",
      "scope": {
        "name": "io.opentelemetry.openai-java-1.1"
      },
      "semconv": [
        "Gen Ai"
      ],
      "source_path": "instrumentation/openai/openai-java-1.1",
      "target_versions": {
        "javaagent": [
          "com.openai:openai-java:[1.1.0,3)"
        ],
        "library": [
          "com.openai:openai-java:1.1.0"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "gen_ai.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "gen_ai.provider.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "gen_ai.request.model",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "gen_ai.response.model",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "GenAI operation duration.",
              "name": "gen_ai.client.operation.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            },
            {
              "attributes": [
                {
                  "name": "gen_ai.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "gen_ai.provider.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "gen_ai.request.model",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "gen_ai.response.model",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "gen_ai.token.type",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "Measures number of input and output tokens used.",
              "name": "gen_ai.client.token.usage",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "token"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "gen_ai.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "gen_ai.provider.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "gen_ai.request.encoding_formats",
                  "semconv": true,
                  "type": "STRING_ARRAY"
                },
                {
                  "name": "gen_ai.request.model",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "gen_ai.response.model",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "gen_ai.usage.input_tokens",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "CLIENT"
            },
            {
              "attributes": [
                {
                  "name": "gen_ai.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "gen_ai.provider.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "gen_ai.request.frequency_penalty",
                  "semconv": true,
                  "type": "DOUBLE"
                },
                {
                  "name": "gen_ai.request.max_tokens",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "gen_ai.request.model",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "gen_ai.request.presence_penalty",
                  "semconv": true,
                  "type": "DOUBLE"
                },
                {
                  "name": "gen_ai.request.seed",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "gen_ai.request.stop_sequences",
                  "semconv": true,
                  "type": "STRING_ARRAY"
                },
                {
                  "name": "gen_ai.request.temperature",
                  "semconv": true,
                  "type": "DOUBLE"
                },
                {
                  "name": "gen_ai.request.top_p",
                  "semconv": true,
                  "type": "DOUBLE"
                },
                {
                  "name": "gen_ai.response.finish_reasons",
                  "semconv": true,
                  "type": "STRING_ARRAY"
                },
                {
                  "name": "gen_ai.response.id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "gen_ai.response.model",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "gen_ai.usage.input_tokens",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "gen_ai.usage.output_tokens",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "INTERNAL"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "minimum_java_version": 11,
      "name": "opensearch-rest-1.0",
      "scope": {
        "name": "io.opentelemetry.opensearch-rest-1.0"
      },
      "semconv": [],
      "source_path": "instrumentation/opensearch/opensearch-rest-1.0",
      "target_versions": {
        "javaagent": [
          "org.opensearch.client:opensearch-rest-client:[1.0,3.0)"
        ]
      }
    },
    {
      "minimum_java_version": 11,
      "name": "opensearch-rest-3.0",
      "scope": {
        "name": "io.opentelemetry.opensearch-rest-3.0"
      },
      "semconv": [],
      "source_path": "instrumentation/opensearch/opensearch-rest-3.0",
      "target_versions": {
        "javaagent": [
          "org.opensearch.client:opensearch-rest-client:[3.0,)"
        ]
      }
    },
    {
      "description": "The Oracle Universal Connection Pool (UCP) instrumentation generates connection pool metrics.",
      "name": "oracle-ucp-11.2",
      "scope": {
        "name": "io.opentelemetry.oracle-ucp-11.2"
      },
      "semconv": [
        "Database Client"
      ],
      "source_path": "instrumentation/oracle-ucp-11.2",
      "target_versions": {
        "javaagent": [
          "com.oracle.database.jdbc:ucp:[,)"
        ],
        "library": [
          "com.oracle.database.jdbc:ojdbc8:12.2.0.1",
          "com.oracle.database.jdbc:ucp:11.2.0.4"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.client.connection.state",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The number of connections that are currently in state described by the state attribute.",
              "name": "db.client.connection.count",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "connection"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The maximum number of open connections allowed.",
              "name": "db.client.connection.max",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "connection"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The number of current pending requests for an open connection.",
              "name": "db.client.connection.pending_requests",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "request"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enable the OSHI process runtime metrics.",
          "name": "otel.instrumentation.oshi.experimental-metrics.enabled",
          "type": "boolean"
        }
      ],
      "description": "When the OSHI library is detected on the classpath, this instrumentation will use the system class loader to load classes from the oshi-core jar that are then used to generate system metrics.",
      "name": "oshi",
      "scope": {
        "name": "io.opentelemetry.oshi"
      },
      "semconv": [
        "System"
      ],
      "source_path": "instrumentation/oshi",
      "target_versions": {
        "javaagent": [
          "com.github.oshi:oshi-core:[5.3.1,)"
        ],
        "library": [
          "com.github.oshi:oshi-core:5.3.1"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "device",
                  "type": "STRING"
                },
                {
                  "name": "direction",
                  "type": "STRING"
                }
              ],
              "description": "System disk IO",
              "name": "system.disk.io",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "By"
            },
            {
              "attributes": [
                {
                  "name": "device",
                  "type": "STRING"
                },
                {
                  "name": "direction",
                  "type": "STRING"
                }
              ],
              "description": "System disk operations",
              "name": "system.disk.operations",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "operations"
            },
            {
              "attributes": [
                {
                  "name": "state",
                  "type": "STRING"
                }
              ],
              "description": "System memory usage",
              "name": "system.memory.usage",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "By"
            },
            {
              "attributes": [
                {
                  "name": "state",
                  "type": "STRING"
                }
              ],
              "description": "System memory utilization",
              "name": "system.memory.utilization",
              "semconv": true,
              "type": "DOUBLE_GAUGE",
              "unit": "1"
            },
            {
              "attributes": [
                {
                  "name": "device",
                  "type": "STRING"
                },
                {
                  "name": "direction",
                  "type": "STRING"
                }
              ],
              "description": "System network errors",
              "name": "system.network.errors",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "errors"
            },
            {
              "attributes": [
                {
                  "name": "device",
                  "type": "STRING"
                },
                {
                  "name": "direction",
                  "type": "STRING"
                }
              ],
              "description": "System network IO",
              "name": "system.network.io",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "By"
            },
            {
              "attributes": [
                {
                  "name": "device",
                  "type": "STRING"
                },
                {
                  "name": "direction",
                  "type": "STRING"
                }
              ],
              "description": "System network packets",
              "name": "system.network.packets",
              "type": "LONG_SUM",
              "unit": "packets"
            }
          ],
          "when": "default"
        },
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "type",
                  "type": "STRING"
                }
              ],
              "description": "Runtime Java CPU time",
              "name": "runtime.java.cpu_time",
              "type": "LONG_GAUGE",
              "unit": "ms"
            },
            {
              "attributes": [
                {
                  "name": "type",
                  "type": "STRING"
                }
              ],
              "description": "Runtime Java memory",
              "name": "runtime.java.memory",
              "type": "LONG_SUM",
              "unit": "By"
            },
            {
              "attributes": [
                {
                  "name": "device",
                  "type": "STRING"
                },
                {
                  "name": "direction",
                  "type": "STRING"
                }
              ],
              "description": "System disk IO",
              "name": "system.disk.io",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "By"
            },
            {
              "attributes": [
                {
                  "name": "device",
                  "type": "STRING"
                },
                {
                  "name": "direction",
                  "type": "STRING"
                }
              ],
              "description": "System disk operations",
              "name": "system.disk.operations",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "operations"
            },
            {
              "attributes": [
                {
                  "name": "state",
                  "type": "STRING"
                }
              ],
              "description": "System memory usage",
              "name": "system.memory.usage",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "By"
            },
            {
              "attributes": [
                {
                  "name": "state",
                  "type": "STRING"
                }
              ],
              "description": "System memory utilization",
              "name": "system.memory.utilization",
              "semconv": true,
              "type": "DOUBLE_GAUGE",
              "unit": "1"
            },
            {
              "attributes": [
                {
                  "name": "device",
                  "type": "STRING"
                },
                {
                  "name": "direction",
                  "type": "STRING"
                }
              ],
              "description": "System network errors",
              "name": "system.network.errors",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "errors"
            },
            {
              "attributes": [
                {
                  "name": "device",
                  "type": "STRING"
                },
                {
                  "name": "direction",
                  "type": "STRING"
                }
              ],
              "description": "System network IO",
              "name": "system.network.io",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "By"
            },
            {
              "attributes": [
                {
                  "name": "device",
                  "type": "STRING"
                },
                {
                  "name": "direction",
                  "type": "STRING"
                }
              ],
              "description": "System network packets",
              "name": "system.network.packets",
              "type": "LONG_SUM",
              "unit": "packets"
            }
          ],
          "when": "otel.instrumentation.oshi.experimental-metrics.enabled=true"
        }
      ]
    },
    {
      "name": "payara",
      "scope": {
        "name": "io.opentelemetry.payara"
      },
      "semconv": [],
      "source_path": "instrumentation/payara"
    },
    {
      "name": "pekko-actor-1.0",
      "scope": {
        "name": "io.opentelemetry.pekko-actor-1.0"
      },
      "semconv": [],
      "source_path": "instrumentation/pekko/pekko-actor-1.0",
      "target_versions": {
        "javaagent": [
          "org.apache.pekko:pekko-actor_2.12:[1.0,)",
          "org.apache.pekko:pekko-actor_2.13:[1.0,)",
          "org.apache.pekko:pekko-actor_3:[1.0,)"
        ]
      }
    },
    {
      "name": "pekko-http-1.0",
      "scope": {
        "name": "io.opentelemetry.pekko-http-1.0"
      },
      "semconv": [
        "Client",
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/pekko/pekko-http-1.0",
      "target_versions": {
        "javaagent": [
          "com.softwaremill.sttp.tapir:tapir-pekko-http-server_2.12:[1.7,)",
          "com.softwaremill.sttp.tapir:tapir-pekko-http-server_2.13:[1.7,)",
          "com.softwaremill.sttp.tapir:tapir-pekko-http-server_3:[1.7,)",
          "org.apache.pekko:pekko-http_2.12:[1.0,)",
          "org.apache.pekko:pekko-http_2.13:[1.0,)",
          "org.apache.pekko:pekko-http_3:[1.0,)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            },
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "http.route",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.scheme",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "Duration of HTTP server requests.",
              "name": "http.server.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            },
            {
              "attributes": [
                {
                  "name": "client.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "http.route",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.path",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.query",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.scheme",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "user_agent.original",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "SERVER"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "name": "play-mvc-2.4",
      "scope": {
        "name": "io.opentelemetry.play-mvc-2.4"
      },
      "semconv": [],
      "source_path": "instrumentation/play/play-mvc/play-mvc-2.4",
      "target_versions": {
        "javaagent": [
          "com.typesafe.play:play_2.11:[2.4.0,2.6)"
        ]
      }
    },
    {
      "name": "play-mvc-2.6",
      "scope": {
        "name": "io.opentelemetry.play-mvc-2.6"
      },
      "semconv": [],
      "source_path": "instrumentation/play/play-mvc/play-mvc-2.6",
      "target_versions": {
        "javaagent": [
          "com.typesafe.play:play_$scalaVersion:[2.6.0,)",
          "com.typesafe.play:play_2.12:[2.6.0,)",
          "com.typesafe.play:play_2.13:[2.6.0,)"
        ]
      }
    },
    {
      "name": "play-ws-1.0",
      "scope": {
        "name": "io.opentelemetry.play-ws-1.0"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/play/play-ws/play-ws-1.0",
      "target_versions": {
        "javaagent": [
          "com.typesafe.play:play-ahc-ws-standalone_2.11:[1.0.0,2.0.0)",
          "com.typesafe.play:play-ahc-ws-standalone_2.12:[1.0.0,2.0.0)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "name": "play-ws-2.0",
      "scope": {
        "name": "io.opentelemetry.play-ws-2.0"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/play/play-ws/play-ws-2.0",
      "target_versions": {
        "javaagent": [
          "com.typesafe.play:play-ahc-ws-standalone_2.11:[2.0.0,]",
          "com.typesafe.play:play-ahc-ws-standalone_2.12:[2.0.0,2.1.0)",
          "com.typesafe.play:play-ahc-ws-standalone_2.13:[2.0.6,2.1.0)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "name": "play-ws-2.1",
      "scope": {
        "name": "io.opentelemetry.play-ws-2.1"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/play/play-ws/play-ws-2.1",
      "target_versions": {
        "javaagent": [
          "com.typesafe.play:play-ahc-ws-standalone_2.12:[2.1.0,]",
          "com.typesafe.play:play-ahc-ws-standalone_2.13:[2.1.0,]"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "name": "powerjob-4.0",
      "scope": {
        "name": "io.opentelemetry.powerjob-4.0"
      },
      "semconv": [],
      "source_path": "instrumentation/powerjob-4.0",
      "target_versions": {
        "javaagent": [
          "tech.powerjob:powerjob-worker:[4.0.0,)"
        ]
      }
    },
    {
      "name": "pulsar-2.8",
      "scope": {
        "name": "io.opentelemetry.pulsar-2.8"
      },
      "semconv": [],
      "source_path": "instrumentation/pulsar/pulsar-2.8",
      "target_versions": {
        "javaagent": [
          "org.apache.pulsar:pulsar-client:[2.8.0,)"
        ]
      }
    },
    {
      "name": "quarkus-resteasy-reactive",
      "scope": {
        "name": "io.opentelemetry.quarkus-resteasy-reactive"
      },
      "semconv": [],
      "source_path": "instrumentation/quarkus-resteasy-reactive",
      "target_versions": {
        "javaagent": [
          "io.quarkus:quarkus-resteasy-reactive:(,3.9.0)"
        ]
      }
    },
    {
      "name": "quartz-2.0",
      "scope": {
        "name": "io.opentelemetry.quartz-2.0"
      },
      "semconv": [],
      "source_path": "instrumentation/quartz-2.0",
      "target_versions": {
        "javaagent": [
          "org.quartz-scheduler:quartz:[2.0.0,)"
        ],
        "library": [
          "org.quartz-scheduler:quartz:2.0.0"
        ]
      }
    },
    {
      "name": "r2dbc-1.0",
      "scope": {
        "name": "io.opentelemetry.r2dbc-1.0"
      },
      "semconv": [],
      "source_path": "instrumentation/r2dbc-1.0",
      "target_versions": {
        "javaagent": [
          "io.r2dbc:r2dbc-spi:[1.0.0.RELEASE,)"
        ],
        "library": [
          "io.r2dbc:r2dbc-spi:1.0.0.RELEASE"
        ]
      }
    },
    {
      "name": "rabbitmq-2.7",
      "scope": {
        "name": "io.opentelemetry.rabbitmq-2.7"
      },
      "semconv": [],
      "source_path": "instrumentation/rabbitmq-2.7",
      "target_versions": {
        "javaagent": [
          "com.rabbitmq:amqp-client:[2.7.0,)"
        ]
      }
    },
    {
      "name": "ratpack-1.4",
      "scope": {
        "name": "io.opentelemetry.ratpack-1.4"
      },
      "semconv": [],
      "source_path": "instrumentation/ratpack/ratpack-1.4",
      "target_versions": {
        "javaagent": [
          "io.ratpack:ratpack-core:[1.4.0,)"
        ]
      }
    },
    {
      "name": "ratpack-1.7",
      "scope": {
        "name": "io.opentelemetry.ratpack-1.7"
      },
      "semconv": [],
      "source_path": "instrumentation/ratpack/ratpack-1.7",
      "target_versions": {
        "javaagent": [
          "io.ratpack:ratpack-core:[1.7.0,)"
        ],
        "library": [
          "io.ratpack:ratpack-core:1.7.0"
        ]
      }
    },
    {
      "name": "reactor-3.1",
      "scope": {
        "name": "io.opentelemetry.reactor-3.1"
      },
      "semconv": [],
      "source_path": "instrumentation/reactor/reactor-3.1",
      "target_versions": {
        "javaagent": [
          "io.projectreactor:reactor-core:[3.1.0.RELEASE,)"
        ]
      }
    },
    {
      "name": "reactor-3.4",
      "scope": {
        "name": "io.opentelemetry.reactor-3.4"
      },
      "semconv": [],
      "source_path": "instrumentation/reactor/reactor-3.4",
      "target_versions": {
        "javaagent": [
          "io.projectreactor:reactor-core:[3.4.0,)"
        ]
      }
    },
    {
      "name": "reactor-kafka-1.0",
      "scope": {
        "name": "io.opentelemetry.reactor-kafka-1.0"
      },
      "semconv": [],
      "source_path": "instrumentation/reactor/reactor-kafka-1.0",
      "target_versions": {
        "javaagent": [
          "io.projectreactor.kafka:reactor-kafka:[1.0.0,)"
        ]
      }
    },
    {
      "name": "reactor-netty-0.9",
      "scope": {
        "name": "io.opentelemetry.reactor-netty-0.9"
      },
      "semconv": [],
      "source_path": "instrumentation/reactor/reactor-netty/reactor-netty-0.9",
      "target_versions": {
        "javaagent": [
          "io.projectreactor.netty:reactor-netty:[0.8.2.RELEASE,1.0.0)"
        ]
      }
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enable the creation of Connect and DNS spans.",
          "name": "otel.instrumentation.reactor-netty.connection-telemetry.enabled",
          "type": "boolean"
        }
      ],
      "name": "reactor-netty-1.0",
      "scope": {
        "name": "io.opentelemetry.reactor-netty-1.0"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/reactor/reactor-netty/reactor-netty-1.0",
      "target_versions": {
        "javaagent": [
          "io.projectreactor.netty:reactor-netty-http:[1.0.0,)",
          "io.projectreactor.netty:reactor-netty:[1.0.0,)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.resend_count",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "name": "rediscala-1.8",
      "scope": {
        "name": "io.opentelemetry.rediscala-1.8"
      },
      "semconv": [],
      "source_path": "instrumentation/rediscala-1.8",
      "target_versions": {
        "javaagent": [
          "com.github.Ma27:rediscala_2.11:[1.8.1,)",
          "com.github.Ma27:rediscala_2.12:[1.8.1,)",
          "com.github.Ma27:rediscala_2.13:[1.9.0,)",
          "com.github.etaty:rediscala_2.11:[1.5.0,)",
          "com.github.etaty:rediscala_2.12:[1.8.0,)",
          "com.github.etaty:rediscala_2.13:[1.9.0,)",
          "io.github.rediscala:rediscala_2.13:[1.10.0,)"
        ]
      }
    },
    {
      "name": "redisson-3.0",
      "scope": {
        "name": "io.opentelemetry.redisson-3.0"
      },
      "semconv": [],
      "source_path": "instrumentation/redisson/redisson-3.0",
      "target_versions": {
        "javaagent": [
          "org.redisson:redisson:[3.0.0,3.17.0)"
        ]
      }
    },
    {
      "name": "redisson-3.17",
      "scope": {
        "name": "io.opentelemetry.redisson-3.17"
      },
      "semconv": [],
      "source_path": "instrumentation/redisson/redisson-3.17",
      "target_versions": {
        "javaagent": [
          "org.redisson:redisson:[3.17.0,)"
        ]
      }
    },
    {
      "name": "resources",
      "scope": {
        "name": "io.opentelemetry.resources"
      },
      "semconv": [],
      "source_path": "instrumentation/resources"
    },
    {
      "name": "restlet-1.1",
      "scope": {
        "name": "io.opentelemetry.restlet-1.1"
      },
      "semconv": [],
      "source_path": "instrumentation/restlet/restlet-1.1",
      "target_versions": {
        "javaagent": [
          "org.restlet:org.restlet:[1.1.0, 1.2-M1)"
        ],
        "library": [
          "com.noelios.restlet:com.noelios.restlet:1.1.5",
          "org.restlet:org.restlet:[1.1.5,1.+)"
        ]
      }
    },
    {
      "name": "restlet-2.0",
      "scope": {
        "name": "io.opentelemetry.restlet-2.0"
      },
      "semconv": [],
      "source_path": "instrumentation/restlet/restlet-2.0",
      "target_versions": {
        "javaagent": [
          "org.restlet.jse:org.restlet:[2.0.0,)"
        ],
        "library": [
          "org.restlet.jse:org.restlet:2.0.2"
        ]
      }
    },
    {
      "name": "rmi",
      "scope": {
        "name": "io.opentelemetry.rmi"
      },
      "semconv": [],
      "source_path": "instrumentation/rmi",
      "target_versions": {
        "javaagent": [
          "Java 8+"
        ]
      }
    },
    {
      "name": "rocketmq-client-4.8",
      "scope": {
        "name": "io.opentelemetry.rocketmq-client-4.8"
      },
      "semconv": [],
      "source_path": "instrumentation/rocketmq/rocketmq-client/rocketmq-client-4.8",
      "target_versions": {
        "javaagent": [
          "org.apache.rocketmq:rocketmq-client:[4.0.0,)"
        ],
        "library": [
          "org.apache.rocketmq:rocketmq-client:4.8.0"
        ]
      }
    },
    {
      "name": "rocketmq-client-5.0",
      "scope": {
        "name": "io.opentelemetry.rocketmq-client-5.0"
      },
      "semconv": [],
      "source_path": "instrumentation/rocketmq/rocketmq-client/rocketmq-client-5.0",
      "target_versions": {
        "javaagent": [
          "org.apache.rocketmq:rocketmq-client-java:[5.0.0,)"
        ]
      }
    },
    {
      "minimum_java_version": 17,
      "name": "runtime-telemetry-java17",
      "scope": {
        "name": "io.opentelemetry.runtime-telemetry-java17"
      },
      "semconv": [],
      "source_path": "instrumentation/runtime-telemetry/runtime-telemetry-java17"
    },
    {
      "name": "runtime-telemetry-java8",
      "scope": {
        "name": "io.opentelemetry.runtime-telemetry-java8"
      },
      "semconv": [],
      "source_path": "instrumentation/runtime-telemetry/runtime-telemetry-java8"
    },
    {
      "name": "rxjava-1.0",
      "scope": {
        "name": "io.opentelemetry.rxjava-1.0"
      },
      "semconv": [],
      "source_path": "instrumentation/rxjava/rxjava-1.0",
      "target_versions": {
        "library": [
          "io.reactivex:rxjava:1.0.7"
        ]
      }
    },
    {
      "name": "rxjava-2.0",
      "scope": {
        "name": "io.opentelemetry.rxjava-2.0"
      },
      "semconv": [],
      "source_path": "instrumentation/rxjava/rxjava-2.0",
      "target_versions": {
        "javaagent": [
          "io.reactivex.rxjava2:rxjava:[2.0.6,)"
        ],
        "library": [
          "io.reactivex.rxjava2:rxjava:2.1.3"
        ]
      }
    },
    {
      "name": "rxjava-3.0",
      "scope": {
        "name": "io.opentelemetry.rxjava-3.0"
      },
      "semconv": [],
      "source_path": "instrumentation/rxjava/rxjava-3.0",
      "target_versions": {
        "javaagent": [
          "io.reactivex.rxjava3:rxjava:[3.0.0,3.1.0]"
        ],
        "library": [
          "io.reactivex.rxjava3:rxjava:[3.0.12,3.1.0)"
        ]
      }
    },
    {
      "name": "rxjava-3.1.1",
      "scope": {
        "name": "io.opentelemetry.rxjava-3.1.1"
      },
      "semconv": [],
      "source_path": "instrumentation/rxjava/rxjava-3.1.1",
      "target_versions": {
        "javaagent": [
          "io.reactivex.rxjava3:rxjava:[3.1.1,)"
        ],
        "library": [
          "io.reactivex.rxjava3:rxjava:3.1.1"
        ]
      }
    },
    {
      "name": "scala-fork-join-2.8",
      "scope": {
        "name": "io.opentelemetry.scala-fork-join-2.8"
      },
      "semconv": [],
      "source_path": "instrumentation/scala-fork-join-2.8",
      "target_versions": {
        "javaagent": [
          "org.scala-lang:scala-library:[2.8.0,2.12.0)"
        ]
      }
    },
    {
      "name": "servlet-2.2",
      "scope": {
        "name": "io.opentelemetry.servlet-2.2"
      },
      "semconv": [],
      "source_path": "instrumentation/servlet/servlet-2.2",
      "target_versions": {
        "javaagent": [
          "javax.servlet:servlet-api:[2.2, 3.0)"
        ]
      }
    },
    {
      "name": "servlet-3.0",
      "scope": {
        "name": "io.opentelemetry.servlet-3.0"
      },
      "semconv": [],
      "source_path": "instrumentation/servlet/servlet-3.0",
      "target_versions": {
        "javaagent": [
          "javax.servlet:javax.servlet-api:[3.0,)"
        ]
      }
    },
    {
      "name": "servlet-5.0",
      "scope": {
        "name": "io.opentelemetry.servlet-5.0"
      },
      "semconv": [],
      "source_path": "instrumentation/servlet/servlet-5.0",
      "target_versions": {
        "javaagent": [
          "jakarta.servlet:jakarta.servlet-api:[5.0.0,)"
        ]
      }
    },
    {
      "description": "This instrumentation does not emit telemetry on its own. Instead, it extracts the HTTP route and attaches it to HTTP server spans and HTTP server metrics.\n",
      "name": "spark-2.3",
      "scope": {
        "name": "io.opentelemetry.spark-2.3"
      },
      "semconv": [],
      "source_path": "instrumentation/spark-2.3",
      "target_versions": {
        "javaagent": [
          "com.sparkjava:spark-core:[2.3,)"
        ]
      }
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Adds the experimental attribute `job.system` to spans.",
          "name": "otel.instrumentation.spring-batch.experimental-span-attributes",
          "type": "boolean"
        },
        {
          "default": false,
          "description": "When enabled, a new root span will be created for each chunk processing. Please note that this may lead to a high number of spans being created.",
          "name": "otel.instrumentation.spring-batch.experimental.chunk.new-trace",
          "type": "boolean"
        },
        {
          "default": false,
          "description": "When enabled, spans will be created for each item processed. Please note that this may lead to a high number of spans being created.",
          "name": "otel.instrumentation.spring-batch.item.enabled",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables INTERNAL spans for jobs run by the Spring Batch framework.",
      "disabled_by_default": true,
      "name": "spring-batch-3.0",
      "scope": {
        "name": "io.opentelemetry.spring-batch-3.0"
      },
      "semconv": [],
      "source_path": "instrumentation/spring/spring-batch-3.0",
      "target_versions": {
        "javaagent": [
          "org.springframework.batch:spring-batch-core:[3.0.0.RELEASE,5)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "job.system",
                  "type": "STRING"
                }
              ],
              "span_kind": "INTERNAL"
            }
          ],
          "when": "otel.instrumentation.spring-batch.experimental-span-attributes=true"
        }
      ]
    },
    {
      "description": "This instrumentation configures the OpenTelemetry Micrometer bridge to receive metrics from Spring Boot Actuator. It does not produce telemetry on its own.\n",
      "disabled_by_default": true,
      "name": "spring-boot-actuator-autoconfigure-2.0",
      "scope": {
        "name": "io.opentelemetry.spring-boot-actuator-autoconfigure-2.0"
      },
      "semconv": [],
      "source_path": "instrumentation/spring/spring-boot-actuator-autoconfigure-2.0",
      "target_versions": {
        "javaagent": [
          "org.springframework.boot:spring-boot-actuator-autoconfigure:[2.0.0.RELEASE,)"
        ]
      }
    },
    {
      "description": "This instrumentation automatically detects the `service.name` and `service.version` for Spring Boot applications and sets them as resource attributes.\nIt uses the following strategies (first successful wins):\n  - Check for the SPRING_APPLICATION_NAME environment variable\n  - Check for spring.application.name system property\n  - Check for application.properties file on the classpath\n  - Check for application.properties in the current working dir\n  - Check for application.yml on the classpath\n  - Check for application.yml in the current working dir\n  - Check for --spring.application.name program argument (not jvm arg) via ProcessHandle\n  - Check for --spring.application.name program argument via sun.java.command system property\n",
      "name": "spring-boot-resources",
      "scope": {
        "name": "io.opentelemetry.spring-boot-resources"
      },
      "semconv": [],
      "source_path": "instrumentation/spring/spring-boot-resources"
    },
    {
      "description": "This instrumentation enhances tracing for Spring Cloud AWS. It augments the existing AWS SDK instrumentation by providing higher-level tracing for SQS operations, capturing details specific to Spring Cloud AWS SQS usage and linking them to the underlying AWS SDK traces.\n",
      "minimum_java_version": 17,
      "name": "spring-cloud-aws-3.0",
      "scope": {
        "name": "io.opentelemetry.spring-cloud-aws-3.0"
      },
      "semconv": [],
      "source_path": "instrumentation/spring/spring-cloud-aws-3.0",
      "target_versions": {
        "javaagent": [
          "io.awspring.cloud:spring-cloud-aws-sqs:[3.0.0,)"
        ]
      }
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enables experimental `spring-cloud-gateway.route` attributes (e.g., `spring-cloud-gateway.route.id`, `spring-cloud-gateway.route.uri`, etc.) on spans.\n",
          "name": "otel.instrumentation.spring-cloud-gateway.experimental-span-attributes",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enhances tracing for Spring Cloud Gateway. It does not generate new telemetry on its own, but rather enriches existing traces produced by other instrumentations like Netty and Spring WebFlux with Spring Cloud Gateway-specific attributes.\n",
      "name": "spring-cloud-gateway-2.0",
      "scope": {
        "name": "io.opentelemetry.spring-cloud-gateway-2.0"
      },
      "semconv": [],
      "source_path": "instrumentation/spring/spring-cloud-gateway/spring-cloud-gateway-2.0",
      "target_versions": {
        "javaagent": [
          "org.springframework.cloud:spring-cloud-starter-gateway:[2.0.0.RELEASE,]"
        ]
      }
    },
    {
      "description": "This instrumentation ensures proper context propagation for asynchronous operations within Spring Core. It modifies how tasks are submitted and executed to ensure that spans created by other instrumentations are correctly linked across thread boundaries, rather than generating any new telemetry itself.\n",
      "minimum_java_version": 17,
      "name": "spring-core-2.0",
      "scope": {
        "name": "io.opentelemetry.spring-core-2.0"
      },
      "semconv": [],
      "source_path": "instrumentation/spring/spring-core-2.0",
      "target_versions": {
        "javaagent": [
          "org.springframework:spring-core:[2.0,]"
        ]
      }
    },
    {
      "description": "This instrumentation enhances tracing for Spring Data operations. It works in conjunction with other instrumentations, such as JDBC, to provide additional context and details for database interactions initiated through Spring Data.\n",
      "name": "spring-data-1.8",
      "scope": {
        "name": "io.opentelemetry.spring-data-1.8"
      },
      "semconv": [
        "Code"
      ],
      "source_path": "instrumentation/spring/spring-data/spring-data-1.8",
      "target_versions": {
        "javaagent": [
          "org.springframework.data:spring-data-commons:[1.8.0.RELEASE,]",
          "org.springframework:spring-aop:[1.2,]"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "code.function",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "code.namespace",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "INTERNAL"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": "",
          "description": "Allows configuring headers to capture as span attributes.",
          "name": "otel.instrumentation.messaging.experimental.capture-headers",
          "type": "list"
        },
        {
          "default": "*",
          "description": "An array of Spring channel name patterns that will be intercepted.",
          "name": "otel.instrumentation.spring-integration.global-channel-interceptor-patterns",
          "type": "list"
        },
        {
          "default": false,
          "description": "Create producer spans when messages are sent to an output channel. Enable when you're using a messaging library that doesn't have its own instrumentation for generating producer spans. Note that the detection of output channels only works for Spring Cloud Stream `DirectWithAttributesChannel`.\n",
          "name": "otel.instrumentation.spring-integration.producer.enabled",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables producer and consumer messaging spans for Spring Integration.",
      "name": "spring-integration-4.1",
      "scope": {
        "name": "io.opentelemetry.spring-integration-4.1"
      },
      "semconv": [],
      "source_path": "instrumentation/spring/spring-integration-4.1",
      "target_versions": {
        "javaagent": [
          "org.springframework.integration:spring-integration-core:[4.1.0.RELEASE,)"
        ],
        "library": [
          "org.springframework.integration:spring-integration-core:[4.1.0.RELEASE,5.+)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "messaging.operation",
                  "type": "STRING"
                }
              ],
              "span_kind": "CONSUMER"
            }
          ],
          "when": "default"
        },
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "messaging.operation",
                  "type": "STRING"
                }
              ],
              "span_kind": "CONSUMER"
            },
            {
              "attributes": [
                {
                  "name": "messaging.operation",
                  "type": "STRING"
                }
              ],
              "span_kind": "PRODUCER"
            }
          ],
          "when": "otel.instrumentation.spring-integration.producer.enabled=true"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": "",
          "description": "A comma-separated list of header names to capture as span attributes.",
          "name": "otel.instrumentation.messaging.experimental.capture-headers",
          "type": "list"
        },
        {
          "default": false,
          "description": "Enables experimental receive telemetry, which will cause consumers to start a new trace, with only a span link connecting it to the producer trace.\n",
          "name": "otel.instrumentation.messaging.experimental.receive-telemetry.enabled",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables the generation of consumer messaging spans for Spring JMS.",
      "name": "spring-jms-2.0",
      "scope": {
        "name": "io.opentelemetry.spring-jms-2.0"
      },
      "semconv": [
        "Messaging"
      ],
      "source_path": "instrumentation/spring/spring-jms/spring-jms-2.0",
      "target_versions": {
        "javaagent": [
          "org.springframework:spring-jms:[2.0,6)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "messaging.destination.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.message.id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.operation",
                  "type": "STRING"
                },
                {
                  "name": "messaging.system",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CONSUMER"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": "",
          "description": "A comma-separated list of header names to capture as span attributes.",
          "name": "otel.instrumentation.messaging.experimental.capture-headers",
          "type": "list"
        },
        {
          "default": false,
          "description": "Enables experimental receive telemetry, which will cause consumers to start a new trace, with only a span link connecting it to the producer trace.\n",
          "name": "otel.instrumentation.messaging.experimental.receive-telemetry.enabled",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables the generation of consumer messaging spans for Spring JMS.",
      "minimum_java_version": 17,
      "name": "spring-jms-6.0",
      "scope": {
        "name": "io.opentelemetry.spring-jms-6.0"
      },
      "semconv": [
        "Messaging"
      ],
      "source_path": "instrumentation/spring/spring-jms/spring-jms-6.0",
      "target_versions": {
        "javaagent": [
          "org.springframework:spring-jms:[6.0.0,)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "messaging.destination.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.message.id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.operation",
                  "type": "STRING"
                },
                {
                  "name": "messaging.system",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CONSUMER"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enables capturing experimental span attribute `kafka.record.queue_time_ms`",
          "name": "otel.instrumentation.kafka.experimental-span-attributes",
          "type": "boolean"
        },
        {
          "default": "",
          "description": "A comma-separated list of header names to capture as span attributes.",
          "name": "otel.instrumentation.messaging.experimental.capture-headers",
          "type": "list"
        },
        {
          "default": false,
          "description": "Enables experimental receive telemetry, which will cause consumers to start a new trace, with only a span link connecting it to the producer trace.\n",
          "name": "otel.instrumentation.messaging.experimental.receive-telemetry.enabled",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables consumer messaging spans for Spring Kafka listeners.",
      "name": "spring-kafka-2.7",
      "scope": {
        "name": "io.opentelemetry.spring-kafka-2.7"
      },
      "semconv": [
        "Messaging"
      ],
      "source_path": "instrumentation/spring/spring-kafka-2.7",
      "target_versions": {
        "javaagent": [
          "org.springframework.kafka:spring-kafka:[2.7.0,)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "messaging.batch.message_count",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "messaging.client_id",
                  "type": "STRING"
                },
                {
                  "name": "messaging.destination.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.destination.partition.id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.kafka.consumer.group",
                  "type": "STRING"
                },
                {
                  "name": "messaging.kafka.message.key",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.kafka.message.offset",
                  "type": "LONG"
                },
                {
                  "name": "messaging.message.body.size",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "messaging.operation",
                  "type": "STRING"
                },
                {
                  "name": "messaging.system",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CONSUMER"
            }
          ],
          "when": "default"
        },
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "kafka.record.queue_time_ms",
                  "type": "LONG"
                },
                {
                  "name": "messaging.batch.message_count",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "messaging.client_id",
                  "type": "STRING"
                },
                {
                  "name": "messaging.destination.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.destination.partition.id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.kafka.consumer.group",
                  "type": "STRING"
                },
                {
                  "name": "messaging.kafka.message.key",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.kafka.message.offset",
                  "type": "LONG"
                },
                {
                  "name": "messaging.message.body.size",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "messaging.operation",
                  "type": "STRING"
                },
                {
                  "name": "messaging.system",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CONSUMER"
            }
          ],
          "when": "otel.instrumentation.kafka.experimental-span-attributes=true"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": "",
          "description": "A comma-separated list of header names to capture as span attributes.",
          "name": "otel.instrumentation.messaging.experimental.capture-headers",
          "type": "list"
        },
        {
          "default": false,
          "description": "Enables experimental receive telemetry, which will cause consumers to start a new trace, with only a span link connecting it to the producer trace.\n",
          "name": "otel.instrumentation.messaging.experimental.receive-telemetry.enabled",
          "type": "boolean"
        },
        {
          "default": false,
          "description": "Enables capturing experimental span attribute `messaging.pulsar.message.type` on PRODUCER spans.\n",
          "name": "otel.instrumentation.pulsar.experimental-span-attributes",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables consumer messaging spans for Spring Pulsar listeners.",
      "minimum_java_version": 17,
      "name": "spring-pulsar-1.0",
      "scope": {
        "name": "io.opentelemetry.spring-pulsar-1.0"
      },
      "semconv": [
        "Messaging"
      ],
      "source_path": "instrumentation/spring/spring-pulsar-1.0",
      "target_versions": {
        "javaagent": [
          "org.springframework.pulsar:spring-pulsar:[1.0.0,)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "messaging.destination.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.message.body.size",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "messaging.message.id",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.operation",
                  "type": "STRING"
                },
                {
                  "name": "messaging.system",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CONSUMER"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": "",
          "description": "A comma-separated list of header names to capture as span attributes.",
          "name": "otel.instrumentation.messaging.experimental.capture-headers",
          "type": "list"
        }
      ],
      "description": "This instrumentation enables consumer messaging spans for Spring RabbitMQ listeners.",
      "name": "spring-rabbit-1.0",
      "scope": {
        "name": "io.opentelemetry.spring-rabbit-1.0"
      },
      "semconv": [
        "Messaging"
      ],
      "source_path": "instrumentation/spring/spring-rabbit-1.0",
      "target_versions": {
        "javaagent": [
          "org.springframework.amqp:spring-rabbit:(,)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "messaging.destination.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "messaging.message.body.size",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "messaging.operation",
                  "type": "STRING"
                },
                {
                  "name": "messaging.system",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CONSUMER"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "description": "This instrumentation enables RPC client and RPC server spans for Spring RMI applications.",
      "name": "spring-rmi-4.0",
      "scope": {
        "name": "io.opentelemetry.spring-rmi-4.0"
      },
      "semconv": [
        "Aws"
      ],
      "source_path": "instrumentation/spring/spring-rmi-4.0",
      "target_versions": {
        "javaagent": [
          "org.springframework:spring-context:[4.0.0.RELEASE,6)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "rpc.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.service",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.system",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            },
            {
              "attributes": [
                {
                  "name": "rpc.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.service",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "rpc.system",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "SERVER"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Adds the experimental span attribute `job.system` with the value `spring_scheduling`.",
          "name": "otel.instrumentation.spring-scheduling.experimental-span-attributes",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables tracing for Spring Scheduling tasks.",
      "name": "spring-scheduling-3.1",
      "scope": {
        "name": "io.opentelemetry.spring-scheduling-3.1"
      },
      "semconv": [
        "Code"
      ],
      "source_path": "instrumentation/spring/spring-scheduling-3.1",
      "target_versions": {
        "javaagent": [
          "org.springframework:spring-context:[3.1.0.RELEASE,]"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "code.function",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "code.namespace",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "INTERNAL"
            }
          ],
          "when": "default"
        },
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "code.function",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "code.namespace",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "job.system",
                  "type": "STRING"
                }
              ],
              "span_kind": "INTERNAL"
            }
          ],
          "when": "otel.instrumentation.spring-scheduling.experimental-span-attributes=true"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enables capturing the enduser.id attribute.",
          "name": "otel.instrumentation.common.enduser.id.enabled",
          "type": "boolean"
        },
        {
          "default": false,
          "description": "Enables capturing the enduser.role attribute.",
          "name": "otel.instrumentation.common.enduser.role.enabled",
          "type": "boolean"
        },
        {
          "default": false,
          "description": "Enables capturing the enduser.scope attribute.",
          "name": "otel.instrumentation.common.enduser.scope.enabled",
          "type": "boolean"
        },
        {
          "default": "ROLE_",
          "description": "Prefix of granted authorities identifying roles to capture in the `enduser.role` semantic attribute.",
          "name": "otel.instrumentation.spring-security.enduser.role.granted-authority-prefix",
          "type": "string"
        },
        {
          "default": "SCOPE_",
          "description": "Prefix of granted authorities identifying scopes to capture in the `enduser.scopes` semantic attribute.",
          "name": "otel.instrumentation.spring-security.scope.role.granted-authority-prefix",
          "type": "string"
        }
      ],
      "description": "This instrumentation does not emit any telemetry on its own. Instead, it captures enduser attributes, and is only enabled when at least one of the `enduser` configurations is enabled.\nNOTE: The `enduser` attributes have been deprecated and will be removed in 3.0+ of the java agent.\n",
      "minimum_java_version": 17,
      "name": "spring-security-config-6.0",
      "scope": {
        "name": "io.opentelemetry.spring-security-config-6.0"
      },
      "semconv": [],
      "source_path": "instrumentation/spring/spring-security-config-6.0",
      "target_versions": {
        "javaagent": [
          "org.springframework.security:spring-security-config:[6.0.0,]"
        ],
        "library": [
          "io.projectreactor:reactor-core:3.5.0",
          "jakarta.servlet:jakarta.servlet-api:6.0.0",
          "org.springframework.security:spring-security-config:6.0.0",
          "org.springframework.security:spring-security-web:6.0.0",
          "org.springframework:spring-web:6.0.0"
        ]
      }
    },
    {
      "description": "This instrumentation provides a library integration that enables capturing HTTP client spans and metrics for Spring's RestTemplate. The agent integration enriches HTTP server spans and metrics with route information.\n",
      "name": "spring-web-3.1",
      "scope": {
        "name": "io.opentelemetry.spring-web-3.1"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/spring/spring-web/spring-web-3.1",
      "target_versions": {
        "javaagent": [
          "org.springframework:spring-web:[3.1.0.RELEASE,6)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "description": "This instrumentation enriches HTTP server spans and metrics with route information.",
      "name": "spring-web-6.0",
      "scope": {
        "name": "io.opentelemetry.spring-web-6.0"
      },
      "semconv": [],
      "source_path": "instrumentation/spring/spring-web/spring-web-6.0",
      "target_versions": {
        "javaagent": [
          "org.springframework:spring-web:[6.0.0,)"
        ]
      }
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enables the creation of experimental controller (INTERNAL) spans.",
          "name": "otel.instrumentation.common.experimental.controller-telemetry.enabled",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables HTTP client spans and metrics for Spring WebFlux 5.0. It also optionally enables experimental controller (INTERNAL) spans.\n",
      "name": "spring-webflux-5.0",
      "scope": {
        "name": "io.opentelemetry.spring-webflux-5.0"
      },
      "semconv": [
        "Code",
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/spring/spring-webflux/spring-webflux-5.0",
      "target_versions": {
        "javaagent": [
          "io.projectreactor.ipc:reactor-netty:[0.7.0.RELEASE,)",
          "io.projectreactor.netty:reactor-netty:[0.8.0.RELEASE,)",
          "org.springframework:spring-webflux:[5.0.0.RELEASE,)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            },
            {
              "attributes": [
                {
                  "name": "code.function",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "code.namespace",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "INTERNAL"
            }
          ],
          "when": "otel.instrumentation.common.experimental.controller-telemetry.enabled"
        }
      ]
    },
    {
      "description": "This instrumentation provides a library integration for the Spring WebFlux WebClient and Webflux server versions 5.3+ that enables HTTP client and server spans and metrics.\n",
      "name": "spring-webflux-5.3",
      "scope": {
        "name": "io.opentelemetry.spring-webflux-5.3"
      },
      "semconv": [
        "Client",
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/spring/spring-webflux/spring-webflux-5.3",
      "target_versions": {
        "library": [
          "org.springframework:spring-webflux:5.3.0"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            },
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "http.route",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.scheme",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "Duration of HTTP server requests.",
              "name": "http.server.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            },
            {
              "attributes": [
                {
                  "name": "client.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "http.route",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.path",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.query",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.scheme",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "user_agent.original",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "SERVER"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enables the creation of experimental controller (INTERNAL) spans.",
          "name": "otel.instrumentation.common.experimental.controller-telemetry.enabled",
          "type": "boolean"
        },
        {
          "default": false,
          "description": "Enables the creation of experimental view (INTERNAL) spans.",
          "name": "otel.instrumentation.common.experimental.view-telemetry.enabled",
          "type": "boolean"
        },
        {
          "default": false,
          "description": "Enables the capture of experimental span attributes `spring-webmvc-view-name` and `spring-webmvc.view.type`.\n",
          "name": "otel.instrumentation.spring-webmvc.experimental-span-attributes",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables optional Controller and View (INTERNAL) spans for Spring WebMVC 3.1+.\n",
      "name": "spring-webmvc-3.1",
      "scope": {
        "name": "io.opentelemetry.spring-webmvc-3.1"
      },
      "semconv": [
        "Code"
      ],
      "source_path": "instrumentation/spring/spring-webmvc/spring-webmvc-3.1",
      "target_versions": {
        "javaagent": [
          "org.springframework:spring-webmvc:[3.1.0.RELEASE,6)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "code.function",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "code.namespace",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "INTERNAL"
            }
          ],
          "when": "default"
        },
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "code.function",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "code.namespace",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "spring-webmvc.view.type",
                  "type": "STRING"
                }
              ],
              "span_kind": "INTERNAL"
            }
          ],
          "when": "otel.instrumentation.spring-webmvc.experimental-span-attributes=true"
        }
      ]
    },
    {
      "description": "This instrumentation provides a library integration for Spring WebMVC controllers, that enables the creation of HTTP server spans and metrics for requests processed by the Spring servlet container.\n",
      "name": "spring-webmvc-5.3",
      "scope": {
        "name": "io.opentelemetry.spring-webmvc-5.3"
      },
      "semconv": [
        "Client",
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/spring/spring-webmvc/spring-webmvc-5.3",
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "http.route",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.scheme",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "Duration of HTTP server requests.",
              "name": "http.server.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "client.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "http.route",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.path",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.query",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "url.scheme",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "user_agent.original",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "SERVER"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "configurations": [
        {
          "default": false,
          "description": "Enables the creation of experimental controller (INTERNAL) spans.",
          "name": "otel.instrumentation.common.experimental.controller-telemetry.enabled",
          "type": "boolean"
        },
        {
          "default": false,
          "description": "Enables the creation of experimental view (INTERNAL) spans.",
          "name": "otel.instrumentation.common.experimental.view-telemetry.enabled",
          "type": "boolean"
        },
        {
          "default": false,
          "description": "Enables the capture of experimental span attributes `spring-webmvc-view-name` and `spring-webmvc.view.type`.\n",
          "name": "otel.instrumentation.spring-webmvc.experimental-span-attributes",
          "type": "boolean"
        }
      ],
      "description": "This instrumentation enables optional Controller and View (INTERNAL) spans for Spring WebMVC 6.0+.\n",
      "minimum_java_version": 17,
      "name": "spring-webmvc-6.0",
      "scope": {
        "name": "io.opentelemetry.spring-webmvc-6.0"
      },
      "semconv": [
        "Code"
      ],
      "source_path": "instrumentation/spring/spring-webmvc/spring-webmvc-6.0",
      "target_versions": {
        "javaagent": [
          "org.springframework:spring-webmvc:[6.0.0,)"
        ]
      },
      "telemetry": [
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "code.function",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "code.namespace",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "INTERNAL"
            }
          ],
          "when": "default"
        },
        {
          "spans": [
            {
              "attributes": [
                {
                  "name": "code.function",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "code.namespace",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "spring-webmvc.view.type",
                  "type": "STRING"
                }
              ],
              "span_kind": "INTERNAL"
            }
          ],
          "when": "otel.instrumentation.spring-webmvc.experimental-span-attributes=true"
        }
      ]
    },
    {
      "disabled_by_default": true,
      "name": "spring-ws-2.0",
      "scope": {
        "name": "io.opentelemetry.spring-ws-2.0"
      },
      "semconv": [],
      "source_path": "instrumentation/spring/spring-ws-2.0",
      "target_versions": {
        "javaagent": [
          "org.springframework.ws:spring-ws-core:[2.0.0.RELEASE,]"
        ]
      }
    },
    {
      "name": "spymemcached-2.12",
      "scope": {
        "name": "io.opentelemetry.spymemcached-2.12"
      },
      "semconv": [],
      "source_path": "instrumentation/spymemcached-2.12",
      "target_versions": {
        "javaagent": [
          "net.spy:spymemcached:[2.12.0,)"
        ]
      }
    },
    {
      "name": "struts-2.3",
      "scope": {
        "name": "io.opentelemetry.struts-2.3"
      },
      "semconv": [],
      "source_path": "instrumentation/struts/struts-2.3",
      "target_versions": {
        "javaagent": [
          "org.apache.struts:struts2-core:[2.1.0,7)"
        ]
      }
    },
    {
      "minimum_java_version": 17,
      "name": "struts-7.0",
      "scope": {
        "name": "io.opentelemetry.struts-7.0"
      },
      "semconv": [],
      "source_path": "instrumentation/struts/struts-7.0",
      "target_versions": {
        "javaagent": [
          "org.apache.struts:struts2-core:[7.0.0,)"
        ]
      }
    },
    {
      "name": "tapestry-5.4",
      "scope": {
        "name": "io.opentelemetry.tapestry-5.4"
      },
      "semconv": [],
      "source_path": "instrumentation/tapestry-5.4",
      "target_versions": {
        "javaagent": [
          "org.apache.tapestry:tapestry-core:[5.4.0,)"
        ]
      }
    },
    {
      "minimum_java_version": 11,
      "name": "tomcat-10.0",
      "scope": {
        "name": "io.opentelemetry.tomcat-10.0"
      },
      "semconv": [],
      "source_path": "instrumentation/tomcat/tomcat-10.0",
      "target_versions": {
        "javaagent": [
          "org.apache.tomcat.embed:tomcat-embed-core:[10,)"
        ]
      }
    },
    {
      "name": "tomcat-7.0",
      "scope": {
        "name": "io.opentelemetry.tomcat-7.0"
      },
      "semconv": [],
      "source_path": "instrumentation/tomcat/tomcat-7.0",
      "target_versions": {
        "javaagent": [
          "org.apache.tomcat.embed:tomcat-embed-core:[7.0.4, 10)"
        ]
      }
    },
    {
      "name": "tomcat-jdbc",
      "scope": {
        "name": "io.opentelemetry.tomcat-jdbc"
      },
      "semconv": [
        "Database Client"
      ],
      "source_path": "instrumentation/tomcat/tomcat-jdbc",
      "target_versions": {
        "javaagent": [
          "org.apache.tomcat:tomcat-jdbc:[8.5.0,)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.client.connection.state",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The number of connections that are currently in state described by the state attribute.",
              "name": "db.client.connection.count",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "connection"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The maximum number of idle open connections allowed.",
              "name": "db.client.connection.idle.max",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "connection"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The minimum number of idle open connections allowed.",
              "name": "db.client.connection.idle.min",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "connection"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The maximum number of open connections allowed.",
              "name": "db.client.connection.max",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "connection"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The number of current pending requests for an open connection.",
              "name": "db.client.connection.pending_requests",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "request"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "name": "twilio-6.6",
      "scope": {
        "name": "io.opentelemetry.twilio-6.6"
      },
      "semconv": [],
      "source_path": "instrumentation/twilio-6.6",
      "target_versions": {
        "javaagent": [
          "com.twilio.sdk:twilio:(,8.0.0)"
        ]
      }
    },
    {
      "name": "undertow-1.4",
      "scope": {
        "name": "io.opentelemetry.undertow-1.4"
      },
      "semconv": [],
      "source_path": "instrumentation/undertow-1.4",
      "target_versions": {
        "javaagent": [
          "io.undertow:undertow-core:[1.4.0.Final,)"
        ]
      }
    },
    {
      "name": "vaadin-14.2",
      "scope": {
        "name": "io.opentelemetry.vaadin-14.2"
      },
      "semconv": [],
      "source_path": "instrumentation/vaadin-14.2",
      "target_versions": {
        "javaagent": [
          "com.vaadin:flow-server:[2.2.0,3)",
          "com.vaadin:flow-server:[3.1.0,)"
        ]
      }
    },
    {
      "name": "vertx-http-client-3.0",
      "scope": {
        "name": "io.opentelemetry.vertx-http-client-3.0"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/vertx/vertx-http-client/vertx-http-client-3.0",
      "target_versions": {
        "javaagent": [
          "io.vertx:vertx-core:[3.0.0,4.0.0)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "name": "vertx-http-client-4.0",
      "scope": {
        "name": "io.opentelemetry.vertx-http-client-4.0"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/vertx/vertx-http-client/vertx-http-client-4.0",
      "target_versions": {
        "javaagent": [
          "io.vertx:vertx-core:[4.0.0,5)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "minimum_java_version": 11,
      "name": "vertx-http-client-5.0",
      "scope": {
        "name": "io.opentelemetry.vertx-http-client-5.0"
      },
      "semconv": [
        "Database Client",
        "HTTP"
      ],
      "source_path": "instrumentation/vertx/vertx-http-client/vertx-http-client-5.0",
      "target_versions": {
        "javaagent": [
          "io.vertx:vertx-core:[5.0.0,)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of HTTP client requests.",
              "name": "http.client.request.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.request.method_original",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "http.response.status_code",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "network.protocol.version",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "url.full",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "name": "vertx-kafka-client-3.6",
      "scope": {
        "name": "io.opentelemetry.vertx-kafka-client-3.6"
      },
      "semconv": [],
      "source_path": "instrumentation/vertx/vertx-kafka-client-3.6",
      "target_versions": {
        "javaagent": [
          "io.vertx:vertx-kafka-client:[3.5.1,)"
        ]
      }
    },
    {
      "name": "vertx-redis-client-4.0",
      "scope": {
        "name": "io.opentelemetry.vertx-redis-client-4.0"
      },
      "semconv": [
        "Database Client"
      ],
      "source_path": "instrumentation/vertx/vertx-redis-client-4.0",
      "target_versions": {
        "javaagent": [
          "io.vertx:vertx-redis-client:[4.0.0,)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "db.namespace",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of database client operations.",
              "name": "db.client.operation.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.namespace",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.query.text",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.system.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "network.peer.port",
                  "semconv": true,
                  "type": "LONG"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "name": "vertx-rx-java-3.5",
      "scope": {
        "name": "io.opentelemetry.vertx-rx-java-3.5"
      },
      "semconv": [],
      "source_path": "instrumentation/vertx/vertx-rx-java-3.5",
      "target_versions": {
        "javaagent": [
          "io.vertx:vertx-rx-java2:[3.5.0,)"
        ]
      }
    },
    {
      "name": "vertx-sql-client-4.0",
      "scope": {
        "name": "io.opentelemetry.vertx-sql-client-4.0"
      },
      "semconv": [
        "Database Client"
      ],
      "source_path": "instrumentation/vertx/vertx-sql-client/vertx-sql-client-4.0",
      "target_versions": {
        "javaagent": [
          "io.vertx:vertx-sql-client:[4.0.0,5)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "db.collection.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.namespace",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of database client operations.",
              "name": "db.client.operation.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.collection.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.namespace",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.query.text",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.response.status_code",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "minimum_java_version": 11,
      "name": "vertx-sql-client-5.0",
      "scope": {
        "name": "io.opentelemetry.vertx-sql-client-5.0"
      },
      "semconv": [
        "Database Client"
      ],
      "source_path": "instrumentation/vertx/vertx-sql-client/vertx-sql-client-5.0",
      "target_versions": {
        "javaagent": [
          "io.vertx:vertx-sql-client:[5.0.0,)"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "db.collection.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.namespace",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "description": "Duration of database client operations.",
              "name": "db.client.operation.duration",
              "semconv": true,
              "type": "HISTOGRAM",
              "unit": "s"
            }
          ],
          "spans": [
            {
              "attributes": [
                {
                  "name": "db.collection.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.namespace",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.operation.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.query.text",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.response.status_code",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "error.type",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.address",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "server.port",
                  "semconv": true,
                  "type": "LONG"
                }
              ],
              "span_kind": "CLIENT"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "name": "vertx-web-3.0",
      "scope": {
        "name": "io.opentelemetry.vertx-web-3.0"
      },
      "semconv": [],
      "source_path": "instrumentation/vertx/vertx-web-3.0",
      "target_versions": {
        "javaagent": [
          "io.vertx:vertx-web:[3.0.0,)"
        ]
      }
    },
    {
      "description": "Instrumentation for the vibur-dbcp library, which provides connection pool metrics.",
      "name": "vibur-dbcp-11.0",
      "scope": {
        "name": "io.opentelemetry.vibur-dbcp-11.0"
      },
      "semconv": [
        "Database Client"
      ],
      "source_path": "instrumentation/vibur-dbcp-11.0",
      "target_versions": {
        "javaagent": [
          "org.vibur:vibur-dbcp:[11.0,)"
        ],
        "library": [
          "org.vibur:vibur-dbcp:11.0"
        ]
      },
      "telemetry": [
        {
          "metrics": [
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                },
                {
                  "name": "db.client.connection.state",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The number of connections that are currently in state described by the state attribute.",
              "name": "db.client.connection.count",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "connection"
            },
            {
              "attributes": [
                {
                  "name": "db.client.connection.pool.name",
                  "semconv": true,
                  "type": "STRING"
                }
              ],
              "description": "The maximum number of open connections allowed.",
              "name": "db.client.connection.max",
              "semconv": true,
              "type": "LONG_SUM",
              "unit": "connection"
            }
          ],
          "when": "default"
        }
      ]
    },
    {
      "name": "wicket-8.0",
      "scope": {
        "name": "io.opentelemetry.wicket-8.0"
      },
      "semconv": [],
      "source_path": "instrumentation/wicket-8.0",
      "target_versions": {
        "javaagent": [
          "org.apache.wicket:wicket:[8.0.0,]"
        ]
      }
    },
    {
      "name": "xxl-job-1.9.2",
      "scope": {
        "name": "io.opentelemetry.xxl-job-1.9.2"
      },
      "semconv": [],
      "source_path": "instrumentation/xxl-job/xxl-job-1.9.2",
      "target_versions": {
        "javaagent": [
          "com.xuxueli:xxl-job-core:[1.9.2, 2.1.2)"
        ]
      }
    },
    {
      "name": "xxl-job-2.1.2",
      "scope": {
        "name": "io.opentelemetry.xxl-job-2.1.2"
      },
      "semconv": [],
      "source_path": "instrumentation/xxl-job/xxl-job-2.1.2",
      "target_versions": {
        "javaagent": [
          "com.xuxueli:xxl-job-core:[2.1.2,2.3.0)"
        ]
      }
    },
    {
      "name": "xxl-job-2.3.0",
      "scope": {
        "name": "io.opentelemetry.xxl-job-2.3.0"
      },
      "semconv": [],
      "source_path": "instrumentation/xxl-job/xxl-job-2.3.0",
      "target_versions": {
        "javaagent": [
          "com.xuxueli:xxl-job-core:[2.3.0,)"
        ]
      }
    },
    {
      "name": "zio-2.0",
      "scope": {
        "name": "io.opentelemetry.zio-2.0"
      },
      "semconv": [],
      "source_path": "instrumentation/zio/zio-2.0",
      "target_versions": {
        "javaagent": [
          "dev.zio:zio_2.12:[2.0.0,)",
          "dev.zio:zio_2.13:[2.0.0,)",
          "dev.zio:zio_3:[2.0.0,)"
        ]
      }
    }
  ]
}